function L_(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();function P_(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function g1(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var Yx={exports:{}},fc={},Qx={exports:{}},Ze={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var jk;function z_(){if(jk)return Ze;jk=1;var n=Symbol.for("react.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),i=Symbol.for("react.context"),a=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),c=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;function f(z){return z===null||typeof z!="object"?null:(z=p&&z[p]||z["@@iterator"],typeof z=="function"?z:null)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y=Object.assign,b={};function w(z,q,ue){this.props=z,this.context=q,this.refs=b,this.updater=ue||g}w.prototype.isReactComponent={},w.prototype.setState=function(z,q){if(typeof z!="object"&&typeof z!="function"&&z!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,z,q,"setState")},w.prototype.forceUpdate=function(z){this.updater.enqueueForceUpdate(this,z,"forceUpdate")};function v(){}v.prototype=w.prototype;function S(z,q,ue){this.props=z,this.context=q,this.refs=b,this.updater=ue||g}var $=S.prototype=new v;$.constructor=S,y($,w.prototype),$.isPureReactComponent=!0;var N=Array.isArray,T=Object.prototype.hasOwnProperty,R={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};function P(z,q,ue){var de,he={},me=null,be=null;if(q!=null)for(de in q.ref!==void 0&&(be=q.ref),q.key!==void 0&&(me=""+q.key),q)T.call(q,de)&&!L.hasOwnProperty(de)&&(he[de]=q[de]);var Se=arguments.length-2;if(Se===1)he.children=ue;else if(1<Se){for(var Ne=Array(Se),ze=0;ze<Se;ze++)Ne[ze]=arguments[ze+2];he.children=Ne}if(z&&z.defaultProps)for(de in Se=z.defaultProps,Se)he[de]===void 0&&(he[de]=Se[de]);return{$$typeof:n,type:z,key:me,ref:be,props:he,_owner:R.current}}function O(z,q){return{$$typeof:n,type:z.type,key:q,ref:z.ref,props:z.props,_owner:z._owner}}function F(z){return typeof z=="object"&&z!==null&&z.$$typeof===n}function E(z){var q={"=":"=0",":":"=2"};return"$"+z.replace(/[=:]/g,function(ue){return q[ue]})}var W=/\/+/g;function X(z,q){return typeof z=="object"&&z!==null&&z.key!=null?E(""+z.key):q.toString(36)}function ee(z,q,ue,de,he){var me=typeof z;(me==="undefined"||me==="boolean")&&(z=null);var be=!1;if(z===null)be=!0;else switch(me){case"string":case"number":be=!0;break;case"object":switch(z.$$typeof){case n:case e:be=!0}}if(be)return be=z,he=he(be),z=de===""?"."+X(be,0):de,N(he)?(ue="",z!=null&&(ue=z.replace(W,"$&/")+"/"),ee(he,q,ue,"",function(ze){return ze})):he!=null&&(F(he)&&(he=O(he,ue+(!he.key||be&&be.key===he.key?"":(""+he.key).replace(W,"$&/")+"/")+z)),q.push(he)),1;if(be=0,de=de===""?".":de+":",N(z))for(var Se=0;Se<z.length;Se++){me=z[Se];var Ne=de+X(me,Se);be+=ee(me,q,ue,Ne,he)}else if(Ne=f(z),typeof Ne=="function")for(z=Ne.call(z),Se=0;!(me=z.next()).done;)me=me.value,Ne=de+X(me,Se++),be+=ee(me,q,ue,Ne,he);else if(me==="object")throw q=String(z),Error("Objects are not valid as a React child (found: "+(q==="[object Object]"?"object with keys {"+Object.keys(z).join(", ")+"}":q)+"). If you meant to render a collection of children, use an array instead.");return be}function Q(z,q,ue){if(z==null)return z;var de=[],he=0;return ee(z,de,"","",function(me){return q.call(ue,me,he++)}),de}function te(z){if(z._status===-1){var q=z._result;q=q(),q.then(function(ue){(z._status===0||z._status===-1)&&(z._status=1,z._result=ue)},function(ue){(z._status===0||z._status===-1)&&(z._status=2,z._result=ue)}),z._status===-1&&(z._status=0,z._result=q)}if(z._status===1)return z._result.default;throw z._result}var oe={current:null},U={transition:null},Z={ReactCurrentDispatcher:oe,ReactCurrentBatchConfig:U,ReactCurrentOwner:R};function J(){throw Error("act(...) is not supported in production builds of React.")}return Ze.Children={map:Q,forEach:function(z,q,ue){Q(z,function(){q.apply(this,arguments)},ue)},count:function(z){var q=0;return Q(z,function(){q++}),q},toArray:function(z){return Q(z,function(q){return q})||[]},only:function(z){if(!F(z))throw Error("React.Children.only expected to receive a single React element child.");return z}},Ze.Component=w,Ze.Fragment=t,Ze.Profiler=r,Ze.PureComponent=S,Ze.StrictMode=s,Ze.Suspense=l,Ze.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Z,Ze.act=J,Ze.cloneElement=function(z,q,ue){if(z==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+z+".");var de=y({},z.props),he=z.key,me=z.ref,be=z._owner;if(q!=null){if(q.ref!==void 0&&(me=q.ref,be=R.current),q.key!==void 0&&(he=""+q.key),z.type&&z.type.defaultProps)var Se=z.type.defaultProps;for(Ne in q)T.call(q,Ne)&&!L.hasOwnProperty(Ne)&&(de[Ne]=q[Ne]===void 0&&Se!==void 0?Se[Ne]:q[Ne])}var Ne=arguments.length-2;if(Ne===1)de.children=ue;else if(1<Ne){Se=Array(Ne);for(var ze=0;ze<Ne;ze++)Se[ze]=arguments[ze+2];de.children=Se}return{$$typeof:n,type:z.type,key:he,ref:me,props:de,_owner:be}},Ze.createContext=function(z){return z={$$typeof:i,_currentValue:z,_currentValue2:z,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},z.Provider={$$typeof:o,_context:z},z.Consumer=z},Ze.createElement=P,Ze.createFactory=function(z){var q=P.bind(null,z);return q.type=z,q},Ze.createRef=function(){return{current:null}},Ze.forwardRef=function(z){return{$$typeof:a,render:z}},Ze.isValidElement=F,Ze.lazy=function(z){return{$$typeof:h,_payload:{_status:-1,_result:z},_init:te}},Ze.memo=function(z,q){return{$$typeof:c,type:z,compare:q===void 0?null:q}},Ze.startTransition=function(z){var q=U.transition;U.transition={};try{z()}finally{U.transition=q}},Ze.unstable_act=J,Ze.useCallback=function(z,q){return oe.current.useCallback(z,q)},Ze.useContext=function(z){return oe.current.useContext(z)},Ze.useDebugValue=function(){},Ze.useDeferredValue=function(z){return oe.current.useDeferredValue(z)},Ze.useEffect=function(z,q){return oe.current.useEffect(z,q)},Ze.useId=function(){return oe.current.useId()},Ze.useImperativeHandle=function(z,q,ue){return oe.current.useImperativeHandle(z,q,ue)},Ze.useInsertionEffect=function(z,q){return oe.current.useInsertionEffect(z,q)},Ze.useLayoutEffect=function(z,q){return oe.current.useLayoutEffect(z,q)},Ze.useMemo=function(z,q){return oe.current.useMemo(z,q)},Ze.useReducer=function(z,q,ue){return oe.current.useReducer(z,q,ue)},Ze.useRef=function(z){return oe.current.useRef(z)},Ze.useState=function(z){return oe.current.useState(z)},Ze.useSyncExternalStore=function(z,q,ue){return oe.current.useSyncExternalStore(z,q,ue)},Ze.useTransition=function(){return oe.current.useTransition()},Ze.version="18.3.1",Ze}var qk;function y1(){return qk||(qk=1,Qx.exports=z_()),Qx.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Kk;function M_(){if(Kk)return fc;Kk=1;var n=y1(),e=Symbol.for("react.element"),t=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,r=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function i(a,l,c){var h,p={},f=null,g=null;c!==void 0&&(f=""+c),l.key!==void 0&&(f=""+l.key),l.ref!==void 0&&(g=l.ref);for(h in l)s.call(l,h)&&!o.hasOwnProperty(h)&&(p[h]=l[h]);if(a&&a.defaultProps)for(h in l=a.defaultProps,l)p[h]===void 0&&(p[h]=l[h]);return{$$typeof:e,type:a,key:f,ref:g,props:p,_owner:r.current}}return fc.Fragment=t,fc.jsx=i,fc.jsxs=i,fc}var Xk;function B_(){return Xk||(Xk=1,Yx.exports=M_()),Yx.exports}var Tn=B_(),ro=y1(),Vp={},Zx={exports:{}},cs={},Jx={exports:{}},e0={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Yk;function V_(){return Yk||(Yk=1,function(n){function e(U,Z){var J=U.length;U.push(Z);e:for(;0<J;){var z=J-1>>>1,q=U[z];if(0<r(q,Z))U[z]=Z,U[J]=q,J=z;else break e}}function t(U){return U.length===0?null:U[0]}function s(U){if(U.length===0)return null;var Z=U[0],J=U.pop();if(J!==Z){U[0]=J;e:for(var z=0,q=U.length,ue=q>>>1;z<ue;){var de=2*(z+1)-1,he=U[de],me=de+1,be=U[me];if(0>r(he,J))me<q&&0>r(be,he)?(U[z]=be,U[me]=J,z=me):(U[z]=he,U[de]=J,z=de);else if(me<q&&0>r(be,J))U[z]=be,U[me]=J,z=me;else break e}}return Z}function r(U,Z){var J=U.sortIndex-Z.sortIndex;return J!==0?J:U.id-Z.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;n.unstable_now=function(){return o.now()}}else{var i=Date,a=i.now();n.unstable_now=function(){return i.now()-a}}var l=[],c=[],h=1,p=null,f=3,g=!1,y=!1,b=!1,w=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,S=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function $(U){for(var Z=t(c);Z!==null;){if(Z.callback===null)s(c);else if(Z.startTime<=U)s(c),Z.sortIndex=Z.expirationTime,e(l,Z);else break;Z=t(c)}}function N(U){if(b=!1,$(U),!y)if(t(l)!==null)y=!0,te(T);else{var Z=t(c);Z!==null&&oe(N,Z.startTime-U)}}function T(U,Z){y=!1,b&&(b=!1,v(P),P=-1),g=!0;var J=f;try{for($(Z),p=t(l);p!==null&&(!(p.expirationTime>Z)||U&&!E());){var z=p.callback;if(typeof z=="function"){p.callback=null,f=p.priorityLevel;var q=z(p.expirationTime<=Z);Z=n.unstable_now(),typeof q=="function"?p.callback=q:p===t(l)&&s(l),$(Z)}else s(l);p=t(l)}if(p!==null)var ue=!0;else{var de=t(c);de!==null&&oe(N,de.startTime-Z),ue=!1}return ue}finally{p=null,f=J,g=!1}}var R=!1,L=null,P=-1,O=5,F=-1;function E(){return!(n.unstable_now()-F<O)}function W(){if(L!==null){var U=n.unstable_now();F=U;var Z=!0;try{Z=L(!0,U)}finally{Z?X():(R=!1,L=null)}}else R=!1}var X;if(typeof S=="function")X=function(){S(W)};else if(typeof MessageChannel<"u"){var ee=new MessageChannel,Q=ee.port2;ee.port1.onmessage=W,X=function(){Q.postMessage(null)}}else X=function(){w(W,0)};function te(U){L=U,R||(R=!0,X())}function oe(U,Z){P=w(function(){U(n.unstable_now())},Z)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(U){U.callback=null},n.unstable_continueExecution=function(){y||g||(y=!0,te(T))},n.unstable_forceFrameRate=function(U){0>U||125<U?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):O=0<U?Math.floor(1e3/U):5},n.unstable_getCurrentPriorityLevel=function(){return f},n.unstable_getFirstCallbackNode=function(){return t(l)},n.unstable_next=function(U){switch(f){case 1:case 2:case 3:var Z=3;break;default:Z=f}var J=f;f=Z;try{return U()}finally{f=J}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(U,Z){switch(U){case 1:case 2:case 3:case 4:case 5:break;default:U=3}var J=f;f=U;try{return Z()}finally{f=J}},n.unstable_scheduleCallback=function(U,Z,J){var z=n.unstable_now();switch(typeof J=="object"&&J!==null?(J=J.delay,J=typeof J=="number"&&0<J?z+J:z):J=z,U){case 1:var q=-1;break;case 2:q=250;break;case 5:q=1073741823;break;case 4:q=1e4;break;default:q=5e3}return q=J+q,U={id:h++,callback:Z,priorityLevel:U,startTime:J,expirationTime:q,sortIndex:-1},J>z?(U.sortIndex=J,e(c,U),t(l)===null&&U===t(c)&&(b?(v(P),P=-1):b=!0,oe(N,J-z))):(U.sortIndex=q,e(l,U),y||g||(y=!0,te(T))),U},n.unstable_shouldYield=E,n.unstable_wrapCallback=function(U){var Z=f;return function(){var J=f;f=Z;try{return U.apply(this,arguments)}finally{f=J}}}}(e0)),e0}var Qk;function W_(){return Qk||(Qk=1,Jx.exports=V_()),Jx.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Zk;function U_(){if(Zk)return cs;Zk=1;var n=y1(),e=W_();function t(u){for(var d="https://reactjs.org/docs/error-decoder.html?invariant="+u,m=1;m<arguments.length;m++)d+="&args[]="+encodeURIComponent(arguments[m]);return"Minified React error #"+u+"; visit "+d+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var s=new Set,r={};function o(u,d){i(u,d),i(u+"Capture",d)}function i(u,d){for(r[u]=d,u=0;u<d.length;u++)s.add(d[u])}var a=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),l=Object.prototype.hasOwnProperty,c=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},p={};function f(u){return l.call(p,u)?!0:l.call(h,u)?!1:c.test(u)?p[u]=!0:(h[u]=!0,!1)}function g(u,d,m,x){if(m!==null&&m.type===0)return!1;switch(typeof d){case"function":case"symbol":return!0;case"boolean":return x?!1:m!==null?!m.acceptsBooleans:(u=u.toLowerCase().slice(0,5),u!=="data-"&&u!=="aria-");default:return!1}}function y(u,d,m,x){if(d===null||typeof d>"u"||g(u,d,m,x))return!0;if(x)return!1;if(m!==null)switch(m.type){case 3:return!d;case 4:return d===!1;case 5:return isNaN(d);case 6:return isNaN(d)||1>d}return!1}function b(u,d,m,x,k,C,A){this.acceptsBooleans=d===2||d===3||d===4,this.attributeName=x,this.attributeNamespace=k,this.mustUseProperty=m,this.propertyName=u,this.type=d,this.sanitizeURL=C,this.removeEmptyString=A}var w={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(u){w[u]=new b(u,0,!1,u,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(u){var d=u[0];w[d]=new b(d,1,!1,u[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(u){w[u]=new b(u,2,!1,u.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(u){w[u]=new b(u,2,!1,u,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(u){w[u]=new b(u,3,!1,u.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(u){w[u]=new b(u,3,!0,u,null,!1,!1)}),["capture","download"].forEach(function(u){w[u]=new b(u,4,!1,u,null,!1,!1)}),["cols","rows","size","span"].forEach(function(u){w[u]=new b(u,6,!1,u,null,!1,!1)}),["rowSpan","start"].forEach(function(u){w[u]=new b(u,5,!1,u.toLowerCase(),null,!1,!1)});var v=/[\-:]([a-z])/g;function S(u){return u[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(u){var d=u.replace(v,S);w[d]=new b(d,1,!1,u,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(u){var d=u.replace(v,S);w[d]=new b(d,1,!1,u,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(u){var d=u.replace(v,S);w[d]=new b(d,1,!1,u,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(u){w[u]=new b(u,1,!1,u.toLowerCase(),null,!1,!1)}),w.xlinkHref=new b("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(u){w[u]=new b(u,1,!1,u.toLowerCase(),null,!0,!0)});function $(u,d,m,x){var k=w.hasOwnProperty(d)?w[d]:null;(k!==null?k.type!==0:x||!(2<d.length)||d[0]!=="o"&&d[0]!=="O"||d[1]!=="n"&&d[1]!=="N")&&(y(d,m,k,x)&&(m=null),x||k===null?f(d)&&(m===null?u.removeAttribute(d):u.setAttribute(d,""+m)):k.mustUseProperty?u[k.propertyName]=m===null?k.type===3?!1:"":m:(d=k.attributeName,x=k.attributeNamespace,m===null?u.removeAttribute(d):(k=k.type,m=k===3||k===4&&m===!0?"":""+m,x?u.setAttributeNS(x,d,m):u.setAttribute(d,m))))}var N=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,T=Symbol.for("react.element"),R=Symbol.for("react.portal"),L=Symbol.for("react.fragment"),P=Symbol.for("react.strict_mode"),O=Symbol.for("react.profiler"),F=Symbol.for("react.provider"),E=Symbol.for("react.context"),W=Symbol.for("react.forward_ref"),X=Symbol.for("react.suspense"),ee=Symbol.for("react.suspense_list"),Q=Symbol.for("react.memo"),te=Symbol.for("react.lazy"),oe=Symbol.for("react.offscreen"),U=Symbol.iterator;function Z(u){return u===null||typeof u!="object"?null:(u=U&&u[U]||u["@@iterator"],typeof u=="function"?u:null)}var J=Object.assign,z;function q(u){if(z===void 0)try{throw Error()}catch(m){var d=m.stack.trim().match(/\n( *(at )?)/);z=d&&d[1]||""}return`
`+z+u}var ue=!1;function de(u,d){if(!u||ue)return"";ue=!0;var m=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(d)if(d=function(){throw Error()},Object.defineProperty(d.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(d,[])}catch(ae){var x=ae}Reflect.construct(u,[],d)}else{try{d.call()}catch(ae){x=ae}u.call(d.prototype)}else{try{throw Error()}catch(ae){x=ae}u()}}catch(ae){if(ae&&x&&typeof ae.stack=="string"){for(var k=ae.stack.split(`
`),C=x.stack.split(`
`),A=k.length-1,M=C.length-1;1<=A&&0<=M&&k[A]!==C[M];)M--;for(;1<=A&&0<=M;A--,M--)if(k[A]!==C[M]){if(A!==1||M!==1)do if(A--,M--,0>M||k[A]!==C[M]){var H=`
`+k[A].replace(" at new "," at ");return u.displayName&&H.includes("<anonymous>")&&(H=H.replace("<anonymous>",u.displayName)),H}while(1<=A&&0<=M);break}}}finally{ue=!1,Error.prepareStackTrace=m}return(u=u?u.displayName||u.name:"")?q(u):""}function he(u){switch(u.tag){case 5:return q(u.type);case 16:return q("Lazy");case 13:return q("Suspense");case 19:return q("SuspenseList");case 0:case 2:case 15:return u=de(u.type,!1),u;case 11:return u=de(u.type.render,!1),u;case 1:return u=de(u.type,!0),u;default:return""}}function me(u){if(u==null)return null;if(typeof u=="function")return u.displayName||u.name||null;if(typeof u=="string")return u;switch(u){case L:return"Fragment";case R:return"Portal";case O:return"Profiler";case P:return"StrictMode";case X:return"Suspense";case ee:return"SuspenseList"}if(typeof u=="object")switch(u.$$typeof){case E:return(u.displayName||"Context")+".Consumer";case F:return(u._context.displayName||"Context")+".Provider";case W:var d=u.render;return u=u.displayName,u||(u=d.displayName||d.name||"",u=u!==""?"ForwardRef("+u+")":"ForwardRef"),u;case Q:return d=u.displayName||null,d!==null?d:me(u.type)||"Memo";case te:d=u._payload,u=u._init;try{return me(u(d))}catch{}}return null}function be(u){var d=u.type;switch(u.tag){case 24:return"Cache";case 9:return(d.displayName||"Context")+".Consumer";case 10:return(d._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return u=d.render,u=u.displayName||u.name||"",d.displayName||(u!==""?"ForwardRef("+u+")":"ForwardRef");case 7:return"Fragment";case 5:return d;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return me(d);case 8:return d===P?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof d=="function")return d.displayName||d.name||null;if(typeof d=="string")return d}return null}function Se(u){switch(typeof u){case"boolean":case"number":case"string":case"undefined":return u;case"object":return u;default:return""}}function Ne(u){var d=u.type;return(u=u.nodeName)&&u.toLowerCase()==="input"&&(d==="checkbox"||d==="radio")}function ze(u){var d=Ne(u)?"checked":"value",m=Object.getOwnPropertyDescriptor(u.constructor.prototype,d),x=""+u[d];if(!u.hasOwnProperty(d)&&typeof m<"u"&&typeof m.get=="function"&&typeof m.set=="function"){var k=m.get,C=m.set;return Object.defineProperty(u,d,{configurable:!0,get:function(){return k.call(this)},set:function(A){x=""+A,C.call(this,A)}}),Object.defineProperty(u,d,{enumerable:m.enumerable}),{getValue:function(){return x},setValue:function(A){x=""+A},stopTracking:function(){u._valueTracker=null,delete u[d]}}}}function Ue(u){u._valueTracker||(u._valueTracker=ze(u))}function rt(u){if(!u)return!1;var d=u._valueTracker;if(!d)return!0;var m=d.getValue(),x="";return u&&(x=Ne(u)?u.checked?"true":"false":u.value),u=x,u!==m?(d.setValue(u),!0):!1}function it(u){if(u=u||(typeof document<"u"?document:void 0),typeof u>"u")return null;try{return u.activeElement||u.body}catch{return u.body}}function wt(u,d){var m=d.checked;return J({},d,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:m??u._wrapperState.initialChecked})}function ct(u,d){var m=d.defaultValue==null?"":d.defaultValue,x=d.checked!=null?d.checked:d.defaultChecked;m=Se(d.value!=null?d.value:m),u._wrapperState={initialChecked:x,initialValue:m,controlled:d.type==="checkbox"||d.type==="radio"?d.checked!=null:d.value!=null}}function at(u,d){d=d.checked,d!=null&&$(u,"checked",d,!1)}function gt(u,d){at(u,d);var m=Se(d.value),x=d.type;if(m!=null)x==="number"?(m===0&&u.value===""||u.value!=m)&&(u.value=""+m):u.value!==""+m&&(u.value=""+m);else if(x==="submit"||x==="reset"){u.removeAttribute("value");return}d.hasOwnProperty("value")?bs(u,d.type,m):d.hasOwnProperty("defaultValue")&&bs(u,d.type,Se(d.defaultValue)),d.checked==null&&d.defaultChecked!=null&&(u.defaultChecked=!!d.defaultChecked)}function yt(u,d,m){if(d.hasOwnProperty("value")||d.hasOwnProperty("defaultValue")){var x=d.type;if(!(x!=="submit"&&x!=="reset"||d.value!==void 0&&d.value!==null))return;d=""+u._wrapperState.initialValue,m||d===u.value||(u.value=d),u.defaultValue=d}m=u.name,m!==""&&(u.name=""),u.defaultChecked=!!u._wrapperState.initialChecked,m!==""&&(u.name=m)}function bs(u,d,m){(d!=="number"||it(u.ownerDocument)!==u)&&(m==null?u.defaultValue=""+u._wrapperState.initialValue:u.defaultValue!==""+m&&(u.defaultValue=""+m))}var Tt=Array.isArray;function Hn(u,d,m,x){if(u=u.options,d){d={};for(var k=0;k<m.length;k++)d["$"+m[k]]=!0;for(m=0;m<u.length;m++)k=d.hasOwnProperty("$"+u[m].value),u[m].selected!==k&&(u[m].selected=k),k&&x&&(u[m].defaultSelected=!0)}else{for(m=""+Se(m),d=null,k=0;k<u.length;k++){if(u[k].value===m){u[k].selected=!0,x&&(u[k].defaultSelected=!0);return}d!==null||u[k].disabled||(d=u[k])}d!==null&&(d.selected=!0)}}function Cn(u,d){if(d.dangerouslySetInnerHTML!=null)throw Error(t(91));return J({},d,{value:void 0,defaultValue:void 0,children:""+u._wrapperState.initialValue})}function Nr(u,d){var m=d.value;if(m==null){if(m=d.children,d=d.defaultValue,m!=null){if(d!=null)throw Error(t(92));if(Tt(m)){if(1<m.length)throw Error(t(93));m=m[0]}d=m}d==null&&(d=""),m=d}u._wrapperState={initialValue:Se(m)}}function rs(u,d){var m=Se(d.value),x=Se(d.defaultValue);m!=null&&(m=""+m,m!==u.value&&(u.value=m),d.defaultValue==null&&u.defaultValue!==m&&(u.defaultValue=m)),x!=null&&(u.defaultValue=""+x)}function Fs(u){var d=u.textContent;d===u._wrapperState.initialValue&&d!==""&&d!==null&&(u.value=d)}function er(u){switch(u){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Ls(u,d){return u==null||u==="http://www.w3.org/1999/xhtml"?er(d):u==="http://www.w3.org/2000/svg"&&d==="foreignObject"?"http://www.w3.org/1999/xhtml":u}var vs,$o=function(u){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(d,m,x,k){MSApp.execUnsafeLocalFunction(function(){return u(d,m,x,k)})}:u}(function(u,d){if(u.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in u)u.innerHTML=d;else{for(vs=vs||document.createElement("div"),vs.innerHTML="<svg>"+d.valueOf().toString()+"</svg>",d=vs.firstChild;u.firstChild;)u.removeChild(u.firstChild);for(;d.firstChild;)u.appendChild(d.firstChild)}});function Kr(u,d){if(d){var m=u.firstChild;if(m&&m===u.lastChild&&m.nodeType===3){m.nodeValue=d;return}}u.textContent=d}var Xr={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},iy=["Webkit","ms","Moz","O"];Object.keys(Xr).forEach(function(u){iy.forEach(function(d){d=d+u.charAt(0).toUpperCase()+u.substring(1),Xr[d]=Xr[u]})});function Si(u,d,m){return d==null||typeof d=="boolean"||d===""?"":m||typeof d!="number"||d===0||Xr.hasOwnProperty(u)&&Xr[u]?(""+d).trim():d+"px"}function _h(u,d){u=u.style;for(var m in d)if(d.hasOwnProperty(m)){var x=m.indexOf("--")===0,k=Si(m,d[m],x);m==="float"&&(m="cssFloat"),x?u.setProperty(m,k):u[m]=k}}var ay=J({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ly(u,d){if(d){if(ay[u]&&(d.children!=null||d.dangerouslySetInnerHTML!=null))throw Error(t(137,u));if(d.dangerouslySetInnerHTML!=null){if(d.children!=null)throw Error(t(60));if(typeof d.dangerouslySetInnerHTML!="object"||!("__html"in d.dangerouslySetInnerHTML))throw Error(t(61))}if(d.style!=null&&typeof d.style!="object")throw Error(t(62))}}function uy(u,d){if(u.indexOf("-")===-1)return typeof d.is=="string";switch(u){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var cy=null;function dy(u){return u=u.target||u.srcElement||window,u.correspondingUseElement&&(u=u.correspondingUseElement),u.nodeType===3?u.parentNode:u}var hy=null,Ta=null,Ea=null;function uv(u){if(u=Ju(u)){if(typeof hy!="function")throw Error(t(280));var d=u.stateNode;d&&(d=np(d),hy(u.stateNode,u.type,d))}}function cv(u){Ta?Ea?Ea.push(u):Ea=[u]:Ta=u}function dv(){if(Ta){var u=Ta,d=Ea;if(Ea=Ta=null,uv(u),d)for(u=0;u<d.length;u++)uv(d[u])}}function hv(u,d){return u(d)}function pv(){}var py=!1;function fv(u,d,m){if(py)return u(d,m);py=!0;try{return hv(u,d,m)}finally{py=!1,(Ta!==null||Ea!==null)&&(pv(),dv())}}function Du(u,d){var m=u.stateNode;if(m===null)return null;var x=np(m);if(x===null)return null;m=x[d];e:switch(d){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(x=!x.disabled)||(u=u.type,x=!(u==="button"||u==="input"||u==="select"||u==="textarea")),u=!x;break e;default:u=!1}if(u)return null;if(m&&typeof m!="function")throw Error(t(231,d,typeof m));return m}var fy=!1;if(a)try{var _u={};Object.defineProperty(_u,"passive",{get:function(){fy=!0}}),window.addEventListener("test",_u,_u),window.removeEventListener("test",_u,_u)}catch{fy=!1}function UA(u,d,m,x,k,C,A,M,H){var ae=Array.prototype.slice.call(arguments,3);try{d.apply(m,ae)}catch(ye){this.onError(ye)}}var Ou=!1,Oh=null,Fh=!1,my=null,GA={onError:function(u){Ou=!0,Oh=u}};function HA(u,d,m,x,k,C,A,M,H){Ou=!1,Oh=null,UA.apply(GA,arguments)}function jA(u,d,m,x,k,C,A,M,H){if(HA.apply(this,arguments),Ou){if(Ou){var ae=Oh;Ou=!1,Oh=null}else throw Error(t(198));Fh||(Fh=!0,my=ae)}}function ki(u){var d=u,m=u;if(u.alternate)for(;d.return;)d=d.return;else{u=d;do d=u,d.flags&4098&&(m=d.return),u=d.return;while(u)}return d.tag===3?m:null}function mv(u){if(u.tag===13){var d=u.memoizedState;if(d===null&&(u=u.alternate,u!==null&&(d=u.memoizedState)),d!==null)return d.dehydrated}return null}function gv(u){if(ki(u)!==u)throw Error(t(188))}function qA(u){var d=u.alternate;if(!d){if(d=ki(u),d===null)throw Error(t(188));return d!==u?null:u}for(var m=u,x=d;;){var k=m.return;if(k===null)break;var C=k.alternate;if(C===null){if(x=k.return,x!==null){m=x;continue}break}if(k.child===C.child){for(C=k.child;C;){if(C===m)return gv(k),u;if(C===x)return gv(k),d;C=C.sibling}throw Error(t(188))}if(m.return!==x.return)m=k,x=C;else{for(var A=!1,M=k.child;M;){if(M===m){A=!0,m=k,x=C;break}if(M===x){A=!0,x=k,m=C;break}M=M.sibling}if(!A){for(M=C.child;M;){if(M===m){A=!0,m=C,x=k;break}if(M===x){A=!0,x=C,m=k;break}M=M.sibling}if(!A)throw Error(t(189))}}if(m.alternate!==x)throw Error(t(190))}if(m.tag!==3)throw Error(t(188));return m.stateNode.current===m?u:d}function yv(u){return u=qA(u),u!==null?xv(u):null}function xv(u){if(u.tag===5||u.tag===6)return u;for(u=u.child;u!==null;){var d=xv(u);if(d!==null)return d;u=u.sibling}return null}var wv=e.unstable_scheduleCallback,bv=e.unstable_cancelCallback,KA=e.unstable_shouldYield,XA=e.unstable_requestPaint,Gt=e.unstable_now,YA=e.unstable_getCurrentPriorityLevel,gy=e.unstable_ImmediatePriority,vv=e.unstable_UserBlockingPriority,Lh=e.unstable_NormalPriority,QA=e.unstable_LowPriority,Sv=e.unstable_IdlePriority,Ph=null,Cr=null;function ZA(u){if(Cr&&typeof Cr.onCommitFiberRoot=="function")try{Cr.onCommitFiberRoot(Ph,u,void 0,(u.current.flags&128)===128)}catch{}}var tr=Math.clz32?Math.clz32:tD,JA=Math.log,eD=Math.LN2;function tD(u){return u>>>=0,u===0?32:31-(JA(u)/eD|0)|0}var zh=64,Mh=4194304;function Fu(u){switch(u&-u){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return u&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return u&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return u}}function Bh(u,d){var m=u.pendingLanes;if(m===0)return 0;var x=0,k=u.suspendedLanes,C=u.pingedLanes,A=m&268435455;if(A!==0){var M=A&~k;M!==0?x=Fu(M):(C&=A,C!==0&&(x=Fu(C)))}else A=m&~k,A!==0?x=Fu(A):C!==0&&(x=Fu(C));if(x===0)return 0;if(d!==0&&d!==x&&!(d&k)&&(k=x&-x,C=d&-d,k>=C||k===16&&(C&4194240)!==0))return d;if(x&4&&(x|=m&16),d=u.entangledLanes,d!==0)for(u=u.entanglements,d&=x;0<d;)m=31-tr(d),k=1<<m,x|=u[m],d&=~k;return x}function nD(u,d){switch(u){case 1:case 2:case 4:return d+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return d+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function sD(u,d){for(var m=u.suspendedLanes,x=u.pingedLanes,k=u.expirationTimes,C=u.pendingLanes;0<C;){var A=31-tr(C),M=1<<A,H=k[A];H===-1?(!(M&m)||M&x)&&(k[A]=nD(M,d)):H<=d&&(u.expiredLanes|=M),C&=~M}}function yy(u){return u=u.pendingLanes&-1073741825,u!==0?u:u&1073741824?1073741824:0}function kv(){var u=zh;return zh<<=1,!(zh&4194240)&&(zh=64),u}function xy(u){for(var d=[],m=0;31>m;m++)d.push(u);return d}function Lu(u,d,m){u.pendingLanes|=d,d!==536870912&&(u.suspendedLanes=0,u.pingedLanes=0),u=u.eventTimes,d=31-tr(d),u[d]=m}function rD(u,d){var m=u.pendingLanes&~d;u.pendingLanes=d,u.suspendedLanes=0,u.pingedLanes=0,u.expiredLanes&=d,u.mutableReadLanes&=d,u.entangledLanes&=d,d=u.entanglements;var x=u.eventTimes;for(u=u.expirationTimes;0<m;){var k=31-tr(m),C=1<<k;d[k]=0,x[k]=-1,u[k]=-1,m&=~C}}function wy(u,d){var m=u.entangledLanes|=d;for(u=u.entanglements;m;){var x=31-tr(m),k=1<<x;k&d|u[x]&d&&(u[x]|=d),m&=~k}}var pt=0;function Nv(u){return u&=-u,1<u?4<u?u&268435455?16:536870912:4:1}var Cv,by,$v,Iv,Tv,vy=!1,Vh=[],Io=null,To=null,Eo=null,Pu=new Map,zu=new Map,Ro=[],oD="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ev(u,d){switch(u){case"focusin":case"focusout":Io=null;break;case"dragenter":case"dragleave":To=null;break;case"mouseover":case"mouseout":Eo=null;break;case"pointerover":case"pointerout":Pu.delete(d.pointerId);break;case"gotpointercapture":case"lostpointercapture":zu.delete(d.pointerId)}}function Mu(u,d,m,x,k,C){return u===null||u.nativeEvent!==C?(u={blockedOn:d,domEventName:m,eventSystemFlags:x,nativeEvent:C,targetContainers:[k]},d!==null&&(d=Ju(d),d!==null&&by(d)),u):(u.eventSystemFlags|=x,d=u.targetContainers,k!==null&&d.indexOf(k)===-1&&d.push(k),u)}function iD(u,d,m,x,k){switch(d){case"focusin":return Io=Mu(Io,u,d,m,x,k),!0;case"dragenter":return To=Mu(To,u,d,m,x,k),!0;case"mouseover":return Eo=Mu(Eo,u,d,m,x,k),!0;case"pointerover":var C=k.pointerId;return Pu.set(C,Mu(Pu.get(C)||null,u,d,m,x,k)),!0;case"gotpointercapture":return C=k.pointerId,zu.set(C,Mu(zu.get(C)||null,u,d,m,x,k)),!0}return!1}function Rv(u){var d=Ni(u.target);if(d!==null){var m=ki(d);if(m!==null){if(d=m.tag,d===13){if(d=mv(m),d!==null){u.blockedOn=d,Tv(u.priority,function(){$v(m)});return}}else if(d===3&&m.stateNode.current.memoizedState.isDehydrated){u.blockedOn=m.tag===3?m.stateNode.containerInfo:null;return}}}u.blockedOn=null}function Wh(u){if(u.blockedOn!==null)return!1;for(var d=u.targetContainers;0<d.length;){var m=ky(u.domEventName,u.eventSystemFlags,d[0],u.nativeEvent);if(m===null){m=u.nativeEvent;var x=new m.constructor(m.type,m);cy=x,m.target.dispatchEvent(x),cy=null}else return d=Ju(m),d!==null&&by(d),u.blockedOn=m,!1;d.shift()}return!0}function Av(u,d,m){Wh(u)&&m.delete(d)}function aD(){vy=!1,Io!==null&&Wh(Io)&&(Io=null),To!==null&&Wh(To)&&(To=null),Eo!==null&&Wh(Eo)&&(Eo=null),Pu.forEach(Av),zu.forEach(Av)}function Bu(u,d){u.blockedOn===d&&(u.blockedOn=null,vy||(vy=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,aD)))}function Vu(u){function d(k){return Bu(k,u)}if(0<Vh.length){Bu(Vh[0],u);for(var m=1;m<Vh.length;m++){var x=Vh[m];x.blockedOn===u&&(x.blockedOn=null)}}for(Io!==null&&Bu(Io,u),To!==null&&Bu(To,u),Eo!==null&&Bu(Eo,u),Pu.forEach(d),zu.forEach(d),m=0;m<Ro.length;m++)x=Ro[m],x.blockedOn===u&&(x.blockedOn=null);for(;0<Ro.length&&(m=Ro[0],m.blockedOn===null);)Rv(m),m.blockedOn===null&&Ro.shift()}var Ra=N.ReactCurrentBatchConfig,Uh=!0;function lD(u,d,m,x){var k=pt,C=Ra.transition;Ra.transition=null;try{pt=1,Sy(u,d,m,x)}finally{pt=k,Ra.transition=C}}function uD(u,d,m,x){var k=pt,C=Ra.transition;Ra.transition=null;try{pt=4,Sy(u,d,m,x)}finally{pt=k,Ra.transition=C}}function Sy(u,d,m,x){if(Uh){var k=ky(u,d,m,x);if(k===null)By(u,d,x,Gh,m),Ev(u,x);else if(iD(k,u,d,m,x))x.stopPropagation();else if(Ev(u,x),d&4&&-1<oD.indexOf(u)){for(;k!==null;){var C=Ju(k);if(C!==null&&Cv(C),C=ky(u,d,m,x),C===null&&By(u,d,x,Gh,m),C===k)break;k=C}k!==null&&x.stopPropagation()}else By(u,d,x,null,m)}}var Gh=null;function ky(u,d,m,x){if(Gh=null,u=dy(x),u=Ni(u),u!==null)if(d=ki(u),d===null)u=null;else if(m=d.tag,m===13){if(u=mv(d),u!==null)return u;u=null}else if(m===3){if(d.stateNode.current.memoizedState.isDehydrated)return d.tag===3?d.stateNode.containerInfo:null;u=null}else d!==u&&(u=null);return Gh=u,null}function Dv(u){switch(u){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(YA()){case gy:return 1;case vv:return 4;case Lh:case QA:return 16;case Sv:return 536870912;default:return 16}default:return 16}}var Ao=null,Ny=null,Hh=null;function _v(){if(Hh)return Hh;var u,d=Ny,m=d.length,x,k="value"in Ao?Ao.value:Ao.textContent,C=k.length;for(u=0;u<m&&d[u]===k[u];u++);var A=m-u;for(x=1;x<=A&&d[m-x]===k[C-x];x++);return Hh=k.slice(u,1<x?1-x:void 0)}function jh(u){var d=u.keyCode;return"charCode"in u?(u=u.charCode,u===0&&d===13&&(u=13)):u=d,u===10&&(u=13),32<=u||u===13?u:0}function qh(){return!0}function Ov(){return!1}function Ss(u){function d(m,x,k,C,A){this._reactName=m,this._targetInst=k,this.type=x,this.nativeEvent=C,this.target=A,this.currentTarget=null;for(var M in u)u.hasOwnProperty(M)&&(m=u[M],this[M]=m?m(C):C[M]);return this.isDefaultPrevented=(C.defaultPrevented!=null?C.defaultPrevented:C.returnValue===!1)?qh:Ov,this.isPropagationStopped=Ov,this}return J(d.prototype,{preventDefault:function(){this.defaultPrevented=!0;var m=this.nativeEvent;m&&(m.preventDefault?m.preventDefault():typeof m.returnValue!="unknown"&&(m.returnValue=!1),this.isDefaultPrevented=qh)},stopPropagation:function(){var m=this.nativeEvent;m&&(m.stopPropagation?m.stopPropagation():typeof m.cancelBubble!="unknown"&&(m.cancelBubble=!0),this.isPropagationStopped=qh)},persist:function(){},isPersistent:qh}),d}var Aa={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(u){return u.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Cy=Ss(Aa),Wu=J({},Aa,{view:0,detail:0}),cD=Ss(Wu),$y,Iy,Uu,Kh=J({},Wu,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Ey,button:0,buttons:0,relatedTarget:function(u){return u.relatedTarget===void 0?u.fromElement===u.srcElement?u.toElement:u.fromElement:u.relatedTarget},movementX:function(u){return"movementX"in u?u.movementX:(u!==Uu&&(Uu&&u.type==="mousemove"?($y=u.screenX-Uu.screenX,Iy=u.screenY-Uu.screenY):Iy=$y=0,Uu=u),$y)},movementY:function(u){return"movementY"in u?u.movementY:Iy}}),Fv=Ss(Kh),dD=J({},Kh,{dataTransfer:0}),hD=Ss(dD),pD=J({},Wu,{relatedTarget:0}),Ty=Ss(pD),fD=J({},Aa,{animationName:0,elapsedTime:0,pseudoElement:0}),mD=Ss(fD),gD=J({},Aa,{clipboardData:function(u){return"clipboardData"in u?u.clipboardData:window.clipboardData}}),yD=Ss(gD),xD=J({},Aa,{data:0}),Lv=Ss(xD),wD={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},bD={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},vD={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function SD(u){var d=this.nativeEvent;return d.getModifierState?d.getModifierState(u):(u=vD[u])?!!d[u]:!1}function Ey(){return SD}var kD=J({},Wu,{key:function(u){if(u.key){var d=wD[u.key]||u.key;if(d!=="Unidentified")return d}return u.type==="keypress"?(u=jh(u),u===13?"Enter":String.fromCharCode(u)):u.type==="keydown"||u.type==="keyup"?bD[u.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Ey,charCode:function(u){return u.type==="keypress"?jh(u):0},keyCode:function(u){return u.type==="keydown"||u.type==="keyup"?u.keyCode:0},which:function(u){return u.type==="keypress"?jh(u):u.type==="keydown"||u.type==="keyup"?u.keyCode:0}}),ND=Ss(kD),CD=J({},Kh,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Pv=Ss(CD),$D=J({},Wu,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Ey}),ID=Ss($D),TD=J({},Aa,{propertyName:0,elapsedTime:0,pseudoElement:0}),ED=Ss(TD),RD=J({},Kh,{deltaX:function(u){return"deltaX"in u?u.deltaX:"wheelDeltaX"in u?-u.wheelDeltaX:0},deltaY:function(u){return"deltaY"in u?u.deltaY:"wheelDeltaY"in u?-u.wheelDeltaY:"wheelDelta"in u?-u.wheelDelta:0},deltaZ:0,deltaMode:0}),AD=Ss(RD),DD=[9,13,27,32],Ry=a&&"CompositionEvent"in window,Gu=null;a&&"documentMode"in document&&(Gu=document.documentMode);var _D=a&&"TextEvent"in window&&!Gu,zv=a&&(!Ry||Gu&&8<Gu&&11>=Gu),Mv=" ",Bv=!1;function Vv(u,d){switch(u){case"keyup":return DD.indexOf(d.keyCode)!==-1;case"keydown":return d.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wv(u){return u=u.detail,typeof u=="object"&&"data"in u?u.data:null}var Da=!1;function OD(u,d){switch(u){case"compositionend":return Wv(d);case"keypress":return d.which!==32?null:(Bv=!0,Mv);case"textInput":return u=d.data,u===Mv&&Bv?null:u;default:return null}}function FD(u,d){if(Da)return u==="compositionend"||!Ry&&Vv(u,d)?(u=_v(),Hh=Ny=Ao=null,Da=!1,u):null;switch(u){case"paste":return null;case"keypress":if(!(d.ctrlKey||d.altKey||d.metaKey)||d.ctrlKey&&d.altKey){if(d.char&&1<d.char.length)return d.char;if(d.which)return String.fromCharCode(d.which)}return null;case"compositionend":return zv&&d.locale!=="ko"?null:d.data;default:return null}}var LD={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Uv(u){var d=u&&u.nodeName&&u.nodeName.toLowerCase();return d==="input"?!!LD[u.type]:d==="textarea"}function Gv(u,d,m,x){cv(x),d=Jh(d,"onChange"),0<d.length&&(m=new Cy("onChange","change",null,m,x),u.push({event:m,listeners:d}))}var Hu=null,ju=null;function PD(u){lS(u,0)}function Xh(u){var d=Pa(u);if(rt(d))return u}function zD(u,d){if(u==="change")return d}var Hv=!1;if(a){var Ay;if(a){var Dy="oninput"in document;if(!Dy){var jv=document.createElement("div");jv.setAttribute("oninput","return;"),Dy=typeof jv.oninput=="function"}Ay=Dy}else Ay=!1;Hv=Ay&&(!document.documentMode||9<document.documentMode)}function qv(){Hu&&(Hu.detachEvent("onpropertychange",Kv),ju=Hu=null)}function Kv(u){if(u.propertyName==="value"&&Xh(ju)){var d=[];Gv(d,ju,u,dy(u)),fv(PD,d)}}function MD(u,d,m){u==="focusin"?(qv(),Hu=d,ju=m,Hu.attachEvent("onpropertychange",Kv)):u==="focusout"&&qv()}function BD(u){if(u==="selectionchange"||u==="keyup"||u==="keydown")return Xh(ju)}function VD(u,d){if(u==="click")return Xh(d)}function WD(u,d){if(u==="input"||u==="change")return Xh(d)}function UD(u,d){return u===d&&(u!==0||1/u===1/d)||u!==u&&d!==d}var nr=typeof Object.is=="function"?Object.is:UD;function qu(u,d){if(nr(u,d))return!0;if(typeof u!="object"||u===null||typeof d!="object"||d===null)return!1;var m=Object.keys(u),x=Object.keys(d);if(m.length!==x.length)return!1;for(x=0;x<m.length;x++){var k=m[x];if(!l.call(d,k)||!nr(u[k],d[k]))return!1}return!0}function Xv(u){for(;u&&u.firstChild;)u=u.firstChild;return u}function Yv(u,d){var m=Xv(u);u=0;for(var x;m;){if(m.nodeType===3){if(x=u+m.textContent.length,u<=d&&x>=d)return{node:m,offset:d-u};u=x}e:{for(;m;){if(m.nextSibling){m=m.nextSibling;break e}m=m.parentNode}m=void 0}m=Xv(m)}}function Qv(u,d){return u&&d?u===d?!0:u&&u.nodeType===3?!1:d&&d.nodeType===3?Qv(u,d.parentNode):"contains"in u?u.contains(d):u.compareDocumentPosition?!!(u.compareDocumentPosition(d)&16):!1:!1}function Zv(){for(var u=window,d=it();d instanceof u.HTMLIFrameElement;){try{var m=typeof d.contentWindow.location.href=="string"}catch{m=!1}if(m)u=d.contentWindow;else break;d=it(u.document)}return d}function _y(u){var d=u&&u.nodeName&&u.nodeName.toLowerCase();return d&&(d==="input"&&(u.type==="text"||u.type==="search"||u.type==="tel"||u.type==="url"||u.type==="password")||d==="textarea"||u.contentEditable==="true")}function GD(u){var d=Zv(),m=u.focusedElem,x=u.selectionRange;if(d!==m&&m&&m.ownerDocument&&Qv(m.ownerDocument.documentElement,m)){if(x!==null&&_y(m)){if(d=x.start,u=x.end,u===void 0&&(u=d),"selectionStart"in m)m.selectionStart=d,m.selectionEnd=Math.min(u,m.value.length);else if(u=(d=m.ownerDocument||document)&&d.defaultView||window,u.getSelection){u=u.getSelection();var k=m.textContent.length,C=Math.min(x.start,k);x=x.end===void 0?C:Math.min(x.end,k),!u.extend&&C>x&&(k=x,x=C,C=k),k=Yv(m,C);var A=Yv(m,x);k&&A&&(u.rangeCount!==1||u.anchorNode!==k.node||u.anchorOffset!==k.offset||u.focusNode!==A.node||u.focusOffset!==A.offset)&&(d=d.createRange(),d.setStart(k.node,k.offset),u.removeAllRanges(),C>x?(u.addRange(d),u.extend(A.node,A.offset)):(d.setEnd(A.node,A.offset),u.addRange(d)))}}for(d=[],u=m;u=u.parentNode;)u.nodeType===1&&d.push({element:u,left:u.scrollLeft,top:u.scrollTop});for(typeof m.focus=="function"&&m.focus(),m=0;m<d.length;m++)u=d[m],u.element.scrollLeft=u.left,u.element.scrollTop=u.top}}var HD=a&&"documentMode"in document&&11>=document.documentMode,_a=null,Oy=null,Ku=null,Fy=!1;function Jv(u,d,m){var x=m.window===m?m.document:m.nodeType===9?m:m.ownerDocument;Fy||_a==null||_a!==it(x)||(x=_a,"selectionStart"in x&&_y(x)?x={start:x.selectionStart,end:x.selectionEnd}:(x=(x.ownerDocument&&x.ownerDocument.defaultView||window).getSelection(),x={anchorNode:x.anchorNode,anchorOffset:x.anchorOffset,focusNode:x.focusNode,focusOffset:x.focusOffset}),Ku&&qu(Ku,x)||(Ku=x,x=Jh(Oy,"onSelect"),0<x.length&&(d=new Cy("onSelect","select",null,d,m),u.push({event:d,listeners:x}),d.target=_a)))}function Yh(u,d){var m={};return m[u.toLowerCase()]=d.toLowerCase(),m["Webkit"+u]="webkit"+d,m["Moz"+u]="moz"+d,m}var Oa={animationend:Yh("Animation","AnimationEnd"),animationiteration:Yh("Animation","AnimationIteration"),animationstart:Yh("Animation","AnimationStart"),transitionend:Yh("Transition","TransitionEnd")},Ly={},eS={};a&&(eS=document.createElement("div").style,"AnimationEvent"in window||(delete Oa.animationend.animation,delete Oa.animationiteration.animation,delete Oa.animationstart.animation),"TransitionEvent"in window||delete Oa.transitionend.transition);function Qh(u){if(Ly[u])return Ly[u];if(!Oa[u])return u;var d=Oa[u],m;for(m in d)if(d.hasOwnProperty(m)&&m in eS)return Ly[u]=d[m];return u}var tS=Qh("animationend"),nS=Qh("animationiteration"),sS=Qh("animationstart"),rS=Qh("transitionend"),oS=new Map,iS="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Do(u,d){oS.set(u,d),o(d,[u])}for(var Py=0;Py<iS.length;Py++){var zy=iS[Py],jD=zy.toLowerCase(),qD=zy[0].toUpperCase()+zy.slice(1);Do(jD,"on"+qD)}Do(tS,"onAnimationEnd"),Do(nS,"onAnimationIteration"),Do(sS,"onAnimationStart"),Do("dblclick","onDoubleClick"),Do("focusin","onFocus"),Do("focusout","onBlur"),Do(rS,"onTransitionEnd"),i("onMouseEnter",["mouseout","mouseover"]),i("onMouseLeave",["mouseout","mouseover"]),i("onPointerEnter",["pointerout","pointerover"]),i("onPointerLeave",["pointerout","pointerover"]),o("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),o("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),o("onBeforeInput",["compositionend","keypress","textInput","paste"]),o("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),o("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),o("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Xu="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),KD=new Set("cancel close invalid load scroll toggle".split(" ").concat(Xu));function aS(u,d,m){var x=u.type||"unknown-event";u.currentTarget=m,jA(x,d,void 0,u),u.currentTarget=null}function lS(u,d){d=(d&4)!==0;for(var m=0;m<u.length;m++){var x=u[m],k=x.event;x=x.listeners;e:{var C=void 0;if(d)for(var A=x.length-1;0<=A;A--){var M=x[A],H=M.instance,ae=M.currentTarget;if(M=M.listener,H!==C&&k.isPropagationStopped())break e;aS(k,M,ae),C=H}else for(A=0;A<x.length;A++){if(M=x[A],H=M.instance,ae=M.currentTarget,M=M.listener,H!==C&&k.isPropagationStopped())break e;aS(k,M,ae),C=H}}}if(Fh)throw u=my,Fh=!1,my=null,u}function Nt(u,d){var m=d[jy];m===void 0&&(m=d[jy]=new Set);var x=u+"__bubble";m.has(x)||(uS(d,u,2,!1),m.add(x))}function My(u,d,m){var x=0;d&&(x|=4),uS(m,u,x,d)}var Zh="_reactListening"+Math.random().toString(36).slice(2);function Yu(u){if(!u[Zh]){u[Zh]=!0,s.forEach(function(m){m!=="selectionchange"&&(KD.has(m)||My(m,!1,u),My(m,!0,u))});var d=u.nodeType===9?u:u.ownerDocument;d===null||d[Zh]||(d[Zh]=!0,My("selectionchange",!1,d))}}function uS(u,d,m,x){switch(Dv(d)){case 1:var k=lD;break;case 4:k=uD;break;default:k=Sy}m=k.bind(null,d,m,u),k=void 0,!fy||d!=="touchstart"&&d!=="touchmove"&&d!=="wheel"||(k=!0),x?k!==void 0?u.addEventListener(d,m,{capture:!0,passive:k}):u.addEventListener(d,m,!0):k!==void 0?u.addEventListener(d,m,{passive:k}):u.addEventListener(d,m,!1)}function By(u,d,m,x,k){var C=x;if(!(d&1)&&!(d&2)&&x!==null)e:for(;;){if(x===null)return;var A=x.tag;if(A===3||A===4){var M=x.stateNode.containerInfo;if(M===k||M.nodeType===8&&M.parentNode===k)break;if(A===4)for(A=x.return;A!==null;){var H=A.tag;if((H===3||H===4)&&(H=A.stateNode.containerInfo,H===k||H.nodeType===8&&H.parentNode===k))return;A=A.return}for(;M!==null;){if(A=Ni(M),A===null)return;if(H=A.tag,H===5||H===6){x=C=A;continue e}M=M.parentNode}}x=x.return}fv(function(){var ae=C,ye=dy(m),xe=[];e:{var ge=oS.get(u);if(ge!==void 0){var Ie=Cy,Ae=u;switch(u){case"keypress":if(jh(m)===0)break e;case"keydown":case"keyup":Ie=ND;break;case"focusin":Ae="focus",Ie=Ty;break;case"focusout":Ae="blur",Ie=Ty;break;case"beforeblur":case"afterblur":Ie=Ty;break;case"click":if(m.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":Ie=Fv;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":Ie=hD;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":Ie=ID;break;case tS:case nS:case sS:Ie=mD;break;case rS:Ie=ED;break;case"scroll":Ie=cD;break;case"wheel":Ie=AD;break;case"copy":case"cut":case"paste":Ie=yD;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":Ie=Pv}var Oe=(d&4)!==0,Ht=!Oe&&u==="scroll",re=Oe?ge!==null?ge+"Capture":null:ge;Oe=[];for(var Y=ae,ie;Y!==null;){ie=Y;var we=ie.stateNode;if(ie.tag===5&&we!==null&&(ie=we,re!==null&&(we=Du(Y,re),we!=null&&Oe.push(Qu(Y,we,ie)))),Ht)break;Y=Y.return}0<Oe.length&&(ge=new Ie(ge,Ae,null,m,ye),xe.push({event:ge,listeners:Oe}))}}if(!(d&7)){e:{if(ge=u==="mouseover"||u==="pointerover",Ie=u==="mouseout"||u==="pointerout",ge&&m!==cy&&(Ae=m.relatedTarget||m.fromElement)&&(Ni(Ae)||Ae[Yr]))break e;if((Ie||ge)&&(ge=ye.window===ye?ye:(ge=ye.ownerDocument)?ge.defaultView||ge.parentWindow:window,Ie?(Ae=m.relatedTarget||m.toElement,Ie=ae,Ae=Ae?Ni(Ae):null,Ae!==null&&(Ht=ki(Ae),Ae!==Ht||Ae.tag!==5&&Ae.tag!==6)&&(Ae=null)):(Ie=null,Ae=ae),Ie!==Ae)){if(Oe=Fv,we="onMouseLeave",re="onMouseEnter",Y="mouse",(u==="pointerout"||u==="pointerover")&&(Oe=Pv,we="onPointerLeave",re="onPointerEnter",Y="pointer"),Ht=Ie==null?ge:Pa(Ie),ie=Ae==null?ge:Pa(Ae),ge=new Oe(we,Y+"leave",Ie,m,ye),ge.target=Ht,ge.relatedTarget=ie,we=null,Ni(ye)===ae&&(Oe=new Oe(re,Y+"enter",Ae,m,ye),Oe.target=ie,Oe.relatedTarget=Ht,we=Oe),Ht=we,Ie&&Ae)t:{for(Oe=Ie,re=Ae,Y=0,ie=Oe;ie;ie=Fa(ie))Y++;for(ie=0,we=re;we;we=Fa(we))ie++;for(;0<Y-ie;)Oe=Fa(Oe),Y--;for(;0<ie-Y;)re=Fa(re),ie--;for(;Y--;){if(Oe===re||re!==null&&Oe===re.alternate)break t;Oe=Fa(Oe),re=Fa(re)}Oe=null}else Oe=null;Ie!==null&&cS(xe,ge,Ie,Oe,!1),Ae!==null&&Ht!==null&&cS(xe,Ht,Ae,Oe,!0)}}e:{if(ge=ae?Pa(ae):window,Ie=ge.nodeName&&ge.nodeName.toLowerCase(),Ie==="select"||Ie==="input"&&ge.type==="file")var Fe=zD;else if(Uv(ge))if(Hv)Fe=WD;else{Fe=BD;var Me=MD}else(Ie=ge.nodeName)&&Ie.toLowerCase()==="input"&&(ge.type==="checkbox"||ge.type==="radio")&&(Fe=VD);if(Fe&&(Fe=Fe(u,ae))){Gv(xe,Fe,m,ye);break e}Me&&Me(u,ge,ae),u==="focusout"&&(Me=ge._wrapperState)&&Me.controlled&&ge.type==="number"&&bs(ge,"number",ge.value)}switch(Me=ae?Pa(ae):window,u){case"focusin":(Uv(Me)||Me.contentEditable==="true")&&(_a=Me,Oy=ae,Ku=null);break;case"focusout":Ku=Oy=_a=null;break;case"mousedown":Fy=!0;break;case"contextmenu":case"mouseup":case"dragend":Fy=!1,Jv(xe,m,ye);break;case"selectionchange":if(HD)break;case"keydown":case"keyup":Jv(xe,m,ye)}var Be;if(Ry)e:{switch(u){case"compositionstart":var We="onCompositionStart";break e;case"compositionend":We="onCompositionEnd";break e;case"compositionupdate":We="onCompositionUpdate";break e}We=void 0}else Da?Vv(u,m)&&(We="onCompositionEnd"):u==="keydown"&&m.keyCode===229&&(We="onCompositionStart");We&&(zv&&m.locale!=="ko"&&(Da||We!=="onCompositionStart"?We==="onCompositionEnd"&&Da&&(Be=_v()):(Ao=ye,Ny="value"in Ao?Ao.value:Ao.textContent,Da=!0)),Me=Jh(ae,We),0<Me.length&&(We=new Lv(We,u,null,m,ye),xe.push({event:We,listeners:Me}),Be?We.data=Be:(Be=Wv(m),Be!==null&&(We.data=Be)))),(Be=_D?OD(u,m):FD(u,m))&&(ae=Jh(ae,"onBeforeInput"),0<ae.length&&(ye=new Lv("onBeforeInput","beforeinput",null,m,ye),xe.push({event:ye,listeners:ae}),ye.data=Be))}lS(xe,d)})}function Qu(u,d,m){return{instance:u,listener:d,currentTarget:m}}function Jh(u,d){for(var m=d+"Capture",x=[];u!==null;){var k=u,C=k.stateNode;k.tag===5&&C!==null&&(k=C,C=Du(u,m),C!=null&&x.unshift(Qu(u,C,k)),C=Du(u,d),C!=null&&x.push(Qu(u,C,k))),u=u.return}return x}function Fa(u){if(u===null)return null;do u=u.return;while(u&&u.tag!==5);return u||null}function cS(u,d,m,x,k){for(var C=d._reactName,A=[];m!==null&&m!==x;){var M=m,H=M.alternate,ae=M.stateNode;if(H!==null&&H===x)break;M.tag===5&&ae!==null&&(M=ae,k?(H=Du(m,C),H!=null&&A.unshift(Qu(m,H,M))):k||(H=Du(m,C),H!=null&&A.push(Qu(m,H,M)))),m=m.return}A.length!==0&&u.push({event:d,listeners:A})}var XD=/\r\n?/g,YD=/\u0000|\uFFFD/g;function dS(u){return(typeof u=="string"?u:""+u).replace(XD,`
`).replace(YD,"")}function ep(u,d,m){if(d=dS(d),dS(u)!==d&&m)throw Error(t(425))}function tp(){}var Vy=null,Wy=null;function Uy(u,d){return u==="textarea"||u==="noscript"||typeof d.children=="string"||typeof d.children=="number"||typeof d.dangerouslySetInnerHTML=="object"&&d.dangerouslySetInnerHTML!==null&&d.dangerouslySetInnerHTML.__html!=null}var Gy=typeof setTimeout=="function"?setTimeout:void 0,QD=typeof clearTimeout=="function"?clearTimeout:void 0,hS=typeof Promise=="function"?Promise:void 0,ZD=typeof queueMicrotask=="function"?queueMicrotask:typeof hS<"u"?function(u){return hS.resolve(null).then(u).catch(JD)}:Gy;function JD(u){setTimeout(function(){throw u})}function Hy(u,d){var m=d,x=0;do{var k=m.nextSibling;if(u.removeChild(m),k&&k.nodeType===8)if(m=k.data,m==="/$"){if(x===0){u.removeChild(k),Vu(d);return}x--}else m!=="$"&&m!=="$?"&&m!=="$!"||x++;m=k}while(m);Vu(d)}function _o(u){for(;u!=null;u=u.nextSibling){var d=u.nodeType;if(d===1||d===3)break;if(d===8){if(d=u.data,d==="$"||d==="$!"||d==="$?")break;if(d==="/$")return null}}return u}function pS(u){u=u.previousSibling;for(var d=0;u;){if(u.nodeType===8){var m=u.data;if(m==="$"||m==="$!"||m==="$?"){if(d===0)return u;d--}else m==="/$"&&d++}u=u.previousSibling}return null}var La=Math.random().toString(36).slice(2),$r="__reactFiber$"+La,Zu="__reactProps$"+La,Yr="__reactContainer$"+La,jy="__reactEvents$"+La,e_="__reactListeners$"+La,t_="__reactHandles$"+La;function Ni(u){var d=u[$r];if(d)return d;for(var m=u.parentNode;m;){if(d=m[Yr]||m[$r]){if(m=d.alternate,d.child!==null||m!==null&&m.child!==null)for(u=pS(u);u!==null;){if(m=u[$r])return m;u=pS(u)}return d}u=m,m=u.parentNode}return null}function Ju(u){return u=u[$r]||u[Yr],!u||u.tag!==5&&u.tag!==6&&u.tag!==13&&u.tag!==3?null:u}function Pa(u){if(u.tag===5||u.tag===6)return u.stateNode;throw Error(t(33))}function np(u){return u[Zu]||null}var qy=[],za=-1;function Oo(u){return{current:u}}function Ct(u){0>za||(u.current=qy[za],qy[za]=null,za--)}function kt(u,d){za++,qy[za]=u.current,u.current=d}var Fo={},_n=Oo(Fo),os=Oo(!1),Ci=Fo;function Ma(u,d){var m=u.type.contextTypes;if(!m)return Fo;var x=u.stateNode;if(x&&x.__reactInternalMemoizedUnmaskedChildContext===d)return x.__reactInternalMemoizedMaskedChildContext;var k={},C;for(C in m)k[C]=d[C];return x&&(u=u.stateNode,u.__reactInternalMemoizedUnmaskedChildContext=d,u.__reactInternalMemoizedMaskedChildContext=k),k}function is(u){return u=u.childContextTypes,u!=null}function sp(){Ct(os),Ct(_n)}function fS(u,d,m){if(_n.current!==Fo)throw Error(t(168));kt(_n,d),kt(os,m)}function mS(u,d,m){var x=u.stateNode;if(d=d.childContextTypes,typeof x.getChildContext!="function")return m;x=x.getChildContext();for(var k in x)if(!(k in d))throw Error(t(108,be(u)||"Unknown",k));return J({},m,x)}function rp(u){return u=(u=u.stateNode)&&u.__reactInternalMemoizedMergedChildContext||Fo,Ci=_n.current,kt(_n,u),kt(os,os.current),!0}function gS(u,d,m){var x=u.stateNode;if(!x)throw Error(t(169));m?(u=mS(u,d,Ci),x.__reactInternalMemoizedMergedChildContext=u,Ct(os),Ct(_n),kt(_n,u)):Ct(os),kt(os,m)}var Qr=null,op=!1,Ky=!1;function yS(u){Qr===null?Qr=[u]:Qr.push(u)}function n_(u){op=!0,yS(u)}function Lo(){if(!Ky&&Qr!==null){Ky=!0;var u=0,d=pt;try{var m=Qr;for(pt=1;u<m.length;u++){var x=m[u];do x=x(!0);while(x!==null)}Qr=null,op=!1}catch(k){throw Qr!==null&&(Qr=Qr.slice(u+1)),wv(gy,Lo),k}finally{pt=d,Ky=!1}}return null}var Ba=[],Va=0,ip=null,ap=0,Ps=[],zs=0,$i=null,Zr=1,Jr="";function Ii(u,d){Ba[Va++]=ap,Ba[Va++]=ip,ip=u,ap=d}function xS(u,d,m){Ps[zs++]=Zr,Ps[zs++]=Jr,Ps[zs++]=$i,$i=u;var x=Zr;u=Jr;var k=32-tr(x)-1;x&=~(1<<k),m+=1;var C=32-tr(d)+k;if(30<C){var A=k-k%5;C=(x&(1<<A)-1).toString(32),x>>=A,k-=A,Zr=1<<32-tr(d)+k|m<<k|x,Jr=C+u}else Zr=1<<C|m<<k|x,Jr=u}function Xy(u){u.return!==null&&(Ii(u,1),xS(u,1,0))}function Yy(u){for(;u===ip;)ip=Ba[--Va],Ba[Va]=null,ap=Ba[--Va],Ba[Va]=null;for(;u===$i;)$i=Ps[--zs],Ps[zs]=null,Jr=Ps[--zs],Ps[zs]=null,Zr=Ps[--zs],Ps[zs]=null}var ks=null,Ns=null,Et=!1,sr=null;function wS(u,d){var m=Ws(5,null,null,0);m.elementType="DELETED",m.stateNode=d,m.return=u,d=u.deletions,d===null?(u.deletions=[m],u.flags|=16):d.push(m)}function bS(u,d){switch(u.tag){case 5:var m=u.type;return d=d.nodeType!==1||m.toLowerCase()!==d.nodeName.toLowerCase()?null:d,d!==null?(u.stateNode=d,ks=u,Ns=_o(d.firstChild),!0):!1;case 6:return d=u.pendingProps===""||d.nodeType!==3?null:d,d!==null?(u.stateNode=d,ks=u,Ns=null,!0):!1;case 13:return d=d.nodeType!==8?null:d,d!==null?(m=$i!==null?{id:Zr,overflow:Jr}:null,u.memoizedState={dehydrated:d,treeContext:m,retryLane:1073741824},m=Ws(18,null,null,0),m.stateNode=d,m.return=u,u.child=m,ks=u,Ns=null,!0):!1;default:return!1}}function Qy(u){return(u.mode&1)!==0&&(u.flags&128)===0}function Zy(u){if(Et){var d=Ns;if(d){var m=d;if(!bS(u,d)){if(Qy(u))throw Error(t(418));d=_o(m.nextSibling);var x=ks;d&&bS(u,d)?wS(x,m):(u.flags=u.flags&-4097|2,Et=!1,ks=u)}}else{if(Qy(u))throw Error(t(418));u.flags=u.flags&-4097|2,Et=!1,ks=u}}}function vS(u){for(u=u.return;u!==null&&u.tag!==5&&u.tag!==3&&u.tag!==13;)u=u.return;ks=u}function lp(u){if(u!==ks)return!1;if(!Et)return vS(u),Et=!0,!1;var d;if((d=u.tag!==3)&&!(d=u.tag!==5)&&(d=u.type,d=d!=="head"&&d!=="body"&&!Uy(u.type,u.memoizedProps)),d&&(d=Ns)){if(Qy(u))throw SS(),Error(t(418));for(;d;)wS(u,d),d=_o(d.nextSibling)}if(vS(u),u.tag===13){if(u=u.memoizedState,u=u!==null?u.dehydrated:null,!u)throw Error(t(317));e:{for(u=u.nextSibling,d=0;u;){if(u.nodeType===8){var m=u.data;if(m==="/$"){if(d===0){Ns=_o(u.nextSibling);break e}d--}else m!=="$"&&m!=="$!"&&m!=="$?"||d++}u=u.nextSibling}Ns=null}}else Ns=ks?_o(u.stateNode.nextSibling):null;return!0}function SS(){for(var u=Ns;u;)u=_o(u.nextSibling)}function Wa(){Ns=ks=null,Et=!1}function Jy(u){sr===null?sr=[u]:sr.push(u)}var s_=N.ReactCurrentBatchConfig;function ec(u,d,m){if(u=m.ref,u!==null&&typeof u!="function"&&typeof u!="object"){if(m._owner){if(m=m._owner,m){if(m.tag!==1)throw Error(t(309));var x=m.stateNode}if(!x)throw Error(t(147,u));var k=x,C=""+u;return d!==null&&d.ref!==null&&typeof d.ref=="function"&&d.ref._stringRef===C?d.ref:(d=function(A){var M=k.refs;A===null?delete M[C]:M[C]=A},d._stringRef=C,d)}if(typeof u!="string")throw Error(t(284));if(!m._owner)throw Error(t(290,u))}return u}function up(u,d){throw u=Object.prototype.toString.call(d),Error(t(31,u==="[object Object]"?"object with keys {"+Object.keys(d).join(", ")+"}":u))}function kS(u){var d=u._init;return d(u._payload)}function NS(u){function d(re,Y){if(u){var ie=re.deletions;ie===null?(re.deletions=[Y],re.flags|=16):ie.push(Y)}}function m(re,Y){if(!u)return null;for(;Y!==null;)d(re,Y),Y=Y.sibling;return null}function x(re,Y){for(re=new Map;Y!==null;)Y.key!==null?re.set(Y.key,Y):re.set(Y.index,Y),Y=Y.sibling;return re}function k(re,Y){return re=Go(re,Y),re.index=0,re.sibling=null,re}function C(re,Y,ie){return re.index=ie,u?(ie=re.alternate,ie!==null?(ie=ie.index,ie<Y?(re.flags|=2,Y):ie):(re.flags|=2,Y)):(re.flags|=1048576,Y)}function A(re){return u&&re.alternate===null&&(re.flags|=2),re}function M(re,Y,ie,we){return Y===null||Y.tag!==6?(Y=Gx(ie,re.mode,we),Y.return=re,Y):(Y=k(Y,ie),Y.return=re,Y)}function H(re,Y,ie,we){var Fe=ie.type;return Fe===L?ye(re,Y,ie.props.children,we,ie.key):Y!==null&&(Y.elementType===Fe||typeof Fe=="object"&&Fe!==null&&Fe.$$typeof===te&&kS(Fe)===Y.type)?(we=k(Y,ie.props),we.ref=ec(re,Y,ie),we.return=re,we):(we=_p(ie.type,ie.key,ie.props,null,re.mode,we),we.ref=ec(re,Y,ie),we.return=re,we)}function ae(re,Y,ie,we){return Y===null||Y.tag!==4||Y.stateNode.containerInfo!==ie.containerInfo||Y.stateNode.implementation!==ie.implementation?(Y=Hx(ie,re.mode,we),Y.return=re,Y):(Y=k(Y,ie.children||[]),Y.return=re,Y)}function ye(re,Y,ie,we,Fe){return Y===null||Y.tag!==7?(Y=Fi(ie,re.mode,we,Fe),Y.return=re,Y):(Y=k(Y,ie),Y.return=re,Y)}function xe(re,Y,ie){if(typeof Y=="string"&&Y!==""||typeof Y=="number")return Y=Gx(""+Y,re.mode,ie),Y.return=re,Y;if(typeof Y=="object"&&Y!==null){switch(Y.$$typeof){case T:return ie=_p(Y.type,Y.key,Y.props,null,re.mode,ie),ie.ref=ec(re,null,Y),ie.return=re,ie;case R:return Y=Hx(Y,re.mode,ie),Y.return=re,Y;case te:var we=Y._init;return xe(re,we(Y._payload),ie)}if(Tt(Y)||Z(Y))return Y=Fi(Y,re.mode,ie,null),Y.return=re,Y;up(re,Y)}return null}function ge(re,Y,ie,we){var Fe=Y!==null?Y.key:null;if(typeof ie=="string"&&ie!==""||typeof ie=="number")return Fe!==null?null:M(re,Y,""+ie,we);if(typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case T:return ie.key===Fe?H(re,Y,ie,we):null;case R:return ie.key===Fe?ae(re,Y,ie,we):null;case te:return Fe=ie._init,ge(re,Y,Fe(ie._payload),we)}if(Tt(ie)||Z(ie))return Fe!==null?null:ye(re,Y,ie,we,null);up(re,ie)}return null}function Ie(re,Y,ie,we,Fe){if(typeof we=="string"&&we!==""||typeof we=="number")return re=re.get(ie)||null,M(Y,re,""+we,Fe);if(typeof we=="object"&&we!==null){switch(we.$$typeof){case T:return re=re.get(we.key===null?ie:we.key)||null,H(Y,re,we,Fe);case R:return re=re.get(we.key===null?ie:we.key)||null,ae(Y,re,we,Fe);case te:var Me=we._init;return Ie(re,Y,ie,Me(we._payload),Fe)}if(Tt(we)||Z(we))return re=re.get(ie)||null,ye(Y,re,we,Fe,null);up(Y,we)}return null}function Ae(re,Y,ie,we){for(var Fe=null,Me=null,Be=Y,We=Y=0,mn=null;Be!==null&&We<ie.length;We++){Be.index>We?(mn=Be,Be=null):mn=Be.sibling;var lt=ge(re,Be,ie[We],we);if(lt===null){Be===null&&(Be=mn);break}u&&Be&&lt.alternate===null&&d(re,Be),Y=C(lt,Y,We),Me===null?Fe=lt:Me.sibling=lt,Me=lt,Be=mn}if(We===ie.length)return m(re,Be),Et&&Ii(re,We),Fe;if(Be===null){for(;We<ie.length;We++)Be=xe(re,ie[We],we),Be!==null&&(Y=C(Be,Y,We),Me===null?Fe=Be:Me.sibling=Be,Me=Be);return Et&&Ii(re,We),Fe}for(Be=x(re,Be);We<ie.length;We++)mn=Ie(Be,re,We,ie[We],we),mn!==null&&(u&&mn.alternate!==null&&Be.delete(mn.key===null?We:mn.key),Y=C(mn,Y,We),Me===null?Fe=mn:Me.sibling=mn,Me=mn);return u&&Be.forEach(function(Ho){return d(re,Ho)}),Et&&Ii(re,We),Fe}function Oe(re,Y,ie,we){var Fe=Z(ie);if(typeof Fe!="function")throw Error(t(150));if(ie=Fe.call(ie),ie==null)throw Error(t(151));for(var Me=Fe=null,Be=Y,We=Y=0,mn=null,lt=ie.next();Be!==null&&!lt.done;We++,lt=ie.next()){Be.index>We?(mn=Be,Be=null):mn=Be.sibling;var Ho=ge(re,Be,lt.value,we);if(Ho===null){Be===null&&(Be=mn);break}u&&Be&&Ho.alternate===null&&d(re,Be),Y=C(Ho,Y,We),Me===null?Fe=Ho:Me.sibling=Ho,Me=Ho,Be=mn}if(lt.done)return m(re,Be),Et&&Ii(re,We),Fe;if(Be===null){for(;!lt.done;We++,lt=ie.next())lt=xe(re,lt.value,we),lt!==null&&(Y=C(lt,Y,We),Me===null?Fe=lt:Me.sibling=lt,Me=lt);return Et&&Ii(re,We),Fe}for(Be=x(re,Be);!lt.done;We++,lt=ie.next())lt=Ie(Be,re,We,lt.value,we),lt!==null&&(u&&lt.alternate!==null&&Be.delete(lt.key===null?We:lt.key),Y=C(lt,Y,We),Me===null?Fe=lt:Me.sibling=lt,Me=lt);return u&&Be.forEach(function(F_){return d(re,F_)}),Et&&Ii(re,We),Fe}function Ht(re,Y,ie,we){if(typeof ie=="object"&&ie!==null&&ie.type===L&&ie.key===null&&(ie=ie.props.children),typeof ie=="object"&&ie!==null){switch(ie.$$typeof){case T:e:{for(var Fe=ie.key,Me=Y;Me!==null;){if(Me.key===Fe){if(Fe=ie.type,Fe===L){if(Me.tag===7){m(re,Me.sibling),Y=k(Me,ie.props.children),Y.return=re,re=Y;break e}}else if(Me.elementType===Fe||typeof Fe=="object"&&Fe!==null&&Fe.$$typeof===te&&kS(Fe)===Me.type){m(re,Me.sibling),Y=k(Me,ie.props),Y.ref=ec(re,Me,ie),Y.return=re,re=Y;break e}m(re,Me);break}else d(re,Me);Me=Me.sibling}ie.type===L?(Y=Fi(ie.props.children,re.mode,we,ie.key),Y.return=re,re=Y):(we=_p(ie.type,ie.key,ie.props,null,re.mode,we),we.ref=ec(re,Y,ie),we.return=re,re=we)}return A(re);case R:e:{for(Me=ie.key;Y!==null;){if(Y.key===Me)if(Y.tag===4&&Y.stateNode.containerInfo===ie.containerInfo&&Y.stateNode.implementation===ie.implementation){m(re,Y.sibling),Y=k(Y,ie.children||[]),Y.return=re,re=Y;break e}else{m(re,Y);break}else d(re,Y);Y=Y.sibling}Y=Hx(ie,re.mode,we),Y.return=re,re=Y}return A(re);case te:return Me=ie._init,Ht(re,Y,Me(ie._payload),we)}if(Tt(ie))return Ae(re,Y,ie,we);if(Z(ie))return Oe(re,Y,ie,we);up(re,ie)}return typeof ie=="string"&&ie!==""||typeof ie=="number"?(ie=""+ie,Y!==null&&Y.tag===6?(m(re,Y.sibling),Y=k(Y,ie),Y.return=re,re=Y):(m(re,Y),Y=Gx(ie,re.mode,we),Y.return=re,re=Y),A(re)):m(re,Y)}return Ht}var Ua=NS(!0),CS=NS(!1),cp=Oo(null),dp=null,Ga=null,ex=null;function tx(){ex=Ga=dp=null}function nx(u){var d=cp.current;Ct(cp),u._currentValue=d}function sx(u,d,m){for(;u!==null;){var x=u.alternate;if((u.childLanes&d)!==d?(u.childLanes|=d,x!==null&&(x.childLanes|=d)):x!==null&&(x.childLanes&d)!==d&&(x.childLanes|=d),u===m)break;u=u.return}}function Ha(u,d){dp=u,ex=Ga=null,u=u.dependencies,u!==null&&u.firstContext!==null&&(u.lanes&d&&(as=!0),u.firstContext=null)}function Ms(u){var d=u._currentValue;if(ex!==u)if(u={context:u,memoizedValue:d,next:null},Ga===null){if(dp===null)throw Error(t(308));Ga=u,dp.dependencies={lanes:0,firstContext:u}}else Ga=Ga.next=u;return d}var Ti=null;function rx(u){Ti===null?Ti=[u]:Ti.push(u)}function $S(u,d,m,x){var k=d.interleaved;return k===null?(m.next=m,rx(d)):(m.next=k.next,k.next=m),d.interleaved=m,eo(u,x)}function eo(u,d){u.lanes|=d;var m=u.alternate;for(m!==null&&(m.lanes|=d),m=u,u=u.return;u!==null;)u.childLanes|=d,m=u.alternate,m!==null&&(m.childLanes|=d),m=u,u=u.return;return m.tag===3?m.stateNode:null}var Po=!1;function ox(u){u.updateQueue={baseState:u.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function IS(u,d){u=u.updateQueue,d.updateQueue===u&&(d.updateQueue={baseState:u.baseState,firstBaseUpdate:u.firstBaseUpdate,lastBaseUpdate:u.lastBaseUpdate,shared:u.shared,effects:u.effects})}function to(u,d){return{eventTime:u,lane:d,tag:0,payload:null,callback:null,next:null}}function zo(u,d,m){var x=u.updateQueue;if(x===null)return null;if(x=x.shared,ot&2){var k=x.pending;return k===null?d.next=d:(d.next=k.next,k.next=d),x.pending=d,eo(u,m)}return k=x.interleaved,k===null?(d.next=d,rx(x)):(d.next=k.next,k.next=d),x.interleaved=d,eo(u,m)}function hp(u,d,m){if(d=d.updateQueue,d!==null&&(d=d.shared,(m&4194240)!==0)){var x=d.lanes;x&=u.pendingLanes,m|=x,d.lanes=m,wy(u,m)}}function TS(u,d){var m=u.updateQueue,x=u.alternate;if(x!==null&&(x=x.updateQueue,m===x)){var k=null,C=null;if(m=m.firstBaseUpdate,m!==null){do{var A={eventTime:m.eventTime,lane:m.lane,tag:m.tag,payload:m.payload,callback:m.callback,next:null};C===null?k=C=A:C=C.next=A,m=m.next}while(m!==null);C===null?k=C=d:C=C.next=d}else k=C=d;m={baseState:x.baseState,firstBaseUpdate:k,lastBaseUpdate:C,shared:x.shared,effects:x.effects},u.updateQueue=m;return}u=m.lastBaseUpdate,u===null?m.firstBaseUpdate=d:u.next=d,m.lastBaseUpdate=d}function pp(u,d,m,x){var k=u.updateQueue;Po=!1;var C=k.firstBaseUpdate,A=k.lastBaseUpdate,M=k.shared.pending;if(M!==null){k.shared.pending=null;var H=M,ae=H.next;H.next=null,A===null?C=ae:A.next=ae,A=H;var ye=u.alternate;ye!==null&&(ye=ye.updateQueue,M=ye.lastBaseUpdate,M!==A&&(M===null?ye.firstBaseUpdate=ae:M.next=ae,ye.lastBaseUpdate=H))}if(C!==null){var xe=k.baseState;A=0,ye=ae=H=null,M=C;do{var ge=M.lane,Ie=M.eventTime;if((x&ge)===ge){ye!==null&&(ye=ye.next={eventTime:Ie,lane:0,tag:M.tag,payload:M.payload,callback:M.callback,next:null});e:{var Ae=u,Oe=M;switch(ge=d,Ie=m,Oe.tag){case 1:if(Ae=Oe.payload,typeof Ae=="function"){xe=Ae.call(Ie,xe,ge);break e}xe=Ae;break e;case 3:Ae.flags=Ae.flags&-65537|128;case 0:if(Ae=Oe.payload,ge=typeof Ae=="function"?Ae.call(Ie,xe,ge):Ae,ge==null)break e;xe=J({},xe,ge);break e;case 2:Po=!0}}M.callback!==null&&M.lane!==0&&(u.flags|=64,ge=k.effects,ge===null?k.effects=[M]:ge.push(M))}else Ie={eventTime:Ie,lane:ge,tag:M.tag,payload:M.payload,callback:M.callback,next:null},ye===null?(ae=ye=Ie,H=xe):ye=ye.next=Ie,A|=ge;if(M=M.next,M===null){if(M=k.shared.pending,M===null)break;ge=M,M=ge.next,ge.next=null,k.lastBaseUpdate=ge,k.shared.pending=null}}while(!0);if(ye===null&&(H=xe),k.baseState=H,k.firstBaseUpdate=ae,k.lastBaseUpdate=ye,d=k.shared.interleaved,d!==null){k=d;do A|=k.lane,k=k.next;while(k!==d)}else C===null&&(k.shared.lanes=0);Ai|=A,u.lanes=A,u.memoizedState=xe}}function ES(u,d,m){if(u=d.effects,d.effects=null,u!==null)for(d=0;d<u.length;d++){var x=u[d],k=x.callback;if(k!==null){if(x.callback=null,x=m,typeof k!="function")throw Error(t(191,k));k.call(x)}}}var tc={},Ir=Oo(tc),nc=Oo(tc),sc=Oo(tc);function Ei(u){if(u===tc)throw Error(t(174));return u}function ix(u,d){switch(kt(sc,d),kt(nc,u),kt(Ir,tc),u=d.nodeType,u){case 9:case 11:d=(d=d.documentElement)?d.namespaceURI:Ls(null,"");break;default:u=u===8?d.parentNode:d,d=u.namespaceURI||null,u=u.tagName,d=Ls(d,u)}Ct(Ir),kt(Ir,d)}function ja(){Ct(Ir),Ct(nc),Ct(sc)}function RS(u){Ei(sc.current);var d=Ei(Ir.current),m=Ls(d,u.type);d!==m&&(kt(nc,u),kt(Ir,m))}function ax(u){nc.current===u&&(Ct(Ir),Ct(nc))}var Ft=Oo(0);function fp(u){for(var d=u;d!==null;){if(d.tag===13){var m=d.memoizedState;if(m!==null&&(m=m.dehydrated,m===null||m.data==="$?"||m.data==="$!"))return d}else if(d.tag===19&&d.memoizedProps.revealOrder!==void 0){if(d.flags&128)return d}else if(d.child!==null){d.child.return=d,d=d.child;continue}if(d===u)break;for(;d.sibling===null;){if(d.return===null||d.return===u)return null;d=d.return}d.sibling.return=d.return,d=d.sibling}return null}var lx=[];function ux(){for(var u=0;u<lx.length;u++)lx[u]._workInProgressVersionPrimary=null;lx.length=0}var mp=N.ReactCurrentDispatcher,cx=N.ReactCurrentBatchConfig,Ri=0,Lt=null,sn=null,pn=null,gp=!1,rc=!1,oc=0,r_=0;function On(){throw Error(t(321))}function dx(u,d){if(d===null)return!1;for(var m=0;m<d.length&&m<u.length;m++)if(!nr(u[m],d[m]))return!1;return!0}function hx(u,d,m,x,k,C){if(Ri=C,Lt=d,d.memoizedState=null,d.updateQueue=null,d.lanes=0,mp.current=u===null||u.memoizedState===null?l_:u_,u=m(x,k),rc){C=0;do{if(rc=!1,oc=0,25<=C)throw Error(t(301));C+=1,pn=sn=null,d.updateQueue=null,mp.current=c_,u=m(x,k)}while(rc)}if(mp.current=wp,d=sn!==null&&sn.next!==null,Ri=0,pn=sn=Lt=null,gp=!1,d)throw Error(t(300));return u}function px(){var u=oc!==0;return oc=0,u}function Tr(){var u={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return pn===null?Lt.memoizedState=pn=u:pn=pn.next=u,pn}function Bs(){if(sn===null){var u=Lt.alternate;u=u!==null?u.memoizedState:null}else u=sn.next;var d=pn===null?Lt.memoizedState:pn.next;if(d!==null)pn=d,sn=u;else{if(u===null)throw Error(t(310));sn=u,u={memoizedState:sn.memoizedState,baseState:sn.baseState,baseQueue:sn.baseQueue,queue:sn.queue,next:null},pn===null?Lt.memoizedState=pn=u:pn=pn.next=u}return pn}function ic(u,d){return typeof d=="function"?d(u):d}function fx(u){var d=Bs(),m=d.queue;if(m===null)throw Error(t(311));m.lastRenderedReducer=u;var x=sn,k=x.baseQueue,C=m.pending;if(C!==null){if(k!==null){var A=k.next;k.next=C.next,C.next=A}x.baseQueue=k=C,m.pending=null}if(k!==null){C=k.next,x=x.baseState;var M=A=null,H=null,ae=C;do{var ye=ae.lane;if((Ri&ye)===ye)H!==null&&(H=H.next={lane:0,action:ae.action,hasEagerState:ae.hasEagerState,eagerState:ae.eagerState,next:null}),x=ae.hasEagerState?ae.eagerState:u(x,ae.action);else{var xe={lane:ye,action:ae.action,hasEagerState:ae.hasEagerState,eagerState:ae.eagerState,next:null};H===null?(M=H=xe,A=x):H=H.next=xe,Lt.lanes|=ye,Ai|=ye}ae=ae.next}while(ae!==null&&ae!==C);H===null?A=x:H.next=M,nr(x,d.memoizedState)||(as=!0),d.memoizedState=x,d.baseState=A,d.baseQueue=H,m.lastRenderedState=x}if(u=m.interleaved,u!==null){k=u;do C=k.lane,Lt.lanes|=C,Ai|=C,k=k.next;while(k!==u)}else k===null&&(m.lanes=0);return[d.memoizedState,m.dispatch]}function mx(u){var d=Bs(),m=d.queue;if(m===null)throw Error(t(311));m.lastRenderedReducer=u;var x=m.dispatch,k=m.pending,C=d.memoizedState;if(k!==null){m.pending=null;var A=k=k.next;do C=u(C,A.action),A=A.next;while(A!==k);nr(C,d.memoizedState)||(as=!0),d.memoizedState=C,d.baseQueue===null&&(d.baseState=C),m.lastRenderedState=C}return[C,x]}function AS(){}function DS(u,d){var m=Lt,x=Bs(),k=d(),C=!nr(x.memoizedState,k);if(C&&(x.memoizedState=k,as=!0),x=x.queue,gx(FS.bind(null,m,x,u),[u]),x.getSnapshot!==d||C||pn!==null&&pn.memoizedState.tag&1){if(m.flags|=2048,ac(9,OS.bind(null,m,x,k,d),void 0,null),fn===null)throw Error(t(349));Ri&30||_S(m,d,k)}return k}function _S(u,d,m){u.flags|=16384,u={getSnapshot:d,value:m},d=Lt.updateQueue,d===null?(d={lastEffect:null,stores:null},Lt.updateQueue=d,d.stores=[u]):(m=d.stores,m===null?d.stores=[u]:m.push(u))}function OS(u,d,m,x){d.value=m,d.getSnapshot=x,LS(d)&&PS(u)}function FS(u,d,m){return m(function(){LS(d)&&PS(u)})}function LS(u){var d=u.getSnapshot;u=u.value;try{var m=d();return!nr(u,m)}catch{return!0}}function PS(u){var d=eo(u,1);d!==null&&ar(d,u,1,-1)}function zS(u){var d=Tr();return typeof u=="function"&&(u=u()),d.memoizedState=d.baseState=u,u={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ic,lastRenderedState:u},d.queue=u,u=u.dispatch=a_.bind(null,Lt,u),[d.memoizedState,u]}function ac(u,d,m,x){return u={tag:u,create:d,destroy:m,deps:x,next:null},d=Lt.updateQueue,d===null?(d={lastEffect:null,stores:null},Lt.updateQueue=d,d.lastEffect=u.next=u):(m=d.lastEffect,m===null?d.lastEffect=u.next=u:(x=m.next,m.next=u,u.next=x,d.lastEffect=u)),u}function MS(){return Bs().memoizedState}function yp(u,d,m,x){var k=Tr();Lt.flags|=u,k.memoizedState=ac(1|d,m,void 0,x===void 0?null:x)}function xp(u,d,m,x){var k=Bs();x=x===void 0?null:x;var C=void 0;if(sn!==null){var A=sn.memoizedState;if(C=A.destroy,x!==null&&dx(x,A.deps)){k.memoizedState=ac(d,m,C,x);return}}Lt.flags|=u,k.memoizedState=ac(1|d,m,C,x)}function BS(u,d){return yp(8390656,8,u,d)}function gx(u,d){return xp(2048,8,u,d)}function VS(u,d){return xp(4,2,u,d)}function WS(u,d){return xp(4,4,u,d)}function US(u,d){if(typeof d=="function")return u=u(),d(u),function(){d(null)};if(d!=null)return u=u(),d.current=u,function(){d.current=null}}function GS(u,d,m){return m=m!=null?m.concat([u]):null,xp(4,4,US.bind(null,d,u),m)}function yx(){}function HS(u,d){var m=Bs();d=d===void 0?null:d;var x=m.memoizedState;return x!==null&&d!==null&&dx(d,x[1])?x[0]:(m.memoizedState=[u,d],u)}function jS(u,d){var m=Bs();d=d===void 0?null:d;var x=m.memoizedState;return x!==null&&d!==null&&dx(d,x[1])?x[0]:(u=u(),m.memoizedState=[u,d],u)}function qS(u,d,m){return Ri&21?(nr(m,d)||(m=kv(),Lt.lanes|=m,Ai|=m,u.baseState=!0),d):(u.baseState&&(u.baseState=!1,as=!0),u.memoizedState=m)}function o_(u,d){var m=pt;pt=m!==0&&4>m?m:4,u(!0);var x=cx.transition;cx.transition={};try{u(!1),d()}finally{pt=m,cx.transition=x}}function KS(){return Bs().memoizedState}function i_(u,d,m){var x=Wo(u);if(m={lane:x,action:m,hasEagerState:!1,eagerState:null,next:null},XS(u))YS(d,m);else if(m=$S(u,d,m,x),m!==null){var k=qn();ar(m,u,x,k),QS(m,d,x)}}function a_(u,d,m){var x=Wo(u),k={lane:x,action:m,hasEagerState:!1,eagerState:null,next:null};if(XS(u))YS(d,k);else{var C=u.alternate;if(u.lanes===0&&(C===null||C.lanes===0)&&(C=d.lastRenderedReducer,C!==null))try{var A=d.lastRenderedState,M=C(A,m);if(k.hasEagerState=!0,k.eagerState=M,nr(M,A)){var H=d.interleaved;H===null?(k.next=k,rx(d)):(k.next=H.next,H.next=k),d.interleaved=k;return}}catch{}finally{}m=$S(u,d,k,x),m!==null&&(k=qn(),ar(m,u,x,k),QS(m,d,x))}}function XS(u){var d=u.alternate;return u===Lt||d!==null&&d===Lt}function YS(u,d){rc=gp=!0;var m=u.pending;m===null?d.next=d:(d.next=m.next,m.next=d),u.pending=d}function QS(u,d,m){if(m&4194240){var x=d.lanes;x&=u.pendingLanes,m|=x,d.lanes=m,wy(u,m)}}var wp={readContext:Ms,useCallback:On,useContext:On,useEffect:On,useImperativeHandle:On,useInsertionEffect:On,useLayoutEffect:On,useMemo:On,useReducer:On,useRef:On,useState:On,useDebugValue:On,useDeferredValue:On,useTransition:On,useMutableSource:On,useSyncExternalStore:On,useId:On,unstable_isNewReconciler:!1},l_={readContext:Ms,useCallback:function(u,d){return Tr().memoizedState=[u,d===void 0?null:d],u},useContext:Ms,useEffect:BS,useImperativeHandle:function(u,d,m){return m=m!=null?m.concat([u]):null,yp(4194308,4,US.bind(null,d,u),m)},useLayoutEffect:function(u,d){return yp(4194308,4,u,d)},useInsertionEffect:function(u,d){return yp(4,2,u,d)},useMemo:function(u,d){var m=Tr();return d=d===void 0?null:d,u=u(),m.memoizedState=[u,d],u},useReducer:function(u,d,m){var x=Tr();return d=m!==void 0?m(d):d,x.memoizedState=x.baseState=d,u={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:u,lastRenderedState:d},x.queue=u,u=u.dispatch=i_.bind(null,Lt,u),[x.memoizedState,u]},useRef:function(u){var d=Tr();return u={current:u},d.memoizedState=u},useState:zS,useDebugValue:yx,useDeferredValue:function(u){return Tr().memoizedState=u},useTransition:function(){var u=zS(!1),d=u[0];return u=o_.bind(null,u[1]),Tr().memoizedState=u,[d,u]},useMutableSource:function(){},useSyncExternalStore:function(u,d,m){var x=Lt,k=Tr();if(Et){if(m===void 0)throw Error(t(407));m=m()}else{if(m=d(),fn===null)throw Error(t(349));Ri&30||_S(x,d,m)}k.memoizedState=m;var C={value:m,getSnapshot:d};return k.queue=C,BS(FS.bind(null,x,C,u),[u]),x.flags|=2048,ac(9,OS.bind(null,x,C,m,d),void 0,null),m},useId:function(){var u=Tr(),d=fn.identifierPrefix;if(Et){var m=Jr,x=Zr;m=(x&~(1<<32-tr(x)-1)).toString(32)+m,d=":"+d+"R"+m,m=oc++,0<m&&(d+="H"+m.toString(32)),d+=":"}else m=r_++,d=":"+d+"r"+m.toString(32)+":";return u.memoizedState=d},unstable_isNewReconciler:!1},u_={readContext:Ms,useCallback:HS,useContext:Ms,useEffect:gx,useImperativeHandle:GS,useInsertionEffect:VS,useLayoutEffect:WS,useMemo:jS,useReducer:fx,useRef:MS,useState:function(){return fx(ic)},useDebugValue:yx,useDeferredValue:function(u){var d=Bs();return qS(d,sn.memoizedState,u)},useTransition:function(){var u=fx(ic)[0],d=Bs().memoizedState;return[u,d]},useMutableSource:AS,useSyncExternalStore:DS,useId:KS,unstable_isNewReconciler:!1},c_={readContext:Ms,useCallback:HS,useContext:Ms,useEffect:gx,useImperativeHandle:GS,useInsertionEffect:VS,useLayoutEffect:WS,useMemo:jS,useReducer:mx,useRef:MS,useState:function(){return mx(ic)},useDebugValue:yx,useDeferredValue:function(u){var d=Bs();return sn===null?d.memoizedState=u:qS(d,sn.memoizedState,u)},useTransition:function(){var u=mx(ic)[0],d=Bs().memoizedState;return[u,d]},useMutableSource:AS,useSyncExternalStore:DS,useId:KS,unstable_isNewReconciler:!1};function rr(u,d){if(u&&u.defaultProps){d=J({},d),u=u.defaultProps;for(var m in u)d[m]===void 0&&(d[m]=u[m]);return d}return d}function xx(u,d,m,x){d=u.memoizedState,m=m(x,d),m=m==null?d:J({},d,m),u.memoizedState=m,u.lanes===0&&(u.updateQueue.baseState=m)}var bp={isMounted:function(u){return(u=u._reactInternals)?ki(u)===u:!1},enqueueSetState:function(u,d,m){u=u._reactInternals;var x=qn(),k=Wo(u),C=to(x,k);C.payload=d,m!=null&&(C.callback=m),d=zo(u,C,k),d!==null&&(ar(d,u,k,x),hp(d,u,k))},enqueueReplaceState:function(u,d,m){u=u._reactInternals;var x=qn(),k=Wo(u),C=to(x,k);C.tag=1,C.payload=d,m!=null&&(C.callback=m),d=zo(u,C,k),d!==null&&(ar(d,u,k,x),hp(d,u,k))},enqueueForceUpdate:function(u,d){u=u._reactInternals;var m=qn(),x=Wo(u),k=to(m,x);k.tag=2,d!=null&&(k.callback=d),d=zo(u,k,x),d!==null&&(ar(d,u,x,m),hp(d,u,x))}};function ZS(u,d,m,x,k,C,A){return u=u.stateNode,typeof u.shouldComponentUpdate=="function"?u.shouldComponentUpdate(x,C,A):d.prototype&&d.prototype.isPureReactComponent?!qu(m,x)||!qu(k,C):!0}function JS(u,d,m){var x=!1,k=Fo,C=d.contextType;return typeof C=="object"&&C!==null?C=Ms(C):(k=is(d)?Ci:_n.current,x=d.contextTypes,C=(x=x!=null)?Ma(u,k):Fo),d=new d(m,C),u.memoizedState=d.state!==null&&d.state!==void 0?d.state:null,d.updater=bp,u.stateNode=d,d._reactInternals=u,x&&(u=u.stateNode,u.__reactInternalMemoizedUnmaskedChildContext=k,u.__reactInternalMemoizedMaskedChildContext=C),d}function ek(u,d,m,x){u=d.state,typeof d.componentWillReceiveProps=="function"&&d.componentWillReceiveProps(m,x),typeof d.UNSAFE_componentWillReceiveProps=="function"&&d.UNSAFE_componentWillReceiveProps(m,x),d.state!==u&&bp.enqueueReplaceState(d,d.state,null)}function wx(u,d,m,x){var k=u.stateNode;k.props=m,k.state=u.memoizedState,k.refs={},ox(u);var C=d.contextType;typeof C=="object"&&C!==null?k.context=Ms(C):(C=is(d)?Ci:_n.current,k.context=Ma(u,C)),k.state=u.memoizedState,C=d.getDerivedStateFromProps,typeof C=="function"&&(xx(u,d,C,m),k.state=u.memoizedState),typeof d.getDerivedStateFromProps=="function"||typeof k.getSnapshotBeforeUpdate=="function"||typeof k.UNSAFE_componentWillMount!="function"&&typeof k.componentWillMount!="function"||(d=k.state,typeof k.componentWillMount=="function"&&k.componentWillMount(),typeof k.UNSAFE_componentWillMount=="function"&&k.UNSAFE_componentWillMount(),d!==k.state&&bp.enqueueReplaceState(k,k.state,null),pp(u,m,k,x),k.state=u.memoizedState),typeof k.componentDidMount=="function"&&(u.flags|=4194308)}function qa(u,d){try{var m="",x=d;do m+=he(x),x=x.return;while(x);var k=m}catch(C){k=`
Error generating stack: `+C.message+`
`+C.stack}return{value:u,source:d,stack:k,digest:null}}function bx(u,d,m){return{value:u,source:null,stack:m??null,digest:d??null}}function vx(u,d){try{console.error(d.value)}catch(m){setTimeout(function(){throw m})}}var d_=typeof WeakMap=="function"?WeakMap:Map;function tk(u,d,m){m=to(-1,m),m.tag=3,m.payload={element:null};var x=d.value;return m.callback=function(){Ip||(Ip=!0,Lx=x),vx(u,d)},m}function nk(u,d,m){m=to(-1,m),m.tag=3;var x=u.type.getDerivedStateFromError;if(typeof x=="function"){var k=d.value;m.payload=function(){return x(k)},m.callback=function(){vx(u,d)}}var C=u.stateNode;return C!==null&&typeof C.componentDidCatch=="function"&&(m.callback=function(){vx(u,d),typeof x!="function"&&(Bo===null?Bo=new Set([this]):Bo.add(this));var A=d.stack;this.componentDidCatch(d.value,{componentStack:A!==null?A:""})}),m}function sk(u,d,m){var x=u.pingCache;if(x===null){x=u.pingCache=new d_;var k=new Set;x.set(d,k)}else k=x.get(d),k===void 0&&(k=new Set,x.set(d,k));k.has(m)||(k.add(m),u=C_.bind(null,u,d,m),d.then(u,u))}function rk(u){do{var d;if((d=u.tag===13)&&(d=u.memoizedState,d=d!==null?d.dehydrated!==null:!0),d)return u;u=u.return}while(u!==null);return null}function ok(u,d,m,x,k){return u.mode&1?(u.flags|=65536,u.lanes=k,u):(u===d?u.flags|=65536:(u.flags|=128,m.flags|=131072,m.flags&=-52805,m.tag===1&&(m.alternate===null?m.tag=17:(d=to(-1,1),d.tag=2,zo(m,d,1))),m.lanes|=1),u)}var h_=N.ReactCurrentOwner,as=!1;function jn(u,d,m,x){d.child=u===null?CS(d,null,m,x):Ua(d,u.child,m,x)}function ik(u,d,m,x,k){m=m.render;var C=d.ref;return Ha(d,k),x=hx(u,d,m,x,C,k),m=px(),u!==null&&!as?(d.updateQueue=u.updateQueue,d.flags&=-2053,u.lanes&=~k,no(u,d,k)):(Et&&m&&Xy(d),d.flags|=1,jn(u,d,x,k),d.child)}function ak(u,d,m,x,k){if(u===null){var C=m.type;return typeof C=="function"&&!Ux(C)&&C.defaultProps===void 0&&m.compare===null&&m.defaultProps===void 0?(d.tag=15,d.type=C,lk(u,d,C,x,k)):(u=_p(m.type,null,x,d,d.mode,k),u.ref=d.ref,u.return=d,d.child=u)}if(C=u.child,!(u.lanes&k)){var A=C.memoizedProps;if(m=m.compare,m=m!==null?m:qu,m(A,x)&&u.ref===d.ref)return no(u,d,k)}return d.flags|=1,u=Go(C,x),u.ref=d.ref,u.return=d,d.child=u}function lk(u,d,m,x,k){if(u!==null){var C=u.memoizedProps;if(qu(C,x)&&u.ref===d.ref)if(as=!1,d.pendingProps=x=C,(u.lanes&k)!==0)u.flags&131072&&(as=!0);else return d.lanes=u.lanes,no(u,d,k)}return Sx(u,d,m,x,k)}function uk(u,d,m){var x=d.pendingProps,k=x.children,C=u!==null?u.memoizedState:null;if(x.mode==="hidden")if(!(d.mode&1))d.memoizedState={baseLanes:0,cachePool:null,transitions:null},kt(Xa,Cs),Cs|=m;else{if(!(m&1073741824))return u=C!==null?C.baseLanes|m:m,d.lanes=d.childLanes=1073741824,d.memoizedState={baseLanes:u,cachePool:null,transitions:null},d.updateQueue=null,kt(Xa,Cs),Cs|=u,null;d.memoizedState={baseLanes:0,cachePool:null,transitions:null},x=C!==null?C.baseLanes:m,kt(Xa,Cs),Cs|=x}else C!==null?(x=C.baseLanes|m,d.memoizedState=null):x=m,kt(Xa,Cs),Cs|=x;return jn(u,d,k,m),d.child}function ck(u,d){var m=d.ref;(u===null&&m!==null||u!==null&&u.ref!==m)&&(d.flags|=512,d.flags|=2097152)}function Sx(u,d,m,x,k){var C=is(m)?Ci:_n.current;return C=Ma(d,C),Ha(d,k),m=hx(u,d,m,x,C,k),x=px(),u!==null&&!as?(d.updateQueue=u.updateQueue,d.flags&=-2053,u.lanes&=~k,no(u,d,k)):(Et&&x&&Xy(d),d.flags|=1,jn(u,d,m,k),d.child)}function dk(u,d,m,x,k){if(is(m)){var C=!0;rp(d)}else C=!1;if(Ha(d,k),d.stateNode===null)Sp(u,d),JS(d,m,x),wx(d,m,x,k),x=!0;else if(u===null){var A=d.stateNode,M=d.memoizedProps;A.props=M;var H=A.context,ae=m.contextType;typeof ae=="object"&&ae!==null?ae=Ms(ae):(ae=is(m)?Ci:_n.current,ae=Ma(d,ae));var ye=m.getDerivedStateFromProps,xe=typeof ye=="function"||typeof A.getSnapshotBeforeUpdate=="function";xe||typeof A.UNSAFE_componentWillReceiveProps!="function"&&typeof A.componentWillReceiveProps!="function"||(M!==x||H!==ae)&&ek(d,A,x,ae),Po=!1;var ge=d.memoizedState;A.state=ge,pp(d,x,A,k),H=d.memoizedState,M!==x||ge!==H||os.current||Po?(typeof ye=="function"&&(xx(d,m,ye,x),H=d.memoizedState),(M=Po||ZS(d,m,M,x,ge,H,ae))?(xe||typeof A.UNSAFE_componentWillMount!="function"&&typeof A.componentWillMount!="function"||(typeof A.componentWillMount=="function"&&A.componentWillMount(),typeof A.UNSAFE_componentWillMount=="function"&&A.UNSAFE_componentWillMount()),typeof A.componentDidMount=="function"&&(d.flags|=4194308)):(typeof A.componentDidMount=="function"&&(d.flags|=4194308),d.memoizedProps=x,d.memoizedState=H),A.props=x,A.state=H,A.context=ae,x=M):(typeof A.componentDidMount=="function"&&(d.flags|=4194308),x=!1)}else{A=d.stateNode,IS(u,d),M=d.memoizedProps,ae=d.type===d.elementType?M:rr(d.type,M),A.props=ae,xe=d.pendingProps,ge=A.context,H=m.contextType,typeof H=="object"&&H!==null?H=Ms(H):(H=is(m)?Ci:_n.current,H=Ma(d,H));var Ie=m.getDerivedStateFromProps;(ye=typeof Ie=="function"||typeof A.getSnapshotBeforeUpdate=="function")||typeof A.UNSAFE_componentWillReceiveProps!="function"&&typeof A.componentWillReceiveProps!="function"||(M!==xe||ge!==H)&&ek(d,A,x,H),Po=!1,ge=d.memoizedState,A.state=ge,pp(d,x,A,k);var Ae=d.memoizedState;M!==xe||ge!==Ae||os.current||Po?(typeof Ie=="function"&&(xx(d,m,Ie,x),Ae=d.memoizedState),(ae=Po||ZS(d,m,ae,x,ge,Ae,H)||!1)?(ye||typeof A.UNSAFE_componentWillUpdate!="function"&&typeof A.componentWillUpdate!="function"||(typeof A.componentWillUpdate=="function"&&A.componentWillUpdate(x,Ae,H),typeof A.UNSAFE_componentWillUpdate=="function"&&A.UNSAFE_componentWillUpdate(x,Ae,H)),typeof A.componentDidUpdate=="function"&&(d.flags|=4),typeof A.getSnapshotBeforeUpdate=="function"&&(d.flags|=1024)):(typeof A.componentDidUpdate!="function"||M===u.memoizedProps&&ge===u.memoizedState||(d.flags|=4),typeof A.getSnapshotBeforeUpdate!="function"||M===u.memoizedProps&&ge===u.memoizedState||(d.flags|=1024),d.memoizedProps=x,d.memoizedState=Ae),A.props=x,A.state=Ae,A.context=H,x=ae):(typeof A.componentDidUpdate!="function"||M===u.memoizedProps&&ge===u.memoizedState||(d.flags|=4),typeof A.getSnapshotBeforeUpdate!="function"||M===u.memoizedProps&&ge===u.memoizedState||(d.flags|=1024),x=!1)}return kx(u,d,m,x,C,k)}function kx(u,d,m,x,k,C){ck(u,d);var A=(d.flags&128)!==0;if(!x&&!A)return k&&gS(d,m,!1),no(u,d,C);x=d.stateNode,h_.current=d;var M=A&&typeof m.getDerivedStateFromError!="function"?null:x.render();return d.flags|=1,u!==null&&A?(d.child=Ua(d,u.child,null,C),d.child=Ua(d,null,M,C)):jn(u,d,M,C),d.memoizedState=x.state,k&&gS(d,m,!0),d.child}function hk(u){var d=u.stateNode;d.pendingContext?fS(u,d.pendingContext,d.pendingContext!==d.context):d.context&&fS(u,d.context,!1),ix(u,d.containerInfo)}function pk(u,d,m,x,k){return Wa(),Jy(k),d.flags|=256,jn(u,d,m,x),d.child}var Nx={dehydrated:null,treeContext:null,retryLane:0};function Cx(u){return{baseLanes:u,cachePool:null,transitions:null}}function fk(u,d,m){var x=d.pendingProps,k=Ft.current,C=!1,A=(d.flags&128)!==0,M;if((M=A)||(M=u!==null&&u.memoizedState===null?!1:(k&2)!==0),M?(C=!0,d.flags&=-129):(u===null||u.memoizedState!==null)&&(k|=1),kt(Ft,k&1),u===null)return Zy(d),u=d.memoizedState,u!==null&&(u=u.dehydrated,u!==null)?(d.mode&1?u.data==="$!"?d.lanes=8:d.lanes=1073741824:d.lanes=1,null):(A=x.children,u=x.fallback,C?(x=d.mode,C=d.child,A={mode:"hidden",children:A},!(x&1)&&C!==null?(C.childLanes=0,C.pendingProps=A):C=Op(A,x,0,null),u=Fi(u,x,m,null),C.return=d,u.return=d,C.sibling=u,d.child=C,d.child.memoizedState=Cx(m),d.memoizedState=Nx,u):$x(d,A));if(k=u.memoizedState,k!==null&&(M=k.dehydrated,M!==null))return p_(u,d,A,x,M,k,m);if(C){C=x.fallback,A=d.mode,k=u.child,M=k.sibling;var H={mode:"hidden",children:x.children};return!(A&1)&&d.child!==k?(x=d.child,x.childLanes=0,x.pendingProps=H,d.deletions=null):(x=Go(k,H),x.subtreeFlags=k.subtreeFlags&14680064),M!==null?C=Go(M,C):(C=Fi(C,A,m,null),C.flags|=2),C.return=d,x.return=d,x.sibling=C,d.child=x,x=C,C=d.child,A=u.child.memoizedState,A=A===null?Cx(m):{baseLanes:A.baseLanes|m,cachePool:null,transitions:A.transitions},C.memoizedState=A,C.childLanes=u.childLanes&~m,d.memoizedState=Nx,x}return C=u.child,u=C.sibling,x=Go(C,{mode:"visible",children:x.children}),!(d.mode&1)&&(x.lanes=m),x.return=d,x.sibling=null,u!==null&&(m=d.deletions,m===null?(d.deletions=[u],d.flags|=16):m.push(u)),d.child=x,d.memoizedState=null,x}function $x(u,d){return d=Op({mode:"visible",children:d},u.mode,0,null),d.return=u,u.child=d}function vp(u,d,m,x){return x!==null&&Jy(x),Ua(d,u.child,null,m),u=$x(d,d.pendingProps.children),u.flags|=2,d.memoizedState=null,u}function p_(u,d,m,x,k,C,A){if(m)return d.flags&256?(d.flags&=-257,x=bx(Error(t(422))),vp(u,d,A,x)):d.memoizedState!==null?(d.child=u.child,d.flags|=128,null):(C=x.fallback,k=d.mode,x=Op({mode:"visible",children:x.children},k,0,null),C=Fi(C,k,A,null),C.flags|=2,x.return=d,C.return=d,x.sibling=C,d.child=x,d.mode&1&&Ua(d,u.child,null,A),d.child.memoizedState=Cx(A),d.memoizedState=Nx,C);if(!(d.mode&1))return vp(u,d,A,null);if(k.data==="$!"){if(x=k.nextSibling&&k.nextSibling.dataset,x)var M=x.dgst;return x=M,C=Error(t(419)),x=bx(C,x,void 0),vp(u,d,A,x)}if(M=(A&u.childLanes)!==0,as||M){if(x=fn,x!==null){switch(A&-A){case 4:k=2;break;case 16:k=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:k=32;break;case 536870912:k=268435456;break;default:k=0}k=k&(x.suspendedLanes|A)?0:k,k!==0&&k!==C.retryLane&&(C.retryLane=k,eo(u,k),ar(x,u,k,-1))}return Wx(),x=bx(Error(t(421))),vp(u,d,A,x)}return k.data==="$?"?(d.flags|=128,d.child=u.child,d=$_.bind(null,u),k._reactRetry=d,null):(u=C.treeContext,Ns=_o(k.nextSibling),ks=d,Et=!0,sr=null,u!==null&&(Ps[zs++]=Zr,Ps[zs++]=Jr,Ps[zs++]=$i,Zr=u.id,Jr=u.overflow,$i=d),d=$x(d,x.children),d.flags|=4096,d)}function mk(u,d,m){u.lanes|=d;var x=u.alternate;x!==null&&(x.lanes|=d),sx(u.return,d,m)}function Ix(u,d,m,x,k){var C=u.memoizedState;C===null?u.memoizedState={isBackwards:d,rendering:null,renderingStartTime:0,last:x,tail:m,tailMode:k}:(C.isBackwards=d,C.rendering=null,C.renderingStartTime=0,C.last=x,C.tail=m,C.tailMode=k)}function gk(u,d,m){var x=d.pendingProps,k=x.revealOrder,C=x.tail;if(jn(u,d,x.children,m),x=Ft.current,x&2)x=x&1|2,d.flags|=128;else{if(u!==null&&u.flags&128)e:for(u=d.child;u!==null;){if(u.tag===13)u.memoizedState!==null&&mk(u,m,d);else if(u.tag===19)mk(u,m,d);else if(u.child!==null){u.child.return=u,u=u.child;continue}if(u===d)break e;for(;u.sibling===null;){if(u.return===null||u.return===d)break e;u=u.return}u.sibling.return=u.return,u=u.sibling}x&=1}if(kt(Ft,x),!(d.mode&1))d.memoizedState=null;else switch(k){case"forwards":for(m=d.child,k=null;m!==null;)u=m.alternate,u!==null&&fp(u)===null&&(k=m),m=m.sibling;m=k,m===null?(k=d.child,d.child=null):(k=m.sibling,m.sibling=null),Ix(d,!1,k,m,C);break;case"backwards":for(m=null,k=d.child,d.child=null;k!==null;){if(u=k.alternate,u!==null&&fp(u)===null){d.child=k;break}u=k.sibling,k.sibling=m,m=k,k=u}Ix(d,!0,m,null,C);break;case"together":Ix(d,!1,null,null,void 0);break;default:d.memoizedState=null}return d.child}function Sp(u,d){!(d.mode&1)&&u!==null&&(u.alternate=null,d.alternate=null,d.flags|=2)}function no(u,d,m){if(u!==null&&(d.dependencies=u.dependencies),Ai|=d.lanes,!(m&d.childLanes))return null;if(u!==null&&d.child!==u.child)throw Error(t(153));if(d.child!==null){for(u=d.child,m=Go(u,u.pendingProps),d.child=m,m.return=d;u.sibling!==null;)u=u.sibling,m=m.sibling=Go(u,u.pendingProps),m.return=d;m.sibling=null}return d.child}function f_(u,d,m){switch(d.tag){case 3:hk(d),Wa();break;case 5:RS(d);break;case 1:is(d.type)&&rp(d);break;case 4:ix(d,d.stateNode.containerInfo);break;case 10:var x=d.type._context,k=d.memoizedProps.value;kt(cp,x._currentValue),x._currentValue=k;break;case 13:if(x=d.memoizedState,x!==null)return x.dehydrated!==null?(kt(Ft,Ft.current&1),d.flags|=128,null):m&d.child.childLanes?fk(u,d,m):(kt(Ft,Ft.current&1),u=no(u,d,m),u!==null?u.sibling:null);kt(Ft,Ft.current&1);break;case 19:if(x=(m&d.childLanes)!==0,u.flags&128){if(x)return gk(u,d,m);d.flags|=128}if(k=d.memoizedState,k!==null&&(k.rendering=null,k.tail=null,k.lastEffect=null),kt(Ft,Ft.current),x)break;return null;case 22:case 23:return d.lanes=0,uk(u,d,m)}return no(u,d,m)}var yk,Tx,xk,wk;yk=function(u,d){for(var m=d.child;m!==null;){if(m.tag===5||m.tag===6)u.appendChild(m.stateNode);else if(m.tag!==4&&m.child!==null){m.child.return=m,m=m.child;continue}if(m===d)break;for(;m.sibling===null;){if(m.return===null||m.return===d)return;m=m.return}m.sibling.return=m.return,m=m.sibling}},Tx=function(){},xk=function(u,d,m,x){var k=u.memoizedProps;if(k!==x){u=d.stateNode,Ei(Ir.current);var C=null;switch(m){case"input":k=wt(u,k),x=wt(u,x),C=[];break;case"select":k=J({},k,{value:void 0}),x=J({},x,{value:void 0}),C=[];break;case"textarea":k=Cn(u,k),x=Cn(u,x),C=[];break;default:typeof k.onClick!="function"&&typeof x.onClick=="function"&&(u.onclick=tp)}ly(m,x);var A;m=null;for(ae in k)if(!x.hasOwnProperty(ae)&&k.hasOwnProperty(ae)&&k[ae]!=null)if(ae==="style"){var M=k[ae];for(A in M)M.hasOwnProperty(A)&&(m||(m={}),m[A]="")}else ae!=="dangerouslySetInnerHTML"&&ae!=="children"&&ae!=="suppressContentEditableWarning"&&ae!=="suppressHydrationWarning"&&ae!=="autoFocus"&&(r.hasOwnProperty(ae)?C||(C=[]):(C=C||[]).push(ae,null));for(ae in x){var H=x[ae];if(M=k!=null?k[ae]:void 0,x.hasOwnProperty(ae)&&H!==M&&(H!=null||M!=null))if(ae==="style")if(M){for(A in M)!M.hasOwnProperty(A)||H&&H.hasOwnProperty(A)||(m||(m={}),m[A]="");for(A in H)H.hasOwnProperty(A)&&M[A]!==H[A]&&(m||(m={}),m[A]=H[A])}else m||(C||(C=[]),C.push(ae,m)),m=H;else ae==="dangerouslySetInnerHTML"?(H=H?H.__html:void 0,M=M?M.__html:void 0,H!=null&&M!==H&&(C=C||[]).push(ae,H)):ae==="children"?typeof H!="string"&&typeof H!="number"||(C=C||[]).push(ae,""+H):ae!=="suppressContentEditableWarning"&&ae!=="suppressHydrationWarning"&&(r.hasOwnProperty(ae)?(H!=null&&ae==="onScroll"&&Nt("scroll",u),C||M===H||(C=[])):(C=C||[]).push(ae,H))}m&&(C=C||[]).push("style",m);var ae=C;(d.updateQueue=ae)&&(d.flags|=4)}},wk=function(u,d,m,x){m!==x&&(d.flags|=4)};function lc(u,d){if(!Et)switch(u.tailMode){case"hidden":d=u.tail;for(var m=null;d!==null;)d.alternate!==null&&(m=d),d=d.sibling;m===null?u.tail=null:m.sibling=null;break;case"collapsed":m=u.tail;for(var x=null;m!==null;)m.alternate!==null&&(x=m),m=m.sibling;x===null?d||u.tail===null?u.tail=null:u.tail.sibling=null:x.sibling=null}}function Fn(u){var d=u.alternate!==null&&u.alternate.child===u.child,m=0,x=0;if(d)for(var k=u.child;k!==null;)m|=k.lanes|k.childLanes,x|=k.subtreeFlags&14680064,x|=k.flags&14680064,k.return=u,k=k.sibling;else for(k=u.child;k!==null;)m|=k.lanes|k.childLanes,x|=k.subtreeFlags,x|=k.flags,k.return=u,k=k.sibling;return u.subtreeFlags|=x,u.childLanes=m,d}function m_(u,d,m){var x=d.pendingProps;switch(Yy(d),d.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Fn(d),null;case 1:return is(d.type)&&sp(),Fn(d),null;case 3:return x=d.stateNode,ja(),Ct(os),Ct(_n),ux(),x.pendingContext&&(x.context=x.pendingContext,x.pendingContext=null),(u===null||u.child===null)&&(lp(d)?d.flags|=4:u===null||u.memoizedState.isDehydrated&&!(d.flags&256)||(d.flags|=1024,sr!==null&&(Mx(sr),sr=null))),Tx(u,d),Fn(d),null;case 5:ax(d);var k=Ei(sc.current);if(m=d.type,u!==null&&d.stateNode!=null)xk(u,d,m,x,k),u.ref!==d.ref&&(d.flags|=512,d.flags|=2097152);else{if(!x){if(d.stateNode===null)throw Error(t(166));return Fn(d),null}if(u=Ei(Ir.current),lp(d)){x=d.stateNode,m=d.type;var C=d.memoizedProps;switch(x[$r]=d,x[Zu]=C,u=(d.mode&1)!==0,m){case"dialog":Nt("cancel",x),Nt("close",x);break;case"iframe":case"object":case"embed":Nt("load",x);break;case"video":case"audio":for(k=0;k<Xu.length;k++)Nt(Xu[k],x);break;case"source":Nt("error",x);break;case"img":case"image":case"link":Nt("error",x),Nt("load",x);break;case"details":Nt("toggle",x);break;case"input":ct(x,C),Nt("invalid",x);break;case"select":x._wrapperState={wasMultiple:!!C.multiple},Nt("invalid",x);break;case"textarea":Nr(x,C),Nt("invalid",x)}ly(m,C),k=null;for(var A in C)if(C.hasOwnProperty(A)){var M=C[A];A==="children"?typeof M=="string"?x.textContent!==M&&(C.suppressHydrationWarning!==!0&&ep(x.textContent,M,u),k=["children",M]):typeof M=="number"&&x.textContent!==""+M&&(C.suppressHydrationWarning!==!0&&ep(x.textContent,M,u),k=["children",""+M]):r.hasOwnProperty(A)&&M!=null&&A==="onScroll"&&Nt("scroll",x)}switch(m){case"input":Ue(x),yt(x,C,!0);break;case"textarea":Ue(x),Fs(x);break;case"select":case"option":break;default:typeof C.onClick=="function"&&(x.onclick=tp)}x=k,d.updateQueue=x,x!==null&&(d.flags|=4)}else{A=k.nodeType===9?k:k.ownerDocument,u==="http://www.w3.org/1999/xhtml"&&(u=er(m)),u==="http://www.w3.org/1999/xhtml"?m==="script"?(u=A.createElement("div"),u.innerHTML="<script><\/script>",u=u.removeChild(u.firstChild)):typeof x.is=="string"?u=A.createElement(m,{is:x.is}):(u=A.createElement(m),m==="select"&&(A=u,x.multiple?A.multiple=!0:x.size&&(A.size=x.size))):u=A.createElementNS(u,m),u[$r]=d,u[Zu]=x,yk(u,d,!1,!1),d.stateNode=u;e:{switch(A=uy(m,x),m){case"dialog":Nt("cancel",u),Nt("close",u),k=x;break;case"iframe":case"object":case"embed":Nt("load",u),k=x;break;case"video":case"audio":for(k=0;k<Xu.length;k++)Nt(Xu[k],u);k=x;break;case"source":Nt("error",u),k=x;break;case"img":case"image":case"link":Nt("error",u),Nt("load",u),k=x;break;case"details":Nt("toggle",u),k=x;break;case"input":ct(u,x),k=wt(u,x),Nt("invalid",u);break;case"option":k=x;break;case"select":u._wrapperState={wasMultiple:!!x.multiple},k=J({},x,{value:void 0}),Nt("invalid",u);break;case"textarea":Nr(u,x),k=Cn(u,x),Nt("invalid",u);break;default:k=x}ly(m,k),M=k;for(C in M)if(M.hasOwnProperty(C)){var H=M[C];C==="style"?_h(u,H):C==="dangerouslySetInnerHTML"?(H=H?H.__html:void 0,H!=null&&$o(u,H)):C==="children"?typeof H=="string"?(m!=="textarea"||H!=="")&&Kr(u,H):typeof H=="number"&&Kr(u,""+H):C!=="suppressContentEditableWarning"&&C!=="suppressHydrationWarning"&&C!=="autoFocus"&&(r.hasOwnProperty(C)?H!=null&&C==="onScroll"&&Nt("scroll",u):H!=null&&$(u,C,H,A))}switch(m){case"input":Ue(u),yt(u,x,!1);break;case"textarea":Ue(u),Fs(u);break;case"option":x.value!=null&&u.setAttribute("value",""+Se(x.value));break;case"select":u.multiple=!!x.multiple,C=x.value,C!=null?Hn(u,!!x.multiple,C,!1):x.defaultValue!=null&&Hn(u,!!x.multiple,x.defaultValue,!0);break;default:typeof k.onClick=="function"&&(u.onclick=tp)}switch(m){case"button":case"input":case"select":case"textarea":x=!!x.autoFocus;break e;case"img":x=!0;break e;default:x=!1}}x&&(d.flags|=4)}d.ref!==null&&(d.flags|=512,d.flags|=2097152)}return Fn(d),null;case 6:if(u&&d.stateNode!=null)wk(u,d,u.memoizedProps,x);else{if(typeof x!="string"&&d.stateNode===null)throw Error(t(166));if(m=Ei(sc.current),Ei(Ir.current),lp(d)){if(x=d.stateNode,m=d.memoizedProps,x[$r]=d,(C=x.nodeValue!==m)&&(u=ks,u!==null))switch(u.tag){case 3:ep(x.nodeValue,m,(u.mode&1)!==0);break;case 5:u.memoizedProps.suppressHydrationWarning!==!0&&ep(x.nodeValue,m,(u.mode&1)!==0)}C&&(d.flags|=4)}else x=(m.nodeType===9?m:m.ownerDocument).createTextNode(x),x[$r]=d,d.stateNode=x}return Fn(d),null;case 13:if(Ct(Ft),x=d.memoizedState,u===null||u.memoizedState!==null&&u.memoizedState.dehydrated!==null){if(Et&&Ns!==null&&d.mode&1&&!(d.flags&128))SS(),Wa(),d.flags|=98560,C=!1;else if(C=lp(d),x!==null&&x.dehydrated!==null){if(u===null){if(!C)throw Error(t(318));if(C=d.memoizedState,C=C!==null?C.dehydrated:null,!C)throw Error(t(317));C[$r]=d}else Wa(),!(d.flags&128)&&(d.memoizedState=null),d.flags|=4;Fn(d),C=!1}else sr!==null&&(Mx(sr),sr=null),C=!0;if(!C)return d.flags&65536?d:null}return d.flags&128?(d.lanes=m,d):(x=x!==null,x!==(u!==null&&u.memoizedState!==null)&&x&&(d.child.flags|=8192,d.mode&1&&(u===null||Ft.current&1?rn===0&&(rn=3):Wx())),d.updateQueue!==null&&(d.flags|=4),Fn(d),null);case 4:return ja(),Tx(u,d),u===null&&Yu(d.stateNode.containerInfo),Fn(d),null;case 10:return nx(d.type._context),Fn(d),null;case 17:return is(d.type)&&sp(),Fn(d),null;case 19:if(Ct(Ft),C=d.memoizedState,C===null)return Fn(d),null;if(x=(d.flags&128)!==0,A=C.rendering,A===null)if(x)lc(C,!1);else{if(rn!==0||u!==null&&u.flags&128)for(u=d.child;u!==null;){if(A=fp(u),A!==null){for(d.flags|=128,lc(C,!1),x=A.updateQueue,x!==null&&(d.updateQueue=x,d.flags|=4),d.subtreeFlags=0,x=m,m=d.child;m!==null;)C=m,u=x,C.flags&=14680066,A=C.alternate,A===null?(C.childLanes=0,C.lanes=u,C.child=null,C.subtreeFlags=0,C.memoizedProps=null,C.memoizedState=null,C.updateQueue=null,C.dependencies=null,C.stateNode=null):(C.childLanes=A.childLanes,C.lanes=A.lanes,C.child=A.child,C.subtreeFlags=0,C.deletions=null,C.memoizedProps=A.memoizedProps,C.memoizedState=A.memoizedState,C.updateQueue=A.updateQueue,C.type=A.type,u=A.dependencies,C.dependencies=u===null?null:{lanes:u.lanes,firstContext:u.firstContext}),m=m.sibling;return kt(Ft,Ft.current&1|2),d.child}u=u.sibling}C.tail!==null&&Gt()>Ya&&(d.flags|=128,x=!0,lc(C,!1),d.lanes=4194304)}else{if(!x)if(u=fp(A),u!==null){if(d.flags|=128,x=!0,m=u.updateQueue,m!==null&&(d.updateQueue=m,d.flags|=4),lc(C,!0),C.tail===null&&C.tailMode==="hidden"&&!A.alternate&&!Et)return Fn(d),null}else 2*Gt()-C.renderingStartTime>Ya&&m!==1073741824&&(d.flags|=128,x=!0,lc(C,!1),d.lanes=4194304);C.isBackwards?(A.sibling=d.child,d.child=A):(m=C.last,m!==null?m.sibling=A:d.child=A,C.last=A)}return C.tail!==null?(d=C.tail,C.rendering=d,C.tail=d.sibling,C.renderingStartTime=Gt(),d.sibling=null,m=Ft.current,kt(Ft,x?m&1|2:m&1),d):(Fn(d),null);case 22:case 23:return Vx(),x=d.memoizedState!==null,u!==null&&u.memoizedState!==null!==x&&(d.flags|=8192),x&&d.mode&1?Cs&1073741824&&(Fn(d),d.subtreeFlags&6&&(d.flags|=8192)):Fn(d),null;case 24:return null;case 25:return null}throw Error(t(156,d.tag))}function g_(u,d){switch(Yy(d),d.tag){case 1:return is(d.type)&&sp(),u=d.flags,u&65536?(d.flags=u&-65537|128,d):null;case 3:return ja(),Ct(os),Ct(_n),ux(),u=d.flags,u&65536&&!(u&128)?(d.flags=u&-65537|128,d):null;case 5:return ax(d),null;case 13:if(Ct(Ft),u=d.memoizedState,u!==null&&u.dehydrated!==null){if(d.alternate===null)throw Error(t(340));Wa()}return u=d.flags,u&65536?(d.flags=u&-65537|128,d):null;case 19:return Ct(Ft),null;case 4:return ja(),null;case 10:return nx(d.type._context),null;case 22:case 23:return Vx(),null;case 24:return null;default:return null}}var kp=!1,Ln=!1,y_=typeof WeakSet=="function"?WeakSet:Set,Te=null;function Ka(u,d){var m=u.ref;if(m!==null)if(typeof m=="function")try{m(null)}catch(x){zt(u,d,x)}else m.current=null}function Ex(u,d,m){try{m()}catch(x){zt(u,d,x)}}var bk=!1;function x_(u,d){if(Vy=Uh,u=Zv(),_y(u)){if("selectionStart"in u)var m={start:u.selectionStart,end:u.selectionEnd};else e:{m=(m=u.ownerDocument)&&m.defaultView||window;var x=m.getSelection&&m.getSelection();if(x&&x.rangeCount!==0){m=x.anchorNode;var k=x.anchorOffset,C=x.focusNode;x=x.focusOffset;try{m.nodeType,C.nodeType}catch{m=null;break e}var A=0,M=-1,H=-1,ae=0,ye=0,xe=u,ge=null;t:for(;;){for(var Ie;xe!==m||k!==0&&xe.nodeType!==3||(M=A+k),xe!==C||x!==0&&xe.nodeType!==3||(H=A+x),xe.nodeType===3&&(A+=xe.nodeValue.length),(Ie=xe.firstChild)!==null;)ge=xe,xe=Ie;for(;;){if(xe===u)break t;if(ge===m&&++ae===k&&(M=A),ge===C&&++ye===x&&(H=A),(Ie=xe.nextSibling)!==null)break;xe=ge,ge=xe.parentNode}xe=Ie}m=M===-1||H===-1?null:{start:M,end:H}}else m=null}m=m||{start:0,end:0}}else m=null;for(Wy={focusedElem:u,selectionRange:m},Uh=!1,Te=d;Te!==null;)if(d=Te,u=d.child,(d.subtreeFlags&1028)!==0&&u!==null)u.return=d,Te=u;else for(;Te!==null;){d=Te;try{var Ae=d.alternate;if(d.flags&1024)switch(d.tag){case 0:case 11:case 15:break;case 1:if(Ae!==null){var Oe=Ae.memoizedProps,Ht=Ae.memoizedState,re=d.stateNode,Y=re.getSnapshotBeforeUpdate(d.elementType===d.type?Oe:rr(d.type,Oe),Ht);re.__reactInternalSnapshotBeforeUpdate=Y}break;case 3:var ie=d.stateNode.containerInfo;ie.nodeType===1?ie.textContent="":ie.nodeType===9&&ie.documentElement&&ie.removeChild(ie.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(t(163))}}catch(we){zt(d,d.return,we)}if(u=d.sibling,u!==null){u.return=d.return,Te=u;break}Te=d.return}return Ae=bk,bk=!1,Ae}function uc(u,d,m){var x=d.updateQueue;if(x=x!==null?x.lastEffect:null,x!==null){var k=x=x.next;do{if((k.tag&u)===u){var C=k.destroy;k.destroy=void 0,C!==void 0&&Ex(d,m,C)}k=k.next}while(k!==x)}}function Np(u,d){if(d=d.updateQueue,d=d!==null?d.lastEffect:null,d!==null){var m=d=d.next;do{if((m.tag&u)===u){var x=m.create;m.destroy=x()}m=m.next}while(m!==d)}}function Rx(u){var d=u.ref;if(d!==null){var m=u.stateNode;switch(u.tag){case 5:u=m;break;default:u=m}typeof d=="function"?d(u):d.current=u}}function vk(u){var d=u.alternate;d!==null&&(u.alternate=null,vk(d)),u.child=null,u.deletions=null,u.sibling=null,u.tag===5&&(d=u.stateNode,d!==null&&(delete d[$r],delete d[Zu],delete d[jy],delete d[e_],delete d[t_])),u.stateNode=null,u.return=null,u.dependencies=null,u.memoizedProps=null,u.memoizedState=null,u.pendingProps=null,u.stateNode=null,u.updateQueue=null}function Sk(u){return u.tag===5||u.tag===3||u.tag===4}function kk(u){e:for(;;){for(;u.sibling===null;){if(u.return===null||Sk(u.return))return null;u=u.return}for(u.sibling.return=u.return,u=u.sibling;u.tag!==5&&u.tag!==6&&u.tag!==18;){if(u.flags&2||u.child===null||u.tag===4)continue e;u.child.return=u,u=u.child}if(!(u.flags&2))return u.stateNode}}function Ax(u,d,m){var x=u.tag;if(x===5||x===6)u=u.stateNode,d?m.nodeType===8?m.parentNode.insertBefore(u,d):m.insertBefore(u,d):(m.nodeType===8?(d=m.parentNode,d.insertBefore(u,m)):(d=m,d.appendChild(u)),m=m._reactRootContainer,m!=null||d.onclick!==null||(d.onclick=tp));else if(x!==4&&(u=u.child,u!==null))for(Ax(u,d,m),u=u.sibling;u!==null;)Ax(u,d,m),u=u.sibling}function Dx(u,d,m){var x=u.tag;if(x===5||x===6)u=u.stateNode,d?m.insertBefore(u,d):m.appendChild(u);else if(x!==4&&(u=u.child,u!==null))for(Dx(u,d,m),u=u.sibling;u!==null;)Dx(u,d,m),u=u.sibling}var $n=null,or=!1;function Mo(u,d,m){for(m=m.child;m!==null;)Nk(u,d,m),m=m.sibling}function Nk(u,d,m){if(Cr&&typeof Cr.onCommitFiberUnmount=="function")try{Cr.onCommitFiberUnmount(Ph,m)}catch{}switch(m.tag){case 5:Ln||Ka(m,d);case 6:var x=$n,k=or;$n=null,Mo(u,d,m),$n=x,or=k,$n!==null&&(or?(u=$n,m=m.stateNode,u.nodeType===8?u.parentNode.removeChild(m):u.removeChild(m)):$n.removeChild(m.stateNode));break;case 18:$n!==null&&(or?(u=$n,m=m.stateNode,u.nodeType===8?Hy(u.parentNode,m):u.nodeType===1&&Hy(u,m),Vu(u)):Hy($n,m.stateNode));break;case 4:x=$n,k=or,$n=m.stateNode.containerInfo,or=!0,Mo(u,d,m),$n=x,or=k;break;case 0:case 11:case 14:case 15:if(!Ln&&(x=m.updateQueue,x!==null&&(x=x.lastEffect,x!==null))){k=x=x.next;do{var C=k,A=C.destroy;C=C.tag,A!==void 0&&(C&2||C&4)&&Ex(m,d,A),k=k.next}while(k!==x)}Mo(u,d,m);break;case 1:if(!Ln&&(Ka(m,d),x=m.stateNode,typeof x.componentWillUnmount=="function"))try{x.props=m.memoizedProps,x.state=m.memoizedState,x.componentWillUnmount()}catch(M){zt(m,d,M)}Mo(u,d,m);break;case 21:Mo(u,d,m);break;case 22:m.mode&1?(Ln=(x=Ln)||m.memoizedState!==null,Mo(u,d,m),Ln=x):Mo(u,d,m);break;default:Mo(u,d,m)}}function Ck(u){var d=u.updateQueue;if(d!==null){u.updateQueue=null;var m=u.stateNode;m===null&&(m=u.stateNode=new y_),d.forEach(function(x){var k=I_.bind(null,u,x);m.has(x)||(m.add(x),x.then(k,k))})}}function ir(u,d){var m=d.deletions;if(m!==null)for(var x=0;x<m.length;x++){var k=m[x];try{var C=u,A=d,M=A;e:for(;M!==null;){switch(M.tag){case 5:$n=M.stateNode,or=!1;break e;case 3:$n=M.stateNode.containerInfo,or=!0;break e;case 4:$n=M.stateNode.containerInfo,or=!0;break e}M=M.return}if($n===null)throw Error(t(160));Nk(C,A,k),$n=null,or=!1;var H=k.alternate;H!==null&&(H.return=null),k.return=null}catch(ae){zt(k,d,ae)}}if(d.subtreeFlags&12854)for(d=d.child;d!==null;)$k(d,u),d=d.sibling}function $k(u,d){var m=u.alternate,x=u.flags;switch(u.tag){case 0:case 11:case 14:case 15:if(ir(d,u),Er(u),x&4){try{uc(3,u,u.return),Np(3,u)}catch(Oe){zt(u,u.return,Oe)}try{uc(5,u,u.return)}catch(Oe){zt(u,u.return,Oe)}}break;case 1:ir(d,u),Er(u),x&512&&m!==null&&Ka(m,m.return);break;case 5:if(ir(d,u),Er(u),x&512&&m!==null&&Ka(m,m.return),u.flags&32){var k=u.stateNode;try{Kr(k,"")}catch(Oe){zt(u,u.return,Oe)}}if(x&4&&(k=u.stateNode,k!=null)){var C=u.memoizedProps,A=m!==null?m.memoizedProps:C,M=u.type,H=u.updateQueue;if(u.updateQueue=null,H!==null)try{M==="input"&&C.type==="radio"&&C.name!=null&&at(k,C),uy(M,A);var ae=uy(M,C);for(A=0;A<H.length;A+=2){var ye=H[A],xe=H[A+1];ye==="style"?_h(k,xe):ye==="dangerouslySetInnerHTML"?$o(k,xe):ye==="children"?Kr(k,xe):$(k,ye,xe,ae)}switch(M){case"input":gt(k,C);break;case"textarea":rs(k,C);break;case"select":var ge=k._wrapperState.wasMultiple;k._wrapperState.wasMultiple=!!C.multiple;var Ie=C.value;Ie!=null?Hn(k,!!C.multiple,Ie,!1):ge!==!!C.multiple&&(C.defaultValue!=null?Hn(k,!!C.multiple,C.defaultValue,!0):Hn(k,!!C.multiple,C.multiple?[]:"",!1))}k[Zu]=C}catch(Oe){zt(u,u.return,Oe)}}break;case 6:if(ir(d,u),Er(u),x&4){if(u.stateNode===null)throw Error(t(162));k=u.stateNode,C=u.memoizedProps;try{k.nodeValue=C}catch(Oe){zt(u,u.return,Oe)}}break;case 3:if(ir(d,u),Er(u),x&4&&m!==null&&m.memoizedState.isDehydrated)try{Vu(d.containerInfo)}catch(Oe){zt(u,u.return,Oe)}break;case 4:ir(d,u),Er(u);break;case 13:ir(d,u),Er(u),k=u.child,k.flags&8192&&(C=k.memoizedState!==null,k.stateNode.isHidden=C,!C||k.alternate!==null&&k.alternate.memoizedState!==null||(Fx=Gt())),x&4&&Ck(u);break;case 22:if(ye=m!==null&&m.memoizedState!==null,u.mode&1?(Ln=(ae=Ln)||ye,ir(d,u),Ln=ae):ir(d,u),Er(u),x&8192){if(ae=u.memoizedState!==null,(u.stateNode.isHidden=ae)&&!ye&&u.mode&1)for(Te=u,ye=u.child;ye!==null;){for(xe=Te=ye;Te!==null;){switch(ge=Te,Ie=ge.child,ge.tag){case 0:case 11:case 14:case 15:uc(4,ge,ge.return);break;case 1:Ka(ge,ge.return);var Ae=ge.stateNode;if(typeof Ae.componentWillUnmount=="function"){x=ge,m=ge.return;try{d=x,Ae.props=d.memoizedProps,Ae.state=d.memoizedState,Ae.componentWillUnmount()}catch(Oe){zt(x,m,Oe)}}break;case 5:Ka(ge,ge.return);break;case 22:if(ge.memoizedState!==null){Ek(xe);continue}}Ie!==null?(Ie.return=ge,Te=Ie):Ek(xe)}ye=ye.sibling}e:for(ye=null,xe=u;;){if(xe.tag===5){if(ye===null){ye=xe;try{k=xe.stateNode,ae?(C=k.style,typeof C.setProperty=="function"?C.setProperty("display","none","important"):C.display="none"):(M=xe.stateNode,H=xe.memoizedProps.style,A=H!=null&&H.hasOwnProperty("display")?H.display:null,M.style.display=Si("display",A))}catch(Oe){zt(u,u.return,Oe)}}}else if(xe.tag===6){if(ye===null)try{xe.stateNode.nodeValue=ae?"":xe.memoizedProps}catch(Oe){zt(u,u.return,Oe)}}else if((xe.tag!==22&&xe.tag!==23||xe.memoizedState===null||xe===u)&&xe.child!==null){xe.child.return=xe,xe=xe.child;continue}if(xe===u)break e;for(;xe.sibling===null;){if(xe.return===null||xe.return===u)break e;ye===xe&&(ye=null),xe=xe.return}ye===xe&&(ye=null),xe.sibling.return=xe.return,xe=xe.sibling}}break;case 19:ir(d,u),Er(u),x&4&&Ck(u);break;case 21:break;default:ir(d,u),Er(u)}}function Er(u){var d=u.flags;if(d&2){try{e:{for(var m=u.return;m!==null;){if(Sk(m)){var x=m;break e}m=m.return}throw Error(t(160))}switch(x.tag){case 5:var k=x.stateNode;x.flags&32&&(Kr(k,""),x.flags&=-33);var C=kk(u);Dx(u,C,k);break;case 3:case 4:var A=x.stateNode.containerInfo,M=kk(u);Ax(u,M,A);break;default:throw Error(t(161))}}catch(H){zt(u,u.return,H)}u.flags&=-3}d&4096&&(u.flags&=-4097)}function w_(u,d,m){Te=u,Ik(u)}function Ik(u,d,m){for(var x=(u.mode&1)!==0;Te!==null;){var k=Te,C=k.child;if(k.tag===22&&x){var A=k.memoizedState!==null||kp;if(!A){var M=k.alternate,H=M!==null&&M.memoizedState!==null||Ln;M=kp;var ae=Ln;if(kp=A,(Ln=H)&&!ae)for(Te=k;Te!==null;)A=Te,H=A.child,A.tag===22&&A.memoizedState!==null?Rk(k):H!==null?(H.return=A,Te=H):Rk(k);for(;C!==null;)Te=C,Ik(C),C=C.sibling;Te=k,kp=M,Ln=ae}Tk(u)}else k.subtreeFlags&8772&&C!==null?(C.return=k,Te=C):Tk(u)}}function Tk(u){for(;Te!==null;){var d=Te;if(d.flags&8772){var m=d.alternate;try{if(d.flags&8772)switch(d.tag){case 0:case 11:case 15:Ln||Np(5,d);break;case 1:var x=d.stateNode;if(d.flags&4&&!Ln)if(m===null)x.componentDidMount();else{var k=d.elementType===d.type?m.memoizedProps:rr(d.type,m.memoizedProps);x.componentDidUpdate(k,m.memoizedState,x.__reactInternalSnapshotBeforeUpdate)}var C=d.updateQueue;C!==null&&ES(d,C,x);break;case 3:var A=d.updateQueue;if(A!==null){if(m=null,d.child!==null)switch(d.child.tag){case 5:m=d.child.stateNode;break;case 1:m=d.child.stateNode}ES(d,A,m)}break;case 5:var M=d.stateNode;if(m===null&&d.flags&4){m=M;var H=d.memoizedProps;switch(d.type){case"button":case"input":case"select":case"textarea":H.autoFocus&&m.focus();break;case"img":H.src&&(m.src=H.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(d.memoizedState===null){var ae=d.alternate;if(ae!==null){var ye=ae.memoizedState;if(ye!==null){var xe=ye.dehydrated;xe!==null&&Vu(xe)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(t(163))}Ln||d.flags&512&&Rx(d)}catch(ge){zt(d,d.return,ge)}}if(d===u){Te=null;break}if(m=d.sibling,m!==null){m.return=d.return,Te=m;break}Te=d.return}}function Ek(u){for(;Te!==null;){var d=Te;if(d===u){Te=null;break}var m=d.sibling;if(m!==null){m.return=d.return,Te=m;break}Te=d.return}}function Rk(u){for(;Te!==null;){var d=Te;try{switch(d.tag){case 0:case 11:case 15:var m=d.return;try{Np(4,d)}catch(H){zt(d,m,H)}break;case 1:var x=d.stateNode;if(typeof x.componentDidMount=="function"){var k=d.return;try{x.componentDidMount()}catch(H){zt(d,k,H)}}var C=d.return;try{Rx(d)}catch(H){zt(d,C,H)}break;case 5:var A=d.return;try{Rx(d)}catch(H){zt(d,A,H)}}}catch(H){zt(d,d.return,H)}if(d===u){Te=null;break}var M=d.sibling;if(M!==null){M.return=d.return,Te=M;break}Te=d.return}}var b_=Math.ceil,Cp=N.ReactCurrentDispatcher,_x=N.ReactCurrentOwner,Vs=N.ReactCurrentBatchConfig,ot=0,fn=null,Yt=null,In=0,Cs=0,Xa=Oo(0),rn=0,cc=null,Ai=0,$p=0,Ox=0,dc=null,ls=null,Fx=0,Ya=1/0,so=null,Ip=!1,Lx=null,Bo=null,Tp=!1,Vo=null,Ep=0,hc=0,Px=null,Rp=-1,Ap=0;function qn(){return ot&6?Gt():Rp!==-1?Rp:Rp=Gt()}function Wo(u){return u.mode&1?ot&2&&In!==0?In&-In:s_.transition!==null?(Ap===0&&(Ap=kv()),Ap):(u=pt,u!==0||(u=window.event,u=u===void 0?16:Dv(u.type)),u):1}function ar(u,d,m,x){if(50<hc)throw hc=0,Px=null,Error(t(185));Lu(u,m,x),(!(ot&2)||u!==fn)&&(u===fn&&(!(ot&2)&&($p|=m),rn===4&&Uo(u,In)),us(u,x),m===1&&ot===0&&!(d.mode&1)&&(Ya=Gt()+500,op&&Lo()))}function us(u,d){var m=u.callbackNode;sD(u,d);var x=Bh(u,u===fn?In:0);if(x===0)m!==null&&bv(m),u.callbackNode=null,u.callbackPriority=0;else if(d=x&-x,u.callbackPriority!==d){if(m!=null&&bv(m),d===1)u.tag===0?n_(Dk.bind(null,u)):yS(Dk.bind(null,u)),ZD(function(){!(ot&6)&&Lo()}),m=null;else{switch(Nv(x)){case 1:m=gy;break;case 4:m=vv;break;case 16:m=Lh;break;case 536870912:m=Sv;break;default:m=Lh}m=Bk(m,Ak.bind(null,u))}u.callbackPriority=d,u.callbackNode=m}}function Ak(u,d){if(Rp=-1,Ap=0,ot&6)throw Error(t(327));var m=u.callbackNode;if(Qa()&&u.callbackNode!==m)return null;var x=Bh(u,u===fn?In:0);if(x===0)return null;if(x&30||x&u.expiredLanes||d)d=Dp(u,x);else{d=x;var k=ot;ot|=2;var C=Ok();(fn!==u||In!==d)&&(so=null,Ya=Gt()+500,_i(u,d));do try{k_();break}catch(M){_k(u,M)}while(!0);tx(),Cp.current=C,ot=k,Yt!==null?d=0:(fn=null,In=0,d=rn)}if(d!==0){if(d===2&&(k=yy(u),k!==0&&(x=k,d=zx(u,k))),d===1)throw m=cc,_i(u,0),Uo(u,x),us(u,Gt()),m;if(d===6)Uo(u,x);else{if(k=u.current.alternate,!(x&30)&&!v_(k)&&(d=Dp(u,x),d===2&&(C=yy(u),C!==0&&(x=C,d=zx(u,C))),d===1))throw m=cc,_i(u,0),Uo(u,x),us(u,Gt()),m;switch(u.finishedWork=k,u.finishedLanes=x,d){case 0:case 1:throw Error(t(345));case 2:Oi(u,ls,so);break;case 3:if(Uo(u,x),(x&130023424)===x&&(d=Fx+500-Gt(),10<d)){if(Bh(u,0)!==0)break;if(k=u.suspendedLanes,(k&x)!==x){qn(),u.pingedLanes|=u.suspendedLanes&k;break}u.timeoutHandle=Gy(Oi.bind(null,u,ls,so),d);break}Oi(u,ls,so);break;case 4:if(Uo(u,x),(x&4194240)===x)break;for(d=u.eventTimes,k=-1;0<x;){var A=31-tr(x);C=1<<A,A=d[A],A>k&&(k=A),x&=~C}if(x=k,x=Gt()-x,x=(120>x?120:480>x?480:1080>x?1080:1920>x?1920:3e3>x?3e3:4320>x?4320:1960*b_(x/1960))-x,10<x){u.timeoutHandle=Gy(Oi.bind(null,u,ls,so),x);break}Oi(u,ls,so);break;case 5:Oi(u,ls,so);break;default:throw Error(t(329))}}}return us(u,Gt()),u.callbackNode===m?Ak.bind(null,u):null}function zx(u,d){var m=dc;return u.current.memoizedState.isDehydrated&&(_i(u,d).flags|=256),u=Dp(u,d),u!==2&&(d=ls,ls=m,d!==null&&Mx(d)),u}function Mx(u){ls===null?ls=u:ls.push.apply(ls,u)}function v_(u){for(var d=u;;){if(d.flags&16384){var m=d.updateQueue;if(m!==null&&(m=m.stores,m!==null))for(var x=0;x<m.length;x++){var k=m[x],C=k.getSnapshot;k=k.value;try{if(!nr(C(),k))return!1}catch{return!1}}}if(m=d.child,d.subtreeFlags&16384&&m!==null)m.return=d,d=m;else{if(d===u)break;for(;d.sibling===null;){if(d.return===null||d.return===u)return!0;d=d.return}d.sibling.return=d.return,d=d.sibling}}return!0}function Uo(u,d){for(d&=~Ox,d&=~$p,u.suspendedLanes|=d,u.pingedLanes&=~d,u=u.expirationTimes;0<d;){var m=31-tr(d),x=1<<m;u[m]=-1,d&=~x}}function Dk(u){if(ot&6)throw Error(t(327));Qa();var d=Bh(u,0);if(!(d&1))return us(u,Gt()),null;var m=Dp(u,d);if(u.tag!==0&&m===2){var x=yy(u);x!==0&&(d=x,m=zx(u,x))}if(m===1)throw m=cc,_i(u,0),Uo(u,d),us(u,Gt()),m;if(m===6)throw Error(t(345));return u.finishedWork=u.current.alternate,u.finishedLanes=d,Oi(u,ls,so),us(u,Gt()),null}function Bx(u,d){var m=ot;ot|=1;try{return u(d)}finally{ot=m,ot===0&&(Ya=Gt()+500,op&&Lo())}}function Di(u){Vo!==null&&Vo.tag===0&&!(ot&6)&&Qa();var d=ot;ot|=1;var m=Vs.transition,x=pt;try{if(Vs.transition=null,pt=1,u)return u()}finally{pt=x,Vs.transition=m,ot=d,!(ot&6)&&Lo()}}function Vx(){Cs=Xa.current,Ct(Xa)}function _i(u,d){u.finishedWork=null,u.finishedLanes=0;var m=u.timeoutHandle;if(m!==-1&&(u.timeoutHandle=-1,QD(m)),Yt!==null)for(m=Yt.return;m!==null;){var x=m;switch(Yy(x),x.tag){case 1:x=x.type.childContextTypes,x!=null&&sp();break;case 3:ja(),Ct(os),Ct(_n),ux();break;case 5:ax(x);break;case 4:ja();break;case 13:Ct(Ft);break;case 19:Ct(Ft);break;case 10:nx(x.type._context);break;case 22:case 23:Vx()}m=m.return}if(fn=u,Yt=u=Go(u.current,null),In=Cs=d,rn=0,cc=null,Ox=$p=Ai=0,ls=dc=null,Ti!==null){for(d=0;d<Ti.length;d++)if(m=Ti[d],x=m.interleaved,x!==null){m.interleaved=null;var k=x.next,C=m.pending;if(C!==null){var A=C.next;C.next=k,x.next=A}m.pending=x}Ti=null}return u}function _k(u,d){do{var m=Yt;try{if(tx(),mp.current=wp,gp){for(var x=Lt.memoizedState;x!==null;){var k=x.queue;k!==null&&(k.pending=null),x=x.next}gp=!1}if(Ri=0,pn=sn=Lt=null,rc=!1,oc=0,_x.current=null,m===null||m.return===null){rn=1,cc=d,Yt=null;break}e:{var C=u,A=m.return,M=m,H=d;if(d=In,M.flags|=32768,H!==null&&typeof H=="object"&&typeof H.then=="function"){var ae=H,ye=M,xe=ye.tag;if(!(ye.mode&1)&&(xe===0||xe===11||xe===15)){var ge=ye.alternate;ge?(ye.updateQueue=ge.updateQueue,ye.memoizedState=ge.memoizedState,ye.lanes=ge.lanes):(ye.updateQueue=null,ye.memoizedState=null)}var Ie=rk(A);if(Ie!==null){Ie.flags&=-257,ok(Ie,A,M,C,d),Ie.mode&1&&sk(C,ae,d),d=Ie,H=ae;var Ae=d.updateQueue;if(Ae===null){var Oe=new Set;Oe.add(H),d.updateQueue=Oe}else Ae.add(H);break e}else{if(!(d&1)){sk(C,ae,d),Wx();break e}H=Error(t(426))}}else if(Et&&M.mode&1){var Ht=rk(A);if(Ht!==null){!(Ht.flags&65536)&&(Ht.flags|=256),ok(Ht,A,M,C,d),Jy(qa(H,M));break e}}C=H=qa(H,M),rn!==4&&(rn=2),dc===null?dc=[C]:dc.push(C),C=A;do{switch(C.tag){case 3:C.flags|=65536,d&=-d,C.lanes|=d;var re=tk(C,H,d);TS(C,re);break e;case 1:M=H;var Y=C.type,ie=C.stateNode;if(!(C.flags&128)&&(typeof Y.getDerivedStateFromError=="function"||ie!==null&&typeof ie.componentDidCatch=="function"&&(Bo===null||!Bo.has(ie)))){C.flags|=65536,d&=-d,C.lanes|=d;var we=nk(C,M,d);TS(C,we);break e}}C=C.return}while(C!==null)}Lk(m)}catch(Fe){d=Fe,Yt===m&&m!==null&&(Yt=m=m.return);continue}break}while(!0)}function Ok(){var u=Cp.current;return Cp.current=wp,u===null?wp:u}function Wx(){(rn===0||rn===3||rn===2)&&(rn=4),fn===null||!(Ai&268435455)&&!($p&268435455)||Uo(fn,In)}function Dp(u,d){var m=ot;ot|=2;var x=Ok();(fn!==u||In!==d)&&(so=null,_i(u,d));do try{S_();break}catch(k){_k(u,k)}while(!0);if(tx(),ot=m,Cp.current=x,Yt!==null)throw Error(t(261));return fn=null,In=0,rn}function S_(){for(;Yt!==null;)Fk(Yt)}function k_(){for(;Yt!==null&&!KA();)Fk(Yt)}function Fk(u){var d=Mk(u.alternate,u,Cs);u.memoizedProps=u.pendingProps,d===null?Lk(u):Yt=d,_x.current=null}function Lk(u){var d=u;do{var m=d.alternate;if(u=d.return,d.flags&32768){if(m=g_(m,d),m!==null){m.flags&=32767,Yt=m;return}if(u!==null)u.flags|=32768,u.subtreeFlags=0,u.deletions=null;else{rn=6,Yt=null;return}}else if(m=m_(m,d,Cs),m!==null){Yt=m;return}if(d=d.sibling,d!==null){Yt=d;return}Yt=d=u}while(d!==null);rn===0&&(rn=5)}function Oi(u,d,m){var x=pt,k=Vs.transition;try{Vs.transition=null,pt=1,N_(u,d,m,x)}finally{Vs.transition=k,pt=x}return null}function N_(u,d,m,x){do Qa();while(Vo!==null);if(ot&6)throw Error(t(327));m=u.finishedWork;var k=u.finishedLanes;if(m===null)return null;if(u.finishedWork=null,u.finishedLanes=0,m===u.current)throw Error(t(177));u.callbackNode=null,u.callbackPriority=0;var C=m.lanes|m.childLanes;if(rD(u,C),u===fn&&(Yt=fn=null,In=0),!(m.subtreeFlags&2064)&&!(m.flags&2064)||Tp||(Tp=!0,Bk(Lh,function(){return Qa(),null})),C=(m.flags&15990)!==0,m.subtreeFlags&15990||C){C=Vs.transition,Vs.transition=null;var A=pt;pt=1;var M=ot;ot|=4,_x.current=null,x_(u,m),$k(m,u),GD(Wy),Uh=!!Vy,Wy=Vy=null,u.current=m,w_(m),XA(),ot=M,pt=A,Vs.transition=C}else u.current=m;if(Tp&&(Tp=!1,Vo=u,Ep=k),C=u.pendingLanes,C===0&&(Bo=null),ZA(m.stateNode),us(u,Gt()),d!==null)for(x=u.onRecoverableError,m=0;m<d.length;m++)k=d[m],x(k.value,{componentStack:k.stack,digest:k.digest});if(Ip)throw Ip=!1,u=Lx,Lx=null,u;return Ep&1&&u.tag!==0&&Qa(),C=u.pendingLanes,C&1?u===Px?hc++:(hc=0,Px=u):hc=0,Lo(),null}function Qa(){if(Vo!==null){var u=Nv(Ep),d=Vs.transition,m=pt;try{if(Vs.transition=null,pt=16>u?16:u,Vo===null)var x=!1;else{if(u=Vo,Vo=null,Ep=0,ot&6)throw Error(t(331));var k=ot;for(ot|=4,Te=u.current;Te!==null;){var C=Te,A=C.child;if(Te.flags&16){var M=C.deletions;if(M!==null){for(var H=0;H<M.length;H++){var ae=M[H];for(Te=ae;Te!==null;){var ye=Te;switch(ye.tag){case 0:case 11:case 15:uc(8,ye,C)}var xe=ye.child;if(xe!==null)xe.return=ye,Te=xe;else for(;Te!==null;){ye=Te;var ge=ye.sibling,Ie=ye.return;if(vk(ye),ye===ae){Te=null;break}if(ge!==null){ge.return=Ie,Te=ge;break}Te=Ie}}}var Ae=C.alternate;if(Ae!==null){var Oe=Ae.child;if(Oe!==null){Ae.child=null;do{var Ht=Oe.sibling;Oe.sibling=null,Oe=Ht}while(Oe!==null)}}Te=C}}if(C.subtreeFlags&2064&&A!==null)A.return=C,Te=A;else e:for(;Te!==null;){if(C=Te,C.flags&2048)switch(C.tag){case 0:case 11:case 15:uc(9,C,C.return)}var re=C.sibling;if(re!==null){re.return=C.return,Te=re;break e}Te=C.return}}var Y=u.current;for(Te=Y;Te!==null;){A=Te;var ie=A.child;if(A.subtreeFlags&2064&&ie!==null)ie.return=A,Te=ie;else e:for(A=Y;Te!==null;){if(M=Te,M.flags&2048)try{switch(M.tag){case 0:case 11:case 15:Np(9,M)}}catch(Fe){zt(M,M.return,Fe)}if(M===A){Te=null;break e}var we=M.sibling;if(we!==null){we.return=M.return,Te=we;break e}Te=M.return}}if(ot=k,Lo(),Cr&&typeof Cr.onPostCommitFiberRoot=="function")try{Cr.onPostCommitFiberRoot(Ph,u)}catch{}x=!0}return x}finally{pt=m,Vs.transition=d}}return!1}function Pk(u,d,m){d=qa(m,d),d=tk(u,d,1),u=zo(u,d,1),d=qn(),u!==null&&(Lu(u,1,d),us(u,d))}function zt(u,d,m){if(u.tag===3)Pk(u,u,m);else for(;d!==null;){if(d.tag===3){Pk(d,u,m);break}else if(d.tag===1){var x=d.stateNode;if(typeof d.type.getDerivedStateFromError=="function"||typeof x.componentDidCatch=="function"&&(Bo===null||!Bo.has(x))){u=qa(m,u),u=nk(d,u,1),d=zo(d,u,1),u=qn(),d!==null&&(Lu(d,1,u),us(d,u));break}}d=d.return}}function C_(u,d,m){var x=u.pingCache;x!==null&&x.delete(d),d=qn(),u.pingedLanes|=u.suspendedLanes&m,fn===u&&(In&m)===m&&(rn===4||rn===3&&(In&130023424)===In&&500>Gt()-Fx?_i(u,0):Ox|=m),us(u,d)}function zk(u,d){d===0&&(u.mode&1?(d=Mh,Mh<<=1,!(Mh&130023424)&&(Mh=4194304)):d=1);var m=qn();u=eo(u,d),u!==null&&(Lu(u,d,m),us(u,m))}function $_(u){var d=u.memoizedState,m=0;d!==null&&(m=d.retryLane),zk(u,m)}function I_(u,d){var m=0;switch(u.tag){case 13:var x=u.stateNode,k=u.memoizedState;k!==null&&(m=k.retryLane);break;case 19:x=u.stateNode;break;default:throw Error(t(314))}x!==null&&x.delete(d),zk(u,m)}var Mk;Mk=function(u,d,m){if(u!==null)if(u.memoizedProps!==d.pendingProps||os.current)as=!0;else{if(!(u.lanes&m)&&!(d.flags&128))return as=!1,f_(u,d,m);as=!!(u.flags&131072)}else as=!1,Et&&d.flags&1048576&&xS(d,ap,d.index);switch(d.lanes=0,d.tag){case 2:var x=d.type;Sp(u,d),u=d.pendingProps;var k=Ma(d,_n.current);Ha(d,m),k=hx(null,d,x,u,k,m);var C=px();return d.flags|=1,typeof k=="object"&&k!==null&&typeof k.render=="function"&&k.$$typeof===void 0?(d.tag=1,d.memoizedState=null,d.updateQueue=null,is(x)?(C=!0,rp(d)):C=!1,d.memoizedState=k.state!==null&&k.state!==void 0?k.state:null,ox(d),k.updater=bp,d.stateNode=k,k._reactInternals=d,wx(d,x,u,m),d=kx(null,d,x,!0,C,m)):(d.tag=0,Et&&C&&Xy(d),jn(null,d,k,m),d=d.child),d;case 16:x=d.elementType;e:{switch(Sp(u,d),u=d.pendingProps,k=x._init,x=k(x._payload),d.type=x,k=d.tag=E_(x),u=rr(x,u),k){case 0:d=Sx(null,d,x,u,m);break e;case 1:d=dk(null,d,x,u,m);break e;case 11:d=ik(null,d,x,u,m);break e;case 14:d=ak(null,d,x,rr(x.type,u),m);break e}throw Error(t(306,x,""))}return d;case 0:return x=d.type,k=d.pendingProps,k=d.elementType===x?k:rr(x,k),Sx(u,d,x,k,m);case 1:return x=d.type,k=d.pendingProps,k=d.elementType===x?k:rr(x,k),dk(u,d,x,k,m);case 3:e:{if(hk(d),u===null)throw Error(t(387));x=d.pendingProps,C=d.memoizedState,k=C.element,IS(u,d),pp(d,x,null,m);var A=d.memoizedState;if(x=A.element,C.isDehydrated)if(C={element:x,isDehydrated:!1,cache:A.cache,pendingSuspenseBoundaries:A.pendingSuspenseBoundaries,transitions:A.transitions},d.updateQueue.baseState=C,d.memoizedState=C,d.flags&256){k=qa(Error(t(423)),d),d=pk(u,d,x,m,k);break e}else if(x!==k){k=qa(Error(t(424)),d),d=pk(u,d,x,m,k);break e}else for(Ns=_o(d.stateNode.containerInfo.firstChild),ks=d,Et=!0,sr=null,m=CS(d,null,x,m),d.child=m;m;)m.flags=m.flags&-3|4096,m=m.sibling;else{if(Wa(),x===k){d=no(u,d,m);break e}jn(u,d,x,m)}d=d.child}return d;case 5:return RS(d),u===null&&Zy(d),x=d.type,k=d.pendingProps,C=u!==null?u.memoizedProps:null,A=k.children,Uy(x,k)?A=null:C!==null&&Uy(x,C)&&(d.flags|=32),ck(u,d),jn(u,d,A,m),d.child;case 6:return u===null&&Zy(d),null;case 13:return fk(u,d,m);case 4:return ix(d,d.stateNode.containerInfo),x=d.pendingProps,u===null?d.child=Ua(d,null,x,m):jn(u,d,x,m),d.child;case 11:return x=d.type,k=d.pendingProps,k=d.elementType===x?k:rr(x,k),ik(u,d,x,k,m);case 7:return jn(u,d,d.pendingProps,m),d.child;case 8:return jn(u,d,d.pendingProps.children,m),d.child;case 12:return jn(u,d,d.pendingProps.children,m),d.child;case 10:e:{if(x=d.type._context,k=d.pendingProps,C=d.memoizedProps,A=k.value,kt(cp,x._currentValue),x._currentValue=A,C!==null)if(nr(C.value,A)){if(C.children===k.children&&!os.current){d=no(u,d,m);break e}}else for(C=d.child,C!==null&&(C.return=d);C!==null;){var M=C.dependencies;if(M!==null){A=C.child;for(var H=M.firstContext;H!==null;){if(H.context===x){if(C.tag===1){H=to(-1,m&-m),H.tag=2;var ae=C.updateQueue;if(ae!==null){ae=ae.shared;var ye=ae.pending;ye===null?H.next=H:(H.next=ye.next,ye.next=H),ae.pending=H}}C.lanes|=m,H=C.alternate,H!==null&&(H.lanes|=m),sx(C.return,m,d),M.lanes|=m;break}H=H.next}}else if(C.tag===10)A=C.type===d.type?null:C.child;else if(C.tag===18){if(A=C.return,A===null)throw Error(t(341));A.lanes|=m,M=A.alternate,M!==null&&(M.lanes|=m),sx(A,m,d),A=C.sibling}else A=C.child;if(A!==null)A.return=C;else for(A=C;A!==null;){if(A===d){A=null;break}if(C=A.sibling,C!==null){C.return=A.return,A=C;break}A=A.return}C=A}jn(u,d,k.children,m),d=d.child}return d;case 9:return k=d.type,x=d.pendingProps.children,Ha(d,m),k=Ms(k),x=x(k),d.flags|=1,jn(u,d,x,m),d.child;case 14:return x=d.type,k=rr(x,d.pendingProps),k=rr(x.type,k),ak(u,d,x,k,m);case 15:return lk(u,d,d.type,d.pendingProps,m);case 17:return x=d.type,k=d.pendingProps,k=d.elementType===x?k:rr(x,k),Sp(u,d),d.tag=1,is(x)?(u=!0,rp(d)):u=!1,Ha(d,m),JS(d,x,k),wx(d,x,k,m),kx(null,d,x,!0,u,m);case 19:return gk(u,d,m);case 22:return uk(u,d,m)}throw Error(t(156,d.tag))};function Bk(u,d){return wv(u,d)}function T_(u,d,m,x){this.tag=u,this.key=m,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=d,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=x,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ws(u,d,m,x){return new T_(u,d,m,x)}function Ux(u){return u=u.prototype,!(!u||!u.isReactComponent)}function E_(u){if(typeof u=="function")return Ux(u)?1:0;if(u!=null){if(u=u.$$typeof,u===W)return 11;if(u===Q)return 14}return 2}function Go(u,d){var m=u.alternate;return m===null?(m=Ws(u.tag,d,u.key,u.mode),m.elementType=u.elementType,m.type=u.type,m.stateNode=u.stateNode,m.alternate=u,u.alternate=m):(m.pendingProps=d,m.type=u.type,m.flags=0,m.subtreeFlags=0,m.deletions=null),m.flags=u.flags&14680064,m.childLanes=u.childLanes,m.lanes=u.lanes,m.child=u.child,m.memoizedProps=u.memoizedProps,m.memoizedState=u.memoizedState,m.updateQueue=u.updateQueue,d=u.dependencies,m.dependencies=d===null?null:{lanes:d.lanes,firstContext:d.firstContext},m.sibling=u.sibling,m.index=u.index,m.ref=u.ref,m}function _p(u,d,m,x,k,C){var A=2;if(x=u,typeof u=="function")Ux(u)&&(A=1);else if(typeof u=="string")A=5;else e:switch(u){case L:return Fi(m.children,k,C,d);case P:A=8,k|=8;break;case O:return u=Ws(12,m,d,k|2),u.elementType=O,u.lanes=C,u;case X:return u=Ws(13,m,d,k),u.elementType=X,u.lanes=C,u;case ee:return u=Ws(19,m,d,k),u.elementType=ee,u.lanes=C,u;case oe:return Op(m,k,C,d);default:if(typeof u=="object"&&u!==null)switch(u.$$typeof){case F:A=10;break e;case E:A=9;break e;case W:A=11;break e;case Q:A=14;break e;case te:A=16,x=null;break e}throw Error(t(130,u==null?u:typeof u,""))}return d=Ws(A,m,d,k),d.elementType=u,d.type=x,d.lanes=C,d}function Fi(u,d,m,x){return u=Ws(7,u,x,d),u.lanes=m,u}function Op(u,d,m,x){return u=Ws(22,u,x,d),u.elementType=oe,u.lanes=m,u.stateNode={isHidden:!1},u}function Gx(u,d,m){return u=Ws(6,u,null,d),u.lanes=m,u}function Hx(u,d,m){return d=Ws(4,u.children!==null?u.children:[],u.key,d),d.lanes=m,d.stateNode={containerInfo:u.containerInfo,pendingChildren:null,implementation:u.implementation},d}function R_(u,d,m,x,k){this.tag=d,this.containerInfo=u,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=xy(0),this.expirationTimes=xy(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=xy(0),this.identifierPrefix=x,this.onRecoverableError=k,this.mutableSourceEagerHydrationData=null}function jx(u,d,m,x,k,C,A,M,H){return u=new R_(u,d,m,M,H),d===1?(d=1,C===!0&&(d|=8)):d=0,C=Ws(3,null,null,d),u.current=C,C.stateNode=u,C.memoizedState={element:x,isDehydrated:m,cache:null,transitions:null,pendingSuspenseBoundaries:null},ox(C),u}function A_(u,d,m){var x=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:R,key:x==null?null:""+x,children:u,containerInfo:d,implementation:m}}function Vk(u){if(!u)return Fo;u=u._reactInternals;e:{if(ki(u)!==u||u.tag!==1)throw Error(t(170));var d=u;do{switch(d.tag){case 3:d=d.stateNode.context;break e;case 1:if(is(d.type)){d=d.stateNode.__reactInternalMemoizedMergedChildContext;break e}}d=d.return}while(d!==null);throw Error(t(171))}if(u.tag===1){var m=u.type;if(is(m))return mS(u,m,d)}return d}function Wk(u,d,m,x,k,C,A,M,H){return u=jx(m,x,!0,u,k,C,A,M,H),u.context=Vk(null),m=u.current,x=qn(),k=Wo(m),C=to(x,k),C.callback=d??null,zo(m,C,k),u.current.lanes=k,Lu(u,k,x),us(u,x),u}function Fp(u,d,m,x){var k=d.current,C=qn(),A=Wo(k);return m=Vk(m),d.context===null?d.context=m:d.pendingContext=m,d=to(C,A),d.payload={element:u},x=x===void 0?null:x,x!==null&&(d.callback=x),u=zo(k,d,A),u!==null&&(ar(u,k,A,C),hp(u,k,A)),A}function Lp(u){if(u=u.current,!u.child)return null;switch(u.child.tag){case 5:return u.child.stateNode;default:return u.child.stateNode}}function Uk(u,d){if(u=u.memoizedState,u!==null&&u.dehydrated!==null){var m=u.retryLane;u.retryLane=m!==0&&m<d?m:d}}function qx(u,d){Uk(u,d),(u=u.alternate)&&Uk(u,d)}var Gk=typeof reportError=="function"?reportError:function(u){console.error(u)};function Kx(u){this._internalRoot=u}Pp.prototype.render=Kx.prototype.render=function(u){var d=this._internalRoot;if(d===null)throw Error(t(409));Fp(u,d,null,null)},Pp.prototype.unmount=Kx.prototype.unmount=function(){var u=this._internalRoot;if(u!==null){this._internalRoot=null;var d=u.containerInfo;Di(function(){Fp(null,u,null,null)}),d[Yr]=null}};function Pp(u){this._internalRoot=u}Pp.prototype.unstable_scheduleHydration=function(u){if(u){var d=Iv();u={blockedOn:null,target:u,priority:d};for(var m=0;m<Ro.length&&d!==0&&d<Ro[m].priority;m++);Ro.splice(m,0,u),m===0&&Rv(u)}};function Xx(u){return!(!u||u.nodeType!==1&&u.nodeType!==9&&u.nodeType!==11)}function zp(u){return!(!u||u.nodeType!==1&&u.nodeType!==9&&u.nodeType!==11&&(u.nodeType!==8||u.nodeValue!==" react-mount-point-unstable "))}function Hk(){}function D_(u,d,m,x,k){if(k){if(typeof x=="function"){var C=x;x=function(){var ae=Lp(A);C.call(ae)}}var A=Wk(d,x,u,0,null,!1,!1,"",Hk);return u._reactRootContainer=A,u[Yr]=A.current,Yu(u.nodeType===8?u.parentNode:u),Di(),A}for(;k=u.lastChild;)u.removeChild(k);if(typeof x=="function"){var M=x;x=function(){var ae=Lp(H);M.call(ae)}}var H=jx(u,0,!1,null,null,!1,!1,"",Hk);return u._reactRootContainer=H,u[Yr]=H.current,Yu(u.nodeType===8?u.parentNode:u),Di(function(){Fp(d,H,m,x)}),H}function Mp(u,d,m,x,k){var C=m._reactRootContainer;if(C){var A=C;if(typeof k=="function"){var M=k;k=function(){var H=Lp(A);M.call(H)}}Fp(d,A,u,k)}else A=D_(m,d,u,k,x);return Lp(A)}Cv=function(u){switch(u.tag){case 3:var d=u.stateNode;if(d.current.memoizedState.isDehydrated){var m=Fu(d.pendingLanes);m!==0&&(wy(d,m|1),us(d,Gt()),!(ot&6)&&(Ya=Gt()+500,Lo()))}break;case 13:Di(function(){var x=eo(u,1);if(x!==null){var k=qn();ar(x,u,1,k)}}),qx(u,1)}},by=function(u){if(u.tag===13){var d=eo(u,134217728);if(d!==null){var m=qn();ar(d,u,134217728,m)}qx(u,134217728)}},$v=function(u){if(u.tag===13){var d=Wo(u),m=eo(u,d);if(m!==null){var x=qn();ar(m,u,d,x)}qx(u,d)}},Iv=function(){return pt},Tv=function(u,d){var m=pt;try{return pt=u,d()}finally{pt=m}},hy=function(u,d,m){switch(d){case"input":if(gt(u,m),d=m.name,m.type==="radio"&&d!=null){for(m=u;m.parentNode;)m=m.parentNode;for(m=m.querySelectorAll("input[name="+JSON.stringify(""+d)+'][type="radio"]'),d=0;d<m.length;d++){var x=m[d];if(x!==u&&x.form===u.form){var k=np(x);if(!k)throw Error(t(90));rt(x),gt(x,k)}}}break;case"textarea":rs(u,m);break;case"select":d=m.value,d!=null&&Hn(u,!!m.multiple,d,!1)}},hv=Bx,pv=Di;var __={usingClientEntryPoint:!1,Events:[Ju,Pa,np,cv,dv,Bx]},pc={findFiberByHostInstance:Ni,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},O_={bundleType:pc.bundleType,version:pc.version,rendererPackageName:pc.rendererPackageName,rendererConfig:pc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:N.ReactCurrentDispatcher,findHostInstanceByFiber:function(u){return u=yv(u),u===null?null:u.stateNode},findFiberByHostInstance:pc.findFiberByHostInstance,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Bp=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Bp.isDisabled&&Bp.supportsFiber)try{Ph=Bp.inject(O_),Cr=Bp}catch{}}return cs.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=__,cs.createPortal=function(u,d){var m=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Xx(d))throw Error(t(200));return A_(u,d,null,m)},cs.createRoot=function(u,d){if(!Xx(u))throw Error(t(299));var m=!1,x="",k=Gk;return d!=null&&(d.unstable_strictMode===!0&&(m=!0),d.identifierPrefix!==void 0&&(x=d.identifierPrefix),d.onRecoverableError!==void 0&&(k=d.onRecoverableError)),d=jx(u,1,!1,null,null,m,!1,x,k),u[Yr]=d.current,Yu(u.nodeType===8?u.parentNode:u),new Kx(d)},cs.findDOMNode=function(u){if(u==null)return null;if(u.nodeType===1)return u;var d=u._reactInternals;if(d===void 0)throw typeof u.render=="function"?Error(t(188)):(u=Object.keys(u).join(","),Error(t(268,u)));return u=yv(d),u=u===null?null:u.stateNode,u},cs.flushSync=function(u){return Di(u)},cs.hydrate=function(u,d,m){if(!zp(d))throw Error(t(200));return Mp(null,u,d,!0,m)},cs.hydrateRoot=function(u,d,m){if(!Xx(u))throw Error(t(405));var x=m!=null&&m.hydratedSources||null,k=!1,C="",A=Gk;if(m!=null&&(m.unstable_strictMode===!0&&(k=!0),m.identifierPrefix!==void 0&&(C=m.identifierPrefix),m.onRecoverableError!==void 0&&(A=m.onRecoverableError)),d=Wk(d,null,u,1,m??null,k,!1,C,A),u[Yr]=d.current,Yu(u),x)for(u=0;u<x.length;u++)m=x[u],k=m._getVersion,k=k(m._source),d.mutableSourceEagerHydrationData==null?d.mutableSourceEagerHydrationData=[m,k]:d.mutableSourceEagerHydrationData.push(m,k);return new Pp(d)},cs.render=function(u,d,m){if(!zp(d))throw Error(t(200));return Mp(null,u,d,!1,m)},cs.unmountComponentAtNode=function(u){if(!zp(u))throw Error(t(40));return u._reactRootContainer?(Di(function(){Mp(null,null,u,!1,function(){u._reactRootContainer=null,u[Yr]=null})}),!0):!1},cs.unstable_batchedUpdates=Bx,cs.unstable_renderSubtreeIntoContainer=function(u,d,m,x){if(!zp(m))throw Error(t(200));if(u==null||u._reactInternals===void 0)throw Error(t(38));return Mp(u,d,m,!1,x)},cs.version="18.3.1-next-f1338f8080-20240426",cs}var Jk;function G_(){if(Jk)return Zx.exports;Jk=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),Zx.exports=U_(),Zx.exports}var eN;function H_(){if(eN)return Vp;eN=1;var n=G_();return Vp.createRoot=n.createRoot,Vp.hydrateRoot=n.hydrateRoot,Vp}var j_=H_();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_=1e-7,K_=1e-4;class x1{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Hf{refCount(e){return ds("refCount")}incRef(e){return ds("incRef")}timerAvailable(){return!0}time(e){return ds("time")}read(e){return ds("read")}readSync(e){return ds("readSync")}readToGPU(e,t){return ds("readToGPU")}numDataIds(){return ds("numDataIds")}disposeData(e,t){return ds("disposeData")}write(e,t,s){return ds("write")}move(e,t,s,r,o){return ds("move")}createTensorFromGPUData(e,t,s){return ds("createTensorFromGPUData")}memory(){return ds("memory")}floatPrecision(){return ds("floatPrecision")}epsilon(){return this.floatPrecision()===32?q_:K_}dispose(){return ds("dispose")}}function ds(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w1(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,lo(n,e,t)}function X_(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,s=0;for(;t>0;)s=Math.random()*t|0,t--,lo(n,t,s),lo(e,t,s)}function Jo(n,e,t){return Math.max(n,Math.min(e,t))}function jf(n){return n%2===0?n:n+1}function lo(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function GC(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function Y_(n,e){const t=Math.random();return e*t+(1-t)*n}function Q_(n,e){let t=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(e[s]);t+=r*r}return t}function D(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function bn(n,e,t=""){D(Qe(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function fa(n){D(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function le(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Z_(n){return n.length===0}function HC(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function Qe(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Ji(n){return n%1===0}function J_(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function mf(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function eO(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return w1(e),e}function Ki(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function S0(n,e=r=>0,t,s){return new Promise((r,o)=>{let i=0;const a=()=>{if(n()){r();return}i++;const l=e(i);if(t!=null&&i>=t){o();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function b1(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function Xe(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),D(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),D(n.every(s=>Ji(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function yo(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:Xe(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[i]==null||o[i]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),o[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function un(n,e){return Pt(n,e)}function Pt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function jC(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function qC(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function v1(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Ic(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function KC(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function _r(n){return typeof n=="string"||n instanceof String}function XC(n){return typeof n=="boolean"}function gf(n){return typeof n=="number"}function ma(n){return Array.isArray(n)?ma(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":gf(n)?"float32":_r(n)?"string":XC(n)?"bool":"float32"}function ei(n){return!!(n&&n.constructor&&n.call&&n.apply)}function yf(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Le(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function YC(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let i=0;i<o;i++)r[i]=t[n+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<o;l++)r[l]=YC(n+l*a,i,t,s)}return r}function Rs(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return YC(0,n,e,t)}function QC(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function qf(n,e){const t=wn(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function wn(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function S1(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return Rs(n,new Float32Array(t));if(e==="int32")return Rs(n,new Int32Array(t));if(e==="bool")return Rs(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function ws(n){n.forEach(e=>{D(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function fr(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function ga(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function ti(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tN="tfjsflags";class ZC{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=tO,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ti(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);tN in e&&e[tN].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=sO(r,o)})}}function tO(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(nO(e,s[0],s[1]),s.join("="))),e}function nO(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function sO(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function se(){return k1}let k1=null;function rO(n){k1=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let t0;function JC(){if(t0==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");t0=n}return t0}function oO(){const n=JC();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function N1(n,e){const t=oO();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const qc="Abs",vl="Acos",Sl="Acosh",ya="Add",Kc="AddN",Kf="All",Xf="Any",Xc="ArgMax",Yc="ArgMin",kl="Asin",Nl="Asinh",Cl="Atan",$l="Atanh",Il="Atan2",Qc="AvgPool",Yf="AvgPoolGrad",Zc="AvgPool3D",Qf="AvgPool3DGrad",Jc="BatchMatMul",ed="BatchToSpaceND",Zf="Bincount",td="BitwiseAnd",e$="BroadcastTo",Jf="BroadcastArgs",Tl="Cast",El="Ceil",Rl="ClipByValue",em="Complex",nd="ComplexAbs",sd="Concat",rd="Conv2D",tm="Conv2DBackpropFilter",od="Conv2DBackpropInput",id="Conv3D",nm="Conv3DBackpropFilterV2",sm="Conv3DBackpropInputV2",Al="Cos",Dl="Cosh",rm="Cumprod",ad="Cumsum",om="CropAndResize",im="DenseBincount",am="DepthToSpace",ld="DepthwiseConv2dNative",lm="DepthwiseConv2dNativeBackpropFilter",um="DepthwiseConv2dNativeBackpropInput",cm="Diag",ud="Dilation2D",xf="Dilation2DBackpropInput",wf="Dilation2DBackpropFilter",dm="Draw",_l="RealDiv",hm="Einsum",Ol="Elu",pm="EluGrad",Fl="Erf",cd="Equal",Ll="Exp",dd="ExpandDims",Pl="Expm1",fm="FFT",mm="Fill",gm="FlipLeftRight",zl="Floor",Ml="FloorDiv",hd="FusedBatchNorm",pd="GatherV2",ym="GatherNd",fd="Greater",Bl="GreaterEqual",Vl="Identity",xm="IFFT",wm="Imag",Wl="IsFinite",Ul="IsInf",Gl="IsNan",md="LeakyRelu",gd="Less",yd="LessEqual",bm="LinSpace",Hl="Log",jl="Log1p",xd="LogicalAnd",wd="LogicalNot",bd="LogicalOr",iO="LogicalXor",t$="LogSoftmax",aO="LowerBound",vd="LRN",vm="LRNGrad",lO="MatrixBandPart",Sd="Max",ql="Maximum",kd="MaxPool",Sm="MaxPoolGrad",Nd="MaxPool3D",km="MaxPool3DGrad",Nm="MaxPoolWithArgmax",Cd="Mean",$d="Min",Kl="Minimum",Id="MirrorPad",Xl="Mod",Cm="Multinomial",Yl="Multiply",Td="Neg",Ed="NotEqual",$m="NonMaxSuppressionV3",Im="NonMaxSuppressionV4",Tm="NonMaxSuppressionV5",Rd="OnesLike",Ad="OneHot",Dd="Pack",_d="PadV2",uO="Pool",Ql="Pow",Od="Prelu",Fd="Prod",Em="RaggedGather",Rm="RaggedRange",Am="RaggedTensorToTensor",Dm="Range",_m="Real",Zl="Reciprocal",Jl="Relu",Ld="Reshape",Pd="ResizeNearestNeighbor",Om="ResizeNearestNeighborGrad",zd="ResizeBilinear",Fm="ResizeBilinearGrad",eu="Relu6",Md="Reverse",tu="Round",nu="Rsqrt",Lm="ScatterNd",Pm="TensorScatterUpdate",zm="SearchSorted",Bd="Select",su="Selu",Vd="Slice",ru="Sin",ou="Sinh",iu="Sign",au="Sigmoid",lu="Softplus",uu="Sqrt",Wd="Sum",Ud="SpaceToBatchND",Gd="SplitV",Hd="Softmax",Mm="SparseFillEmptyRows",Bm="SparseReshape",Vm="SparseSegmentMean",Wm="SparseSegmentSum",Um="SparseToDense",cu="SquaredDifference",Gm="Square",jd="StaticRegexReplace",Hm="StridedSlice",jm="StringNGrams",qm="StringSplit",Km="StringToHashBucketFast",du="Sub",hu="Tan",pu="Tanh",fu="Tile",Xm="TopK",Ym="Transform",Xi="Transpose",Qm="Unique",qd="Unpack",Kd="UnsortedSegmentSum",cO="UpperBound",Xd="ZerosLike",mu="Step",bf="FromPixels",Zm="RotateWithOffset",Tc="_FusedMatMul",Ec="FusedConv2D",Rc="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(...n){se().getBool("IS_TEST")||se().getBool("PROD")||console.warn(...n)}function dO(...n){se().getBool("IS_TEST")||se().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const al=N1("kernelRegistry",()=>new Map),Ac=N1("gradRegistry",()=>new Map);function Dc(n,e){const t=C1(n,e);return al.get(t)}function k0(n){return Ac.get(n)}function vf(n){const e=al.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,i]=r,[a]=o.split("_");a===n&&t.push(i)}return t}function Jm(n){const{kernelName:e,backendName:t}=n,s=C1(e,t);al.has(s)&&$s(`The kernel '${e}' for backend '${t}' is already registered`),al.set(s,n)}function n$(n){const{kernelName:e}=n;Ac.has(e)&&se().getBool("DEBUG")&&$s(`Overriding the gradient for '${e}'`),Ac.set(e,n)}function hO(n,e){const t=C1(n,e);if(!al.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);al.delete(t)}function pO(n){if(!Ac.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Ac.delete(n)}function fO(n,e){vf(n).forEach(s=>{const r=Object.assign({},s,{backendName:e});Jm(r)})}function C1(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var n0,nN;function mO(){if(nN)return n0;nN=1,n0=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(F,E,W){this.low=F|0,this.high=E|0,this.unsigned=!!W}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(F){return(F&&F.__isLong__)===!0}e.isLong=t;var s={},r={};function o(F,E){var W,X,ee;return E?(F>>>=0,(ee=0<=F&&F<256)&&(X=r[F],X)?X:(W=a(F,(F|0)<0?-1:0,!0),ee&&(r[F]=W),W)):(F|=0,(ee=-128<=F&&F<128)&&(X=s[F],X)?X:(W=a(F,F<0?-1:0,!1),ee&&(s[F]=W),W))}e.fromInt=o;function i(F,E){if(isNaN(F))return E?S:v;if(E){if(F<0)return S;if(F>=y)return L}else{if(F<=-9223372036854776e3)return P;if(F+1>=b)return R}return F<0?i(-F,E).neg():a(F%g|0,F/g|0,E)}e.fromNumber=i;function a(F,E,W){return new e(F,E,W)}e.fromBits=a;var l=Math.pow;function c(F,E,W){if(F.length===0)throw Error("empty string");if(F==="NaN"||F==="Infinity"||F==="+Infinity"||F==="-Infinity")return v;if(typeof E=="number"?(W=E,E=!1):E=!!E,W=W||10,W<2||36<W)throw RangeError("radix");var X;if((X=F.indexOf("-"))>0)throw Error("interior hyphen");if(X===0)return c(F.substring(1),E,W).neg();for(var ee=i(l(W,8)),Q=v,te=0;te<F.length;te+=8){var oe=Math.min(8,F.length-te),U=parseInt(F.substring(te,te+oe),W);if(oe<8){var Z=i(l(W,oe));Q=Q.mul(Z).add(i(U))}else Q=Q.mul(ee),Q=Q.add(i(U))}return Q.unsigned=E,Q}e.fromString=c;function h(F,E){return typeof F=="number"?i(F,E):typeof F=="string"?c(F,E):a(F.low,F.high,typeof E=="boolean"?E:F.unsigned)}e.fromValue=h;var p=65536,f=1<<24,g=p*p,y=g*g,b=y/2,w=o(f),v=o(0);e.ZERO=v;var S=o(0,!0);e.UZERO=S;var $=o(1);e.ONE=$;var N=o(1,!0);e.UONE=N;var T=o(-1);e.NEG_ONE=T;var R=a(-1,2147483647,!1);e.MAX_VALUE=R;var L=a(-1,-1,!0);e.MAX_UNSIGNED_VALUE=L;var P=a(0,-2147483648,!1);e.MIN_VALUE=P;var O=e.prototype;return O.toInt=function(){return this.unsigned?this.low>>>0:this.low},O.toNumber=function(){return this.unsigned?(this.high>>>0)*g+(this.low>>>0):this.high*g+(this.low>>>0)},O.toString=function(E){if(E=E||10,E<2||36<E)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var W=i(E),X=this.div(W),ee=X.mul(W).sub(this);return X.toString(E)+ee.toInt().toString(E)}else return"-"+this.neg().toString(E);for(var Q=i(l(E,6),this.unsigned),te=this,oe="";;){var U=te.div(Q),Z=te.sub(U.mul(Q)).toInt()>>>0,J=Z.toString(E);if(te=U,te.isZero())return J+oe;for(;J.length<6;)J="0"+J;oe=""+J+oe}},O.getHighBits=function(){return this.high},O.getHighBitsUnsigned=function(){return this.high>>>0},O.getLowBits=function(){return this.low},O.getLowBitsUnsigned=function(){return this.low>>>0},O.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var E=this.high!=0?this.high:this.low,W=31;W>0&&!(E&1<<W);W--);return this.high!=0?W+33:W+1},O.isZero=function(){return this.high===0&&this.low===0},O.eqz=O.isZero,O.isNegative=function(){return!this.unsigned&&this.high<0},O.isPositive=function(){return this.unsigned||this.high>=0},O.isOdd=function(){return(this.low&1)===1},O.isEven=function(){return(this.low&1)===0},O.equals=function(E){return t(E)||(E=h(E)),this.unsigned!==E.unsigned&&this.high>>>31===1&&E.high>>>31===1?!1:this.high===E.high&&this.low===E.low},O.eq=O.equals,O.notEquals=function(E){return!this.eq(E)},O.neq=O.notEquals,O.ne=O.notEquals,O.lessThan=function(E){return this.comp(E)<0},O.lt=O.lessThan,O.lessThanOrEqual=function(E){return this.comp(E)<=0},O.lte=O.lessThanOrEqual,O.le=O.lessThanOrEqual,O.greaterThan=function(E){return this.comp(E)>0},O.gt=O.greaterThan,O.greaterThanOrEqual=function(E){return this.comp(E)>=0},O.gte=O.greaterThanOrEqual,O.ge=O.greaterThanOrEqual,O.compare=function(E){if(t(E)||(E=h(E)),this.eq(E))return 0;var W=this.isNegative(),X=E.isNegative();return W&&!X?-1:!W&&X?1:this.unsigned?E.high>>>0>this.high>>>0||E.high===this.high&&E.low>>>0>this.low>>>0?-1:1:this.sub(E).isNegative()?-1:1},O.comp=O.compare,O.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add($)},O.neg=O.negate,O.add=function(E){t(E)||(E=h(E));var W=this.high>>>16,X=this.high&65535,ee=this.low>>>16,Q=this.low&65535,te=E.high>>>16,oe=E.high&65535,U=E.low>>>16,Z=E.low&65535,J=0,z=0,q=0,ue=0;return ue+=Q+Z,q+=ue>>>16,ue&=65535,q+=ee+U,z+=q>>>16,q&=65535,z+=X+oe,J+=z>>>16,z&=65535,J+=W+te,J&=65535,a(q<<16|ue,J<<16|z,this.unsigned)},O.subtract=function(E){return t(E)||(E=h(E)),this.add(E.neg())},O.sub=O.subtract,O.multiply=function(E){if(this.isZero())return v;if(t(E)||(E=h(E)),n){var W=n.mul(this.low,this.high,E.low,E.high);return a(W,n.get_high(),this.unsigned)}if(E.isZero())return v;if(this.eq(P))return E.isOdd()?P:v;if(E.eq(P))return this.isOdd()?P:v;if(this.isNegative())return E.isNegative()?this.neg().mul(E.neg()):this.neg().mul(E).neg();if(E.isNegative())return this.mul(E.neg()).neg();if(this.lt(w)&&E.lt(w))return i(this.toNumber()*E.toNumber(),this.unsigned);var X=this.high>>>16,ee=this.high&65535,Q=this.low>>>16,te=this.low&65535,oe=E.high>>>16,U=E.high&65535,Z=E.low>>>16,J=E.low&65535,z=0,q=0,ue=0,de=0;return de+=te*J,ue+=de>>>16,de&=65535,ue+=Q*J,q+=ue>>>16,ue&=65535,ue+=te*Z,q+=ue>>>16,ue&=65535,q+=ee*J,z+=q>>>16,q&=65535,q+=Q*Z,z+=q>>>16,q&=65535,q+=te*U,z+=q>>>16,q&=65535,z+=X*J+ee*Z+Q*U+te*oe,z&=65535,a(ue<<16|de,z<<16|q,this.unsigned)},O.mul=O.multiply,O.divide=function(E){if(t(E)||(E=h(E)),E.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&E.low===-1&&E.high===-1)return this;var W=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,E.low,E.high);return a(W,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?S:v;var X,ee,Q;if(this.unsigned){if(E.unsigned||(E=E.toUnsigned()),E.gt(this))return S;if(E.gt(this.shru(1)))return N;Q=S}else{if(this.eq(P)){if(E.eq($)||E.eq(T))return P;if(E.eq(P))return $;var te=this.shr(1);return X=te.div(E).shl(1),X.eq(v)?E.isNegative()?$:T:(ee=this.sub(E.mul(X)),Q=X.add(ee.div(E)),Q)}else if(E.eq(P))return this.unsigned?S:v;if(this.isNegative())return E.isNegative()?this.neg().div(E.neg()):this.neg().div(E).neg();if(E.isNegative())return this.div(E.neg()).neg();Q=v}for(ee=this;ee.gte(E);){X=Math.max(1,Math.floor(ee.toNumber()/E.toNumber()));for(var oe=Math.ceil(Math.log(X)/Math.LN2),U=oe<=48?1:l(2,oe-48),Z=i(X),J=Z.mul(E);J.isNegative()||J.gt(ee);)X-=U,Z=i(X,this.unsigned),J=Z.mul(E);Z.isZero()&&(Z=$),Q=Q.add(Z),ee=ee.sub(J)}return Q},O.div=O.divide,O.modulo=function(E){if(t(E)||(E=h(E)),n){var W=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,E.low,E.high);return a(W,n.get_high(),this.unsigned)}return this.sub(this.div(E).mul(E))},O.mod=O.modulo,O.rem=O.modulo,O.not=function(){return a(~this.low,~this.high,this.unsigned)},O.and=function(E){return t(E)||(E=h(E)),a(this.low&E.low,this.high&E.high,this.unsigned)},O.or=function(E){return t(E)||(E=h(E)),a(this.low|E.low,this.high|E.high,this.unsigned)},O.xor=function(E){return t(E)||(E=h(E)),a(this.low^E.low,this.high^E.high,this.unsigned)},O.shiftLeft=function(E){return t(E)&&(E=E.toInt()),(E&=63)===0?this:E<32?a(this.low<<E,this.high<<E|this.low>>>32-E,this.unsigned):a(0,this.low<<E-32,this.unsigned)},O.shl=O.shiftLeft,O.shiftRight=function(E){return t(E)&&(E=E.toInt()),(E&=63)===0?this:E<32?a(this.low>>>E|this.high<<32-E,this.high>>E,this.unsigned):a(this.high>>E-32,this.high>=0?0:-1,this.unsigned)},O.shr=O.shiftRight,O.shiftRightUnsigned=function(E){if(t(E)&&(E=E.toInt()),E&=63,E===0)return this;var W=this.high;if(E<32){var X=this.low;return a(X>>>E|W<<32-E,W>>>E,this.unsigned)}else return E===32?a(W,0,this.unsigned):a(W>>>E-32,0,this.unsigned)},O.shru=O.shiftRightUnsigned,O.shr_u=O.shiftRightUnsigned,O.toSigned=function(){return this.unsigned?a(this.low,this.high,!1):this},O.toUnsigned=function(){return this.unsigned?this:a(this.low,this.high,!0)},O.toBytes=function(E){return E?this.toBytesLE():this.toBytesBE()},O.toBytesLE=function(){var E=this.high,W=this.low;return[W&255,W>>>8&255,W>>>16&255,W>>>24,E&255,E>>>8&255,E>>>16&255,E>>>24]},O.toBytesBE=function(){var E=this.high,W=this.low;return[E>>>24,E>>>16&255,E>>>8&255,E&255,W>>>24,W>>>16&255,W>>>8&255,W&255]},e.fromBytes=function(E,W,X){return X?e.fromBytesLE(E,W):e.fromBytesBE(E,W)},e.fromBytesLE=function(E,W){return new e(E[0]|E[1]<<8|E[2]<<16|E[3]<<24,E[4]|E[5]<<8|E[6]<<16|E[7]<<24,W)},e.fromBytesBE=function(E,W){return new e(E[4]<<24|E[5]<<16|E[6]<<8|E[7],E[0]<<24|E[1]<<16|E[2]<<8|E[3],W)},n0}var r$=mO();const o$=P_(r$),gO=L_({__proto__:null,default:o$},[r$]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vi=o$||gO;function Yd(n){return Vi.fromString(n,!0,16)}const i$=Yd("c3a5c85c97cb3127"),Mi=Yd("b492b66fbe98f273"),Mn=Yd("9ae16a3b2f90404f");function N0(n){return n.xor(n.shru(47))}function a$(n,e,t){const s=n.slice(e,e+t);return Vi.fromBytes(Array.from(s),!0,!0)}function bt(n,e){return a$(n,e,8)}function sN(n,e){return a$(n,e,4)}function on(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Yo(n,e,t=Yd("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function yO(n,e,t,s,r,o){r=r.add(n),o=on(o.add(r).add(s),21);const i=r;return r=r.add(e),r=r.add(t),o=o.add(on(r,44)),[r.add(s),o.add(i)]}function Wp(n,e,t,s){return yO(bt(n,e),bt(n,e+8),bt(n,e+16),bt(n,e+24),t,s)}function xO(n,e=n.length){if(e>=8){const t=Mn.add(e*2),s=bt(n,0).add(Mn),r=bt(n,e-8),o=on(r,37).mul(t).add(s),i=on(s,25).add(r).mul(t);return Yo(o,i,t)}if(e>=4){const t=Mn.add(e*2),s=sN(n,0);return Yo(s.shl(3).add(e),sN(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),i=e+(r<<2);return N0(Mn.mul(o).xor(i$.mul(i))).mul(Mn)}return Mn}function wO(n,e=n.length){const t=Mn.add(e*2),s=bt(n,0).mul(Mi),r=bt(n,8),o=bt(n,e-8).mul(t),i=bt(n,e-16).mul(Mn);return Yo(on(s.add(r),43).add(on(o,30)).add(i),s.add(on(r.add(Mn),18)).add(o),t)}function bO(n,e=n.length){const t=Mn.add(e*2),s=bt(n,0).mul(Mn),r=bt(n,8),o=bt(n,e-8).mul(t),i=bt(n,e-16).mul(Mn),a=on(s.add(r),43).add(on(o,30)).add(i),l=Yo(a,s.add(on(r.add(Mn),18)).add(o),t),c=bt(n,16).mul(t),h=bt(n,24),p=a.add(bt(n,e-32)).mul(t),f=l.add(bt(n,e-24)).mul(t);return Yo(on(c.add(h),43).add(on(p,30)).add(f),c.add(on(h.add(s),18)).add(p),t)}function l$(n,e=n.length){const t=Vi.fromNumber(81,!0);if(e<=32)return e<=16?xO(n,e):wO(n,e);if(e<=64)return bO(n,e);let s=t,r=t.mul(Mi).add(113),o=N0(r.mul(Mn).add(113)).mul(Mn),i=[Vi.UZERO,Vi.UZERO],a=[Vi.UZERO,Vi.UZERO];s=s.mul(Mn).add(bt(n,0));let l=0;const c=(e-1>>6)*64,h=c+(e-1&63)-63;do s=on(s.add(r).add(i[0]).add(bt(n,l+8)),37).mul(Mi),r=on(r.add(i[1]).add(bt(n,l+48)),42).mul(Mi),s=s.xor(a[1]),r=r.add(i[0]).add(bt(n,l+40)),o=on(o.add(a[0]),33).mul(Mi),i=Wp(n,l,i[1].mul(Mi),s.add(a[0])),a=Wp(n,l+32,o.add(a[1]),r.add(bt(n,l+16))),[o,s]=[s,o],l+=64;while(l!==c);const p=Mi.add(o.and(255).shl(1));return l=h,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),s=on(s.add(r).add(i[0]).add(bt(n,l+8)),37).mul(p),r=on(r.add(i[1]).add(bt(n,l+48)),42).mul(p),s=s.xor(a[1].mul(9)),r=r.add(i[0].mul(9).add(bt(n,l+40))),o=on(o.add(a[0]),33).mul(p),i=Wp(n,l,i[1].mul(p),s.add(a[0])),a=Wp(n,l+32,o.add(a[1]),r.add(bt(n,l+16))),[o,s]=[s,o],Yo(Yo(i[0],a[0],p).add(N0(r).mul(i$)).add(o),Yo(i[1],a[1],p).add(s),p)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(n,e){return e==="string"?Fr(n):di([n],e)}function vO(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function di(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Br(n)),se().getBool("DEBUG")&&jC(n,e),vO(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Pn(){return se().platform.now()}function SO(n,e){return se().platform.fetch(n,e)}function Fr(n,e="utf-8"){return e=e||"utf-8",se().platform.encode(n,e)}function ho(n,e="utf-8"){return e=e||"utf-8",se().platform.decode(n,e)}function an(n){return se().platform.isTypedArray!=null?se().platform.isTypedArray(n):s$(n)}function Br(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||ti(n)||n==null||an(n)&&t)e.push(n);else if(Array.isArray(n)||an(n))for(let s=0;s<n.length;++s)Br(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)Br(n[r],e,t)}return e}const kO=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:Qe,arraysEqualWithNull:HC,assert:D,assertNonNegativeIntegerDimensions:ws,assertNonNull:fa,assertShapesMatch:bn,bytesFromStringArray:KC,bytesPerElement:Ic,checkConversionForErrors:jC,clamp:Jo,computeStrides:Le,convertBackendValuesAndArrayBuffer:QC,createScalarValue:xo,createShuffledIndices:eO,decodeString:ho,distSquared:Q_,encodeString:Fr,fetch:SO,fingerPrint64:l$,flatten:Br,getArrayFromDType:Pt,getTypedArrayFromDType:un,hasEncodingLoss:v1,hexToLong:Yd,indexToLoc:ga,inferDtype:ma,inferFromImplicitShape:b1,isBoolean:XC,isFunction:ei,isInt:Ji,isNumber:gf,isPromise:ti,isScalarShape:Z_,isString:_r,isTypedArray:an,isValidDtype:qC,locToIndex:fr,makeOnesTypedArray:qf,makeZerosNestedTypedArray:S1,makeZerosTypedArray:wn,nearestDivisor:yf,nearestLargerEven:jf,now:Pn,parseAxisParam:Xe,randUniform:Y_,repeatedTry:S0,rightPad:Ki,shuffle:w1,shuffleCombo:X_,sizeFromShape:le,sizeToSquarishShape:mf,squeezeShape:yo,sum:GC,swap:lo,tanh:J_,toNestedArray:Rs,toTypedArray:di},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NO{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new $O)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let i;const a=Pn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const c of r)c.dataSync();i=Promise.resolve({kernelMs:Pn()-a})}if(se().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const h=r[c];h.data().then(p=>{CO(p,h.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:i}=e;s.forEach(a=>{Promise.all([a.data(),r,i]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],o,l[2])})})}}function CO(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class $O{logKernelProfile(e,t,s,r,o,i){const a=typeof r=="number"?Ki(`${r}ms`,9):r.error,l=Ki(e,25),c=t.rank,h=t.size,p=Ki(t.shape.toString(),14);let f="";for(const g in o){const y=o[g];if(y!=null){const b=y.shape||t.shape,w=b.length;f+=`${g}: ${w}D ${w>0?b:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${p}	%c${h}	%c${f}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,e,t){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],h=c.inputs;for(const p in h){const f=h[p];let g=!1;for(let y=0;y<e.length;y++)if(s[f.id]){c.outputs.forEach(b=>s[b.id]=!0),g=!0,r[c.id]=!0;break}if(g)break}}const o={};o[t.id]=!0;const i={};for(let l=n.length-1;l>=0;l--){const c=n[l],h=c.inputs;for(let p=0;p<c.outputs.length;p++)if(o[c.outputs[p].id]){for(const f in h)o[h[f].id]=!0,i[c.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const c=n[l];if(r[c.id]&&i[c.id]){const h={};for(const f in c.inputs){const g=c.inputs[f];s[g.id]&&(h[f]=g)}const p=Object.assign({},c);p.inputs=h,p.outputs=c.outputs,a.push(p)}}return a}function TO(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],i=[];if(o.outputs.forEach(l=>{const c=n[l.id];c!=null?i.push(c):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const l in o.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=t(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const h=o.inputs[l];if(!Qe(c.shape,h.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${h.shape}'`);if(n[h.id]==null)n[h.id]=c;else{const p=n[h.id];n[h.id]=s(p,c),p.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN=20,mc=3,s0=7;function EO(n,e,t,s){const r=Le(e),o=RO(n,e,t,r),i=e.length,a=sf(n,e,t,r,o),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function RO(n,e,t,s){const r=le(e),o=s[s.length-1],i=new Array(o).fill(0),a=e.length,l=t==="complex64"?bc(n):n;if(a>1)for(let c=0;c<r/o;c++){const h=c*o;for(let p=0;p<o;p++)i[p]=Math.max(i[p],wc(l[h+p],0,t).length)}return i}function wc(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(s0))} + ${parseFloat(n[1].toFixed(s0))}j`:_r(n)?s=`'${n}'`:t==="bool"?s=u$(n):s=parseFloat(n.toFixed(s0)).toString(),Ki(s,e)}function u$(n){return n===0?"false":"true"}function sf(n,e,t,s,r,o=!0){const i=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const b=bc(n);return[wc(b[0],0,t)]}return t==="bool"?[u$(n[0])]:[n[0].toString()]}if(l===1){if(a>rN){const w=mc*i;let v=Array.from(n.slice(0,w)),S=Array.from(n.slice((a-mc)*i,a*i));return t==="complex64"&&(v=bc(v),S=bc(S)),["["+v.map(($,N)=>wc($,r[N],t)).join(", ")+", ..., "+S.map(($,N)=>wc($,r[a-mc+N],t)).join(", ")+"]"]}return["["+(t==="complex64"?bc(n):Array.from(n)).map((w,v)=>wc(w,r[v],t)).join(", ")+"]"]}const c=e.slice(1),h=s.slice(1),p=s[0]*i,f=[];if(a>rN){for(let b=0;b<mc;b++){const w=b*p,v=w+p;f.push(...sf(n.slice(w,v),c,t,h,r,!1))}f.push("...");for(let b=a-mc;b<a;b++){const w=b*p,v=w+p;f.push(...sf(n.slice(w,v),c,t,h,r,b===a-1))}}else for(let b=0;b<a;b++){const w=b*p,v=w+p;f.push(...sf(n.slice(w,v),c,t,h,r,b===a-1))}const g=l===2?",":"";f[0]="["+(a>0?f[0]+g:"");for(let b=1;b<f.length-1;b++)f[b]=" "+f[b]+g;let y=`,
`;for(let b=2;b<l;b++)y+=`
`;return f[f.length-1]=" "+f[f.length-1]+"]"+(o?"":y),f}function bc(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kt{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=le(e),s!=null){const r=s.length;D(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Pt(t,this.size),this.strides=Le(e)}set(e,...t){t.length===0&&(t=[0]),D(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return dr().makeTensor(this.values,this.shape,this.dtype)}}let dr=null,el=null;function AO(n){dr=n}function DO(n){el=n}class ut{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=le(e),this.strides=Le(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return el.buffer(this.shape,this.dtype,e)}bufferSync(){return el.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Rs(this.shape,e,this.dtype==="complex64")}arraySync(){return Rs(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=dr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>ho(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),dr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=dr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>ho(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await dr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),dr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return el.print(this,e)}clone(){return this.throwIfDisposed(),el.clone(this)}toString(e=!1){const t=this.dataSync();return EO(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),el.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),dr().makeVariable(this,e,t,s)}}Object.defineProperty(ut,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function ce(){return N1("Tensor",()=>ut)}ce();class _c extends ut{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Qe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);dr().disposeTensor(this),this.dataId=e.dataId,dr().incRef(this,null)}dispose(){dr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(_c,Symbol.hasInstance,{value:n=>n instanceof ut&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var C0;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(C0||(C0={}));var $0;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})($0||($0={}));var I0;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(I0||(I0={}));var T0;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(T0||(T0={}));var E0;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(E0||(E0={}));const _O={float32:T0,int32:$0,bool:I0,complex64:E0};function Qn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return _O[n][e]}function eg(n){return Qn(n,"int32")}function c$(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function d$(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _t(n,e){if(n.dtype===e.dtype)return[n,e];const t=Qn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function h$(n,e){D(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function OO(n,e){return e.some(t=>t.id===n.id)}function $1(n){const e=[];return p$(n,e,new Set),e}function p$(n,e,t){if(n==null)return;if(n instanceof ut){e.push(n);return}if(!FO(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),p$(o,e,t))}}function FO(n){return Array.isArray(n)||typeof n=="object"}const LO=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:h$,getTensorsInContainer:$1,isTensorInList:OO,makeTypesMatch:_t},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r0(n){return n.kernelName!=null}class oN{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ll{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new oN}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?($s(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new NO(this.backendInstance),!0}setupRegisteredKernels(){vf(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){vf(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Hf)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,$s(`Initialization of backend ${e} failed`),$s(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return $s(`Initialization of backend ${e} failed`),$s(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return ll.nextTensorId++}nextVariableId(){return ll.nextVariableId++}clone(e){const t=B.runKernel(Vl,{x:e}),s={x:e},r=i=>({x:()=>{const a="float32",l={x:i},c={dtype:a};return B.runKernel(Tl,l,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Dc(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(l=>{o+=l.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=r0(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(r0(e)){const{kernelName:y,inputs:b,attrs:w}=e;this.backendName==null&&this.backend;const v=Dc(y,this.backendName);D(v!=null,()=>`Cannot find registered kernel '${y}' for backend '${this.backendName}'`),a=()=>{const S=this.backend.numDataIds();l=v.kernelFunc({inputs:b,attrs:w,backend:this.backend});const $=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(y,S,$);const N=$.map(T=>T.rank!=null?T:this.makeTensorFromTensorInfo(T));if(r){const T=this.getTensorsForGradient(y,b,N);s=this.saveTensorsForBackwardMode(T)}return N}}else{const{forwardFunc:y}=e,b=w=>{r&&(s=w.map(v=>this.keep(this.clone(v))))};a=()=>{const w=this.backend.numDataIds();l=this.tidy(()=>y(this.backend,b));const v=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,w,v),v}}const{inputs:h,attrs:p}=e,f=r0(e)?null:e.backwardsFunc;let g;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(g=this.profiler.profileKernel(c,h,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),t=g.outputs)}),r&&this.addTapeNode(c,h,t,f,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(y=>h[y]!=null?h[y].shape:null),outputShapes:t.map(y=>y.shape),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=k0(e);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let a;r.saveAllInputs?(D(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(c=>t[c])):a=o.map(c=>t[c]);const l=s.filter((c,h)=>i[h]);return a.concat(l)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&_r(e[0])&&(o=e.map(l=>Fr(l)));const i=r.write(o,t,s),a=new ut(t,s,i,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(i),c=KC(o);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,i=new ut(r,o,s,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new _c(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Ic(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof _c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Ic(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},l=k0(e);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=c=>(c=c.map((h,p)=>{if(h==null){const f=s[p],g=wn(f.size,f.dtype);return this.makeTensor(g,f.shape,f.dtype)}return h}),r(c.length>1?c:c[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=$1(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(D(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));D(o instanceof ut,()=>"The result y returned by f() must be a tensor.");const i=IO(this.state.activeTape,t,o);if(!r&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=s??PO(o.shape),TO(a,i,c=>this.tidy(c),zO);const l=t.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const h of c.saved)h.dispose()}),this.state.activeTape=null),{value:o,grads:l}})}customGrad(e){return D(ei(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{D(t.every(a=>a instanceof ut),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((a,l)=>{r[l]=a});const o=(a,l)=>(s=e(...t,l),D(s.value instanceof ut,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(ei(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(a,l)=>{const c=s.gradFunc(a,l),h=Array.isArray(c)?c:[c];D(h.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(h.every(f=>f instanceof ut),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const p={};return h.forEach((f,g)=>{p[g]=()=>f}),p};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Pn(),s=await this.backend.time(e);return s.wallMs=Pn()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new oN;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ll.nextTensorId=0;ll.nextVariableId=0;function PO(n){const e=qf(le(n),"float32");return B.makeTensor(e,n,"float32")}function f$(){const n=JC();if(n._tfengine==null){const e=new ZC(n);n._tfengine=new ll(e)}return rO(n._tfengine.ENV),AO(()=>n._tfengine),n._tfengine}const B=f$();function zO(n,e){const t={a:n,b:e};return B.runKernel(ya,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(){return typeof navigator<"u"&&navigator!=null}let R0;function BO(n){R0=n}function I1(n){if(R0!==void 0)return R0;if(n||MO()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function T1(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const VO=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:T1,isMobile:I1,mockIsMobile:BO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn=se();Zn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Zn.registerFlag("IS_BROWSER",()=>T1());Zn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Zn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Zn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Zn.registerFlag("PROD",()=>!1);Zn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Zn.getBool("DEBUG"));Zn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Zn.registerFlag("IS_TEST",()=>!1);Zn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Zn.getBool("DEBUG"));Zn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Zn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Zn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vr(n,e){let t=n;if(an(n))return e==="string"?[]:[n.length];if(c$(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(d$(n))return[n.buffer.size/(e==null?4:Ic(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||an(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&se().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&m$(n,s,[]),s}function m$(n,e,t){if(t=t||[],!Array.isArray(n)&&!an(n)){D(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}D(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),D(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)m$(n[r],s,t.concat(r))}function iN(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function _(n,e,t,s="numeric"){if(n instanceof ce())return iN(s,n.dtype,e,t),n;let r=ma(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),iN(s,r,e,t),n==null||!an(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const o=Vr(n,r);!an(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?di(n,r):Br(n,[],!0);return B.makeTensor(a,o,r)}function Oc(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>_(o,`${e}[${i}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E1="__op";function V(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+E1;const r=(...o)=>{B.startScope(t);try{const i=s(...o);return ti(i)&&console.error("Cannot return a Promise inside of tidy."),B.endScope(i),i}catch(i){throw B.endScope(null),i}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(n,e){const t=_(n,"real","complex"),s=_(e,"imag","complex");bn(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return B.runKernel(em,r)}const po=V({complex_:WO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(n,e,t,s){if(s==null)s=ma(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(d$(n)||c$(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return B.backend.createTensorFromGPUData(n,e||t,s)}if(!an(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){ws(e);const r=le(e),o=le(t);D(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<t.length;++i){const a=t[i],l=i===t.length-1?a!==le(e.slice(i)):!0;D(t[i]===e[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!an(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?di(n,s):Br(n,[],!0),B.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xs(n,e,t){const s=Vr(n,t);return hi(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ea={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class vr{static join(e){return new vr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>an(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+r.byteLength;this.shards.push({buffer:r,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,o=new ArrayBuffer(r),i=new Uint8Array(o);let a=0;for(let l=s;l<this.shards.length;l++){const c=this.shards[l],p=e+a-c.start,f=a,y=Math.min(t,c.end)-c.start,b=new Uint8Array(c.buffer,p,y-p);if(i.set(b,f),a+=b.length,t<c.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=UO(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function UO(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,o=e(n[r]);if(o===0)return r;o<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GO(){se().set("PROD",!0)}function HO(){se().set("DEBUG",!0)}function jO(){se().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function qO(n){se().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function KO(){B.disposeVariables()}function cr(){return B}function A0(){return B.memory()}function XO(n){return B.profile(n)}function ne(n,e){return B.tidy(n,e)}function Ke(n){$1(n).forEach(t=>t.dispose())}function Qt(n){return B.keep(n)}function YO(n){return B.time(n)}function QO(n){return B.setBackend(n)}function ZO(){return B.ready()}function g$(){return B.backendName}function JO(n){B.removeBackend(n)}function eF(n){return B.findBackend(n)}function tF(n){return B.findBackendFactory(n)}function R1(n,e,t=1){return B.registerBackend(n,e,t)}function A1(){return B.backend}function nF(n,e){se().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ni=4;async function D0(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const a=r[i],l=Array.isArray(n)?n[i].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const h=new Promise(async p=>{const f=await l.bytes(),g=f.reduce((w,v)=>w+v.length,0)+ni*f.length,y=new Uint8Array(g);let b=0;for(let w=0;w<f.length;w++){const v=f[w],S=new Uint8Array(new Uint32Array([v.length]).buffer);y.set(S,b),b+=ni,y.set(v,b),b+=v.length}p(y)});s.push(h)}else s.push(l.data());e!=null&&(c.group=e),t.push(c)}const o=await Promise.all(s);return{data:oF(o),specs:t}}function y$(n,e){const t=new vr(n),s={};let r=0;for(const o of e){const i=sF(o,(a,l)=>t.slice(r+a,r+l));s[o.name]=x$(o,t.slice(r,r+i)),r+=i}return s}function sF(n,e){const t=le(n.shape);let s;if("quantization"in n){const r=n.quantization;s=ea[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=ni+new Uint32Array(e(r,r+ni))[0];return r}else s=ea[n.dtype];return t*s}async function rF(n,e){const t=le(n.shape);let s;if("quantization"in n){const r=n.quantization;s=ea[r.dtype]}else if(n.dtype==="string"){let r=0;for(let o=0;o<t;o++)r+=ni+new Uint32Array(await e(r,r+ni))[0];return r}else s=ea[n.dtype];return t*s}function x$(n,e){const t=n.name,s=n.dtype,r=n.shape,o=le(r);let i,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=ea[l.dtype],h=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(h.length);for(let p=0;p<h.length;p++){const f=h[p];i[p]=f*l.scale+l.min}}else if(l.dtype==="float16")i=dF()(h);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(h.length);for(let p=0;p<h.length;p++){const f=h[p];i[p]=Math.round(f*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*c}else if(s==="string"){const l=le(n.shape);i=[];for(let c=0;c<l;c++){const h=new Uint32Array(e.slice(a,a+ni))[0];a+=ni;const p=new Uint8Array(e.slice(a,a+h));i.push(p),a+=h}}else{const l=ea[s];if(s==="float32")i=new Float32Array(e);else if(s==="int32")i=new Int32Array(e);else if(s==="bool")i=new Uint8Array(e);else if(s==="complex64"){i=new Float32Array(e);const c=new Float32Array(i.length/2),h=new Float32Array(i.length/2);for(let y=0;y<c.length;y++)c[y]=i[y*2],h[y]=i[y*2+1];const p=Xs(c,r,"float32"),f=Xs(h,r,"float32"),g=po(p,f);return p.dispose(),f.dispose(),g}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=o*l}return Xs(i,r,s)}async function aN(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:o}=await n.read();if(r&&o==null){const a=t-s.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const i=new Uint8Array(s.length+o.byteLength);i.set(s,0),i.set(new Uint8Array(o),s.length),s=i}return s.buffer}async function w$(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const o of e){const i=await rF(o,async(c,h)=>(r=await aN(s,r,h),r.slice(c,h)));r=await aN(s,r,i);const a=r.slice(0,i);r=r.slice(i);const l=x$(o,a);if(t[o.name]=l,g$()==="webgpu"){const c=A1();"uploadToGPU"in c&&le(l.shape)>=se().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(l.dataId)}}return t}function oF(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const D1=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function lN(n){return D1?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function iF(n){if(D1)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function aF(n){if(D1){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function b$(n){return vr.join(n)}function uN(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function v$(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function _1(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function O1(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),_1(n,t,s)}function Qd(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:lN(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:lN(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new vr(n.weightData).byteLength}}function Sf(n){const e=[];for(const t of n)e.push(...t.weights);return e}function lF(){const n=t=>{let s=t<<13,r=0;for(;!(s&8388608);)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function uF(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function cF(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function dF(){const n=lF(),e=uF(),t=cF();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const a=s[i],l=n[t[a>>10]+(a&1023)]+e[a>>10];o[i]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rt{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Rt.instance==null&&(Rt.instance=new Rt),Rt.instance}static registerSaveRouter(e){Rt.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Rt.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Rt.getHandlers(e,"save")}static getLoadHandlers(e,t){return Rt.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Rt.getInstance().loadRouters:Rt.getInstance().saveRouters).forEach(i=>{const a=i(e,s);a!==null&&r.push(a)}),r}}const hF=n=>Rt.registerSaveRouter(n),pF=n=>Rt.registerLoadRouter(n),S$=n=>Rt.getSaveHandlers(n),fF=(n,e)=>Rt.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _0="tensorflowjs",O0=1,ji="models_store",qo="model_info_store";function k$(){if(!se().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function F0(n){const e=n.result;e.createObjectStore(ji,{keyPath:"modelPath"}),e.createObjectStore(qo,{keyPath:"modelPath"})}class ta{constructor(e){if(this.indexedDB=k$(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(_0,O0);o.onupgradeneeded=()=>F0(o),o.onsuccess=()=>{const i=o.result;if(t==null){const a=i.transaction(ji,"readonly"),c=a.objectStore(ji).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=h=>(i.close(),r(c.error)),a.oncomplete=()=>i.close()}else{t.weightData=vr.join(t.weightData);const a=Qd(t),l=i.transaction(qo,"readwrite");let c=l.objectStore(qo),h;try{h=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(f){return r(f)}let p;h.onsuccess=()=>{p=i.transaction(ji,"readwrite");const f=p.objectStore(ji);let g;try{g=f.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(y){return r(y)}g.onsuccess=()=>s({modelArtifactsInfo:a}),g.onerror=y=>{c=l.objectStore(qo);const b=c.delete(this.modelPath);b.onsuccess=()=>(i.close(),r(g.error)),b.onerror=w=>(i.close(),r(g.error))}},h.onerror=f=>(i.close(),r(h.error)),l.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}ta.URL_SCHEME="indexeddb://";const N$=n=>se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ta.URL_SCHEME)?mF(n.slice(ta.URL_SCHEME.length)):null;Rt.registerSaveRouter(N$);Rt.registerLoadRouter(N$);function mF(n){return new ta(n)}function gF(n){return n.startsWith(ta.URL_SCHEME)?n.slice(ta.URL_SCHEME.length):n}class yF{constructor(){this.indexedDB=k$()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(_0,O0);s.onupgradeneeded=()=>F0(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(qo,"readonly"),a=o.objectStore(qo).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;e(l)},a.onerror=l=>(r.close(),t(a.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=gF(e),new Promise((t,s)=>{const r=this.indexedDB.open(_0,O0);r.onupgradeneeded=()=>F0(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(qo,"readwrite"),a=i.objectStore(qo),l=a.get(e);let c;l.onsuccess=()=>{if(l.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const h=a.delete(e),p=()=>{c=o.transaction(ji,"readwrite");const g=c.objectStore(ji).delete(e);g.onsuccess=()=>t(l.result.modelArtifactsInfo),g.onerror=y=>s(l.error)};h.onsuccess=p,h.onerror=f=>(p(),o.close(),s(l.error))}},l.onerror=h=>(o.close(),s(l.error)),i.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uo="/",tl="tensorflowjs_models",C$="info",xF="model_topology",wF="weight_specs",bF="weight_data",vF="model_metadata";function $$(n){return{info:[tl,n,C$].join(uo),topology:[tl,n,xF].join(uo),weightSpecs:[tl,n,wF].join(uo),weightData:[tl,n,bF].join(uo),modelMetadata:[tl,n,vF].join(uo)}}function I$(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function SF(n){const e=n.split(uo);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(uo)}function kF(n){return n.startsWith(na.URL_SCHEME)?n.slice(na.URL_SCHEME.length):n}class na{constructor(e){if(!se().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=$$(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Qd(e),o=vr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,iF(o));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:r}}catch{throw I$(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=aF(i),t}}na.URL_SCHEME="localstorage://";const T$=n=>se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(na.URL_SCHEME)?NF(n.slice(na.URL_SCHEME.length)):null;Rt.registerSaveRouter(T$);Rt.registerLoadRouter(T$);function NF(n){return new na(n)}class CF{constructor(){D(se().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=tl+uo,s=uo+C$;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const i=SF(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=kF(e);const t=$$(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return I$(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nl="://";class zn{constructor(){this.managers={}}static getInstance(){return zn.instance==null&&(zn.instance=new zn),zn.instance}static registerManager(e,t){D(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(nl)&&(e=e.slice(0,e.indexOf(nl))),D(e.length>0,()=>"scheme must not be an empty string.");const s=zn.getInstance();D(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=zn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(zn.getInstance().managers)}}function rf(n){if(n.indexOf(nl)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${zn.getSchemes().join(",")}`);return{scheme:n.split(nl)[0],path:n.split(nl)[1]}}async function E$(n,e,t=!1){D(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=Rt.getLoadHandlers(n);D(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),D(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=Rt.getSaveHandlers(e);D(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),D(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=o[0],a=rf(n).scheme,l=rf(n).path,c=a===rf(n).scheme,h=await r.load();t&&c&&await zn.getManager(a).removeModel(l);const p=await i.save(h);return t&&!c&&await zn.getManager(a).removeModel(l),p.modelArtifactsInfo}async function $F(){const n=zn.getSchemes(),e={};for(const t of n){const s=await zn.getManager(t).listModels();for(const r in s){const o=t+nl+r;e[o]=s[r]}}return e}async function IF(n){const e=rf(n);return zn.getManager(e.scheme).removeModel(e.path)}async function TF(n,e){return E$(n,e,!1)}async function EF(n,e){return E$(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RF{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!se().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return s$(e)}}if(se().get("IS_BROWSER")){se().setPlatform("browser",new RF);try{zn.registerManager(na.URL_SCHEME,new CF)}catch{}try{zn.registerManager(ta.URL_SCHEME,new yF)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF={importFetch:()=>require("node-fetch")};let o0;class DF{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return se().global.fetch!=null?se().global.fetch(e,t):(o0==null&&(o0=AF.importFetch()),o0(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}se().get("IS_NODE")&&!se().get("IS_BROWSER")&&se().setPlatform("node",new DF);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(n,e="float32",t){return e=e||"float32",ws(n),new Kt(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _F(n,e){const t=_(n,"x","cast");if(!qC(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return B.runKernel(Tl,s,r)}const ve=V({cast_:_F});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OF(n){const t={x:_(n,"x","clone","string_or_numeric")};return B.runKernel(Vl,t)}const Lr=V({clone_:OF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F1(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */f$();const FF={buffer:He,cast:ve,clone:Lr,print:F1};DO(FF);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(n,e){let t=_(n,"a","add"),s=_(e,"b","add");[t,s]=_t(t,s);const r={a:t,b:s};return B.runKernel(ya,r)}const pe=V({add_:LF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(n,e){let t=_(n,"a","floorDiv"),s=_(e,"b","floorDiv");[t,s]=_t(t,s);const r={a:t,b:s};return B.runKernel(Ml,r)}const tg=V({floorDiv_:PF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zF(n,e){let t=_(n,"a","div"),s=_(e,"b","div");if([t,s]=_t(t,s),t.dtype==="int32"&&s.dtype==="int32")return tg(t,s);const r={a:t,b:s},o={};return B.runKernel(_l,r,o)}const _e=V({div_:zF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(n,e){let t=_(n,"a","mul"),s=_(e,"b","mul");[t,s]=_t(t,s);const r={a:t,b:s};return B.runKernel(Yl,r)}const G=V({mul_:MF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n){const e=_(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return B.runKernel(nd,t)}else{const t={x:e};return B.runKernel(qc,t)}}const jt=V({abs_:BF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(n){const t={x:_(n,"x","acos")};return B.runKernel(vl,t)}const L1=V({acos_:VF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n){const t={x:_(n,"x","acosh")};return B.runKernel(Sl,t)}const P1=V({acosh_:WF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(n){D(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),D(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>_(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!Qe(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return B.runKernel(Kc,s)}const R$=V({addN_:UF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(n,e=null,t=!1){const r={x:_(n,"x","all","bool")},o={axis:e,keepDims:t};return B.runKernel(Kf,r,o)}const ng=V({all_:GF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(n,e=null,t=!1){const r={x:_(n,"x","any","bool")},o={axis:e,keepDims:t};return B.runKernel(Xf,r,o)}const Fc=V({any_:HF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jF(n,e=0){const s={x:_(n,"x","argMax")},r={axis:e};return B.runKernel(Xc,s,r)}const sa=V({argMax_:jF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n,e=0){const s={x:_(n,"x","argMin")},r={axis:e};return B.runKernel(Yc,s,r)}const z1=V({argMin_:qF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n){const t={x:_(n,"x","asin")};return B.runKernel(kl,t)}const M1=V({asin_:KF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(n){const t={x:_(n,"x","asinh")};return B.runKernel(Nl,t)}const B1=V({asinh_:XF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(n){const t={x:_(n,"x","atan")};return B.runKernel(Cl,t)}const V1=V({atan_:YF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(n,e){let t=_(n,"a","atan2"),s=_(e,"b","atan2");[t,s]=_t(t,s);const r={a:t,b:s};return B.runKernel(Il,r)}const W1=V({atan2_:QF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZF(n){const t={x:_(n,"x","atanh")};return B.runKernel($l,t)}const U1=V({atanh_:ZF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zd(n,e,t,s,r="NHWC",o){const i=n[3],a=[...e,i],l=bo(r);return dn(n,a,t,o,s,null,null,l)}function Qs(n,e,t,s,r,o,i="channelsLast"){const[a,l]=Lc(e);let c;if(i==="channelsLast")c=[a,l,n[3],n[3]];else if(i==="channelsFirst")c=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return dn(n,c,t,s,r,o,!1,i)}function wo(n,e,t,s,r,o,i="NDHWC"){const[a,l,c]=L0(e);let h,p;if(i==="NDHWC")p="channelsLast",h=[a,l,c,n[4],n[4]];else if(i==="NCDHW")p="channelsFirst",h=[a,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return pi(n,h,t,s,r,!1,p,o)}function dn(n,e,t,s,r,o,i=!1,a="channelsLast"){let[l,c,h,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,h,p]=n;else if(a==="channelsFirst")[l,p,c,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[f,g,,y]=e,[b,w]=Lc(t),[v,S]=Lc(s),$=sl(f,v),N=sl(g,S),{padInfo:T,outHeight:R,outWidth:L}=tL(r,c,h,b,w,$,N,o,a),P=i?y*p:y;let O;return a==="channelsFirst"?O=[l,P,R,L]:a==="channelsLast"&&(O=[l,R,L,P]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:h,inChannels:p,outHeight:R,outWidth:L,outChannels:P,padInfo:T,strideHeight:b,strideWidth:w,filterHeight:f,filterWidth:g,effectiveFilterHeight:$,effectiveFilterWidth:N,dilationHeight:v,dilationWidth:S,inShape:n,outShape:O,filterShape:e}}function pi(n,e,t,s,r,o=!1,i="channelsLast",a){let[l,c,h,p,f]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,c,h,p,f]=n;else if(i==="channelsFirst")[l,f,c,h,p]=n;else throw new Error(`Unknown dataFormat ${i}`);const[g,y,b,,w]=e,[v,S,$]=L0(t),[N,T,R]=L0(s),L=sl(g,N),P=sl(y,T),O=sl(b,R),{padInfo:F,outDepth:E,outHeight:W,outWidth:X}=nL(r,c,h,p,v,S,$,L,P,O,a),ee=o?w*f:w;let Q;return i==="channelsFirst"?Q=[l,ee,E,W,X]:i==="channelsLast"&&(Q=[l,E,W,X,ee]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:h,inWidth:p,inChannels:f,outDepth:E,outHeight:W,outWidth:X,outChannels:ee,padInfo:F,strideDepth:v,strideHeight:S,strideWidth:$,filterDepth:g,filterHeight:y,filterWidth:b,effectiveFilterDepth:L,effectiveFilterHeight:P,effectiveFilterWidth:O,dilationDepth:N,dilationHeight:T,dilationWidth:R,inShape:n,outShape:Q,filterShape:e}}function JF(n,e,t,s,r){s==null&&(s=G1(n,e,t));const o=n[0],i=n[1],a=Pc((o-e+2*s)/t+1,r),l=Pc((i-e+2*s)/t+1,r);return[a,l]}function eL(n,e,t,s,r,o){r==null&&(r=G1(n,e[0],s[0]));const i=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*r>=e[a]&&(i[a]=Pc((n[a]-e[a]+2*r)/s[a]+1,o));return i}function G1(n,e,t,s=1){const r=sl(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function Lc(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function L0(n){return typeof n=="number"?[n,n,n]:n}function sl(n,e){return e<=1?n:n+(n-1)*(e-1)}function tL(n,e,t,s,r,o,i,a,l){let c,h,p;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const g=JF([e,t],o,s,n,a);h=g[0],p=g[1]}else if(n==="same"){h=Math.ceil(e/s),p=Math.ceil(t/r);const f=Math.max(0,(h-1)*s+o-e),g=Math.max(0,(p-1)*r+i-t),y=Math.floor(f/2),b=f-y,w=Math.floor(g/2),v=g-w;c={top:y,bottom:b,left:w,right:v,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-o+1)/s),p=Math.ceil((t-i+1)/r);else if(typeof n=="object"){const f=l==="channelsLast"?n[1][0]:n[2][0],g=l==="channelsLast"?n[1][1]:n[2][1],y=l==="channelsLast"?n[2][0]:n[3][0],b=l==="channelsLast"?n[2][1]:n[3][1];c={top:f,bottom:g,left:y,right:b,type:f===0&&g===0&&y===0&&b===0?"VALID":"EXPLICIT"},h=Pc((e-o+f+g)/s+1,a),p=Pc((t-i+y+b)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:h,outWidth:p}}function nL(n,e,t,s,r,o,i,a,l,c,h){let p,f,g,y;if(n==="valid"&&(n=0),typeof n=="number"){p={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const w=eL([e,t,s,1],[a,l,c],1,[r,o,i],n,h);f=w[0],g=w[1],y=w[2]}else if(n==="same"){f=Math.ceil(e/r),g=Math.ceil(t/o),y=Math.ceil(s/i);const b=(f-1)*r+a-e,w=(g-1)*o+l-t,v=(y-1)*i+c-s,S=Math.floor(b/2),$=b-S,N=Math.floor(w/2),T=w-N,R=Math.floor(v/2),L=v-R;p={top:N,bottom:T,left:R,right:L,front:S,back:$,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:p,outDepth:f,outHeight:g,outWidth:y}}function Pc(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function si(n){const[e,t,s]=Lc(n);return e===1&&t===1&&s===1}function vn(n,e){return si(n)||si(e)}function ra(n){return Lc(n).every(e=>e>0)}function bo(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Un(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")D(Ji(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{D(Ji(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(n,e){const s={x:_(n,"x","reshape","string_or_numeric")},r={shape:e};return B.runKernel(Ld,s,r)}const j=V({reshape_:sL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n,e,t,s,r){const o=_(n,"x","avgPool","float32"),i=1;D(vn(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=o,l=!1;o.rank===3&&(l=!0,a=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),D(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),Un("avgPool",s,r);const c={x:a},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let p=B.runKernel(Qc,c,h);return p=ve(p,o.dtype),l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Jd=V({avgPool_:rL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(n,e,t,s,r,o="NDHWC"){const i=_(n,"x","avgPool3d","float32");let a=i,l=!1;i.rank===4&&(l=!0,a=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),D(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),D(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Un("avgPool3d",s,r);const c={x:a},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let p=B.runKernel(Zc,c,h);return p=ve(p,a.dtype),l?j(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const H1=V({avgPool3d_:oL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(n,e=0){D(n.length>=1,()=>"Pass at least one tensor to concat");const t=Oc(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return Lr(t[0]);const s=t,r={axis:e};return B.runKernel(sd,s,r)}const Mt=V({concat_:iL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(n,e,t=!1,s=!1){let r=_(n,"a","matMul"),o=_(e,"b","matMul");[r,o]=_t(r,o);const i={a:r,b:o},a={transposeA:t,transposeB:s};return B.runKernel(Jc,i,a)}const qe=V({matMul_:aL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(n){const t={x:_(n,"x","sigmoid","float32")};return B.runKernel(au,t)}const mr=V({sigmoid_:lL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(n,e,t){const s=_(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return B.runKernel(Vd,r,o)}const et=V({slice_:uL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(n){const t={x:_(n,"x","tanh","float32")};return B.runKernel(pu,t)}const ri=V({tanh_:cL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n,e,t,s,r,o){const i=_(n,"forgetBias","basicLSTMCell"),a=_(e,"lstmKernel","basicLSTMCell"),l=_(t,"lstmBias","basicLSTMCell"),c=_(s,"data","basicLSTMCell"),h=_(r,"c","basicLSTMCell"),p=_(o,"h","basicLSTMCell"),f=Mt([c,p],1),g=qe(f,a),y=pe(g,l),b=y.shape[0],w=y.shape[1]/4,v=[b,w],S=et(y,[0,0],v),$=et(y,[0,w],v),N=et(y,[0,w*2],v),T=et(y,[0,w*3],v),R=pe(G(mr(S),ri($)),G(h,mr(pe(i,N)))),L=G(ri(R),mr(T));return[R,L]}const A$=V({basicLSTMCell_:dL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(n,e,t){const s=_(n,"x","batchToSpaceND"),r=e.reduce((a,l)=>a*l);D(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),D(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),D(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},i={blockShape:e,crops:t};return B.runKernel(ed,o,i)}const eh=V({batchToSpaceND_:hL});function pL(n){let e;return n.rank===0||n.rank===1?e=j(n,[1,1,1,n.size]):n.rank===2?e=j(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n,e,t,s,r,o){o==null&&(o=.001);const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),l=_(t,"variance","batchNorm");let c;r!=null&&(c=_(r,"scale","batchNorm"));let h;s!=null&&(h=_(s,"offset","batchNorm")),D(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(h==null||a.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const f={x:pL(i),scale:c,offset:h,mean:a,variance:l},g={varianceEpsilon:o},y=B.runKernel(hd,f,g);return j(y,i.shape)}const gu=V({batchNorm_:fL});function mL(n,e,t,s,r,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),l=_(t,"variance","batchNorm");let c;r!=null&&(c=_(r,"scale","batchNorm"));let h;return s!=null&&(h=_(s,"offset","batchNorm")),D(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),D(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&D(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),h!=null&&D(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),gu(i,a,l,h,c,o)}const j1=V({batchNorm2d_:mL});function gL(n,e,t,s,r,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),l=_(t,"variance","batchNorm");let c;r!=null&&(c=_(r,"scale","batchNorm"));let h;return s!=null&&(h=_(s,"offset","batchNorm")),D(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),D(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&D(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),h!=null&&D(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),gu(i,a,l,h,c,o)}const q1=V({batchNorm3d_:gL});function yL(n,e,t,s,r,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),l=_(t,"variance","batchNorm");let c;r!=null&&(c=_(r,"scale","batchNorm"));let h;return s!=null&&(h=_(s,"offset","batchNorm")),D(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),D(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&D(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),h!=null&&D(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),gu(i,a,l,h,c,o)}const K1=V({batchNorm4d_:yL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(n,e,t){const s=_(n,"x","bincount"),r=_(e,"weights","bincount");D(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:t};return B.runKernel(Zf,o,i)}const X1=V({bincount_:xL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n,e){const t=_(n,"x","bitwiseAnd"),s=_(e,"y","bitwiseAnd");if(!Qe(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return B.runKernel(td,r)}const D$=V({bitwiseAnd_:wL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n,e){const t=_(n,"s0","broadcastArgs","int32"),s=_(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return B.runKernel(Jf,r)}const _$=V({broadcastArgs_:bL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n,e){let t=_(n,"broadcastTo","x");const s=t.shape;if(ws(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=j(t,c)}const r=t.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(r[c]===e[c])o[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((c,h)=>c>1?h:-1).filter(c=>c>=0).length===0)return Lr(t);const a={x:t},l={reps:o};return B.runKernel(fu,a,l)}const Yi=V({broadcastTo_:vL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(n){const t={x:_(n,"x","ceil","float32")};return B.runKernel(El,t)}const Y1=V({ceil_:SL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xa(n,e,t){ws(n),t=t||ma(e);const s={shape:n,value:e,dtype:t};return B.runKernel(mm,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n,e,t){const s=_(n,"x","clipByValue");if(D(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return xa(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return B.runKernel(Rl,r,o)}const Jn=V({clipByValue_:kL});function NL(n){return Mt(n,0)}const Q1=V({concat1d_:NL});function CL(n,e){return Mt(n,e)}const Z1=V({concat2d_:CL});function $L(n,e){return Mt(n,e)}const J1=V({concat3d_:$L});function IL(n,e){return Mt(n,e)}const ew=V({concat4d_:IL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n,e,t,s,r="NHWC",o=[1,1],i){const a=_(n,"x","conv2d","float32"),l=_(e,"filter","conv2d","float32");let c=a,h=!1;a.rank===3&&(h=!0,c=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),D(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Un("conv2d",s,i);const p=r==="NHWC"?c.shape[3]:c.shape[1];D(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),D(vn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),D(ra(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(ra(t),()=>"Error in conv2D: Strides should be larger than 0.");const f={x:c,filter:l},g={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},y=B.runKernel(rd,f,g);return h?j(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const fo=V({conv2d_:TL});function EL(n,e,t,s,r="NWC",o=1,i){const a=_(n,"x","conv1d"),l=_(e,"filter","conv1d");let c=a,h=!1;a.rank===2&&(h=!0,c=j(a,[1,a.shape[0],a.shape[1]])),D(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),D(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Un("conv1d",s,i),D(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),D(vn(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),D(ra(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(ra(t),()=>"Error in conv1D: Stride should be larger than 0."),D(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const p=j(l,[1,l.shape[0],l.shape[1],l.shape[2]]),f=j(c,[c.shape[0],1,c.shape[1],c.shape[2]]),w=fo(f,p,[1,t],s,"NHWC",[1,o],i);return h?j(w,[w.shape[2],w.shape[3]]):j(w,[w.shape[0],w.shape[2],w.shape[3]])}const sg=V({conv1d_:EL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(n,e,t,s,r,o="NHWC",i){D(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,c=!1;e.rank===3&&(c=!0,l=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),D(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),D(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),D(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const h=o==="NHWC"?a[3]:a[1],p=o==="NHWC"?l.shape[3]:l.shape[1];D(h===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${t.shape[2]}.`),D(p===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${t.shape[3]}.`),Un("conv2dDerInput",r,i);const f={dy:l,filter:t},g={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:a},y=B.runKernel(od,f,g);return c?j(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const tw=V({conv2DBackpropInput_:RL});function AL(n,e,t,s,r,o){const i=_(n,"x","conv2dTranspose"),a=_(e,"filter","conv2dTranspose");return tw(t,i,a,s,r,"NHWC",o)}const rg=V({conv2dTranspose_:AL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n,e,t,s,r="NDHWC",o=[1,1,1]){const i=_(n,"x","conv3d"),a=_(e,"filter","conv3d");let l=i,c=!1;i.rank===4&&(c=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),D(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),D(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),D(vn(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),D(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),D(ra(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(ra(t),()=>"Error in conv3D: Strides should be larger than 0.");const h={x:l,filter:a},p={strides:t,pad:s,dataFormat:r,dilations:o},f=B.runKernel(id,h,p);return c?j(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const nw=V({conv3d_:DL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n,e,t,s,r){D(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,i=e,a=!1;e.rank===4&&(a=!0,i=j(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const l=o[4],c=i.shape[4];D(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),D(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),D(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),D(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),D(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const h={dy:i,filter:t},p={pad:r,strides:s,inputShape:o},f=B.runKernel(sm,h,p);return a?j(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const O$=V({conv3DBackpropInput_:_L});function OL(n,e,t,s,r){const o=_(n,"x","conv3dTranspose"),i=_(e,"filter","conv3dTranspose");return O$(t,o,i,s,r)}const sw=V({conv3dTranspose_:OL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n){const t={x:_(n,"x","cos","float32")};return B.runKernel(Al,t)}const th=V({cos_:FL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(n){const t={x:_(n,"x","cosh","float32")};return B.runKernel(Dl,t)}const og=V({cosh_:LL});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(n,e=0,t=!1,s=!1){const o={x:_(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:s};return B.runKernel(rm,o,i)}const zc=V({cumprod_:PL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(n,e=0,t=!1,s=!1){const o={x:_(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return B.runKernel(ad,o,i)}const ig=V({cumsum_:zL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n,e,t,s=!1){const r=_(n,"x","denseBincount"),o=_(e,"weights","denseBincount");D(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),D(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},a={size:t,binaryOutput:s};return B.runKernel(im,i,a)}const kf=V({denseBincount_:ML});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(n,e,t="NHWC"){const s=_(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];D(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),D(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),D(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),D(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return B.runKernel(am,a,l)}const rw=V({depthToSpace_:BL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(n,e,t,s,r="NHWC",o=[1,1],i){const a=_(n,"x","depthwiseConv2d","float32"),l=_(e,"filter","depthwiseConv2d","float32");let c=a,h=!1;a.rank===3&&(h=!0,c=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),D(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const p=r==="NHWC"?c.shape[3]:c.shape[1];D(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),Un("depthwiseConv2d",s,i);const f={x:c,filter:l},g={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},y=B.runKernel(ld,f,g);return h?j(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const yu=V({depthwiseConv2d_:VL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n){const t={x:_(n,"x","diag")};return B.runKernel(cm,t)}const F$=V({diag_:WL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n,e,t,s,r=[1,1],o="NHWC"){const i=_(n,"x","dilation2d"),a=_(e,"filter","dilation2d");D(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),D(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),D(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let l=i,c=!1;i.rank===3&&(l=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0),D(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const h={x:l,filter:a},p={strides:t,pad:s,dilations:r},f=B.runKernel(ud,h,p);return c?j(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const ow=V({dilation2d_:UL});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,i=n[o]||1;(e[e.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}function Xt(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,i=e[o];(r==null||r===1&&i>1)&&t.unshift(o)}return t}function Ge(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let o=n[n.length-r-1];o==null&&(o=1);let i=e[e.length-r-1];if(i==null&&(i=1),o===1)s[t-r-1]=i;else if(i===1)s[t-r-1]=o;else if(o!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-r-1]=o}return s}const GL=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Ge,getBroadcastDims:oa,getReductionAxes:Xt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n,e){let t=_(n,"a","equal","string_or_numeric"),s=_(e,"b","equal","string_or_numeric");[t,s]=_t(t,s),Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(cd,r)}const Ys=V({equal_:HL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n,e,t){const s=_(e,"a","where"),r=_(t,"b","where"),o=_(n,"condition","where","bool"),i=Ge(Ge(o.shape,s.shape),r.shape),a=Yi(o,i),l=Yi(s,i),c=Yi(r,i),h={condition:a,t:l,e:c};return B.runKernel(Bd,h)}const xn=V({where_:jL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n){const t={x:_(n,"x","zerosLike")};return B.runKernel(Xd,t)}const tt=V({zerosLike_:qL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(n,e){let t=_(n,"a","div"),s=_(e,"b","div");[t,s]=_t(t,s);const r=_e(t,s),o=tt(r),i=Ys(s,o);return xn(i,o,r)}const iw=V({divNoNan_:KL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n,e){const t=_(n,"t1","dot"),s=_(e,"t2","dot");D((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(D(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const i=j(t,[1,-1]),a=j(s,[-1,1]),l=qe(i,a);return j(l,[])}else if(t.rank===1&&s.rank===2){const i=j(t,[1,-1]),a=j(s,[s.shape[0],s.shape[1]]),l=qe(i,a);return j(l,[l.size])}else if(t.rank===2&&s.rank===1){const i=j(s,[-1,1]),a=qe(t,i);return j(a,[a.size])}else{const i=j(s,[s.shape[0],s.shape[1]]);return qe(t,i)}}const aw=V({dot_:XL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(n,...e){const t=e.map((r,o)=>_(r,`tensors${o}`,"einsum")),s={equation:n};return B.runKernel(hm,t,s)}const Wi=V({einsum_:YL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n){const t={x:_(n,"x","elu","float32")};return B.runKernel(Ol,t)}const xu=V({elu_:QL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n,e){const t=_(n,"x","ensureShape","string_or_numeric");if(!HC(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const L$=V({ensureShape_:ZL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(n){let e=_(n,"x","erf");D(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ve(e,"float32"));const t={x:e};return B.runKernel(Fl,t)}const ag=V({erf_:JL});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lw(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function P$(n,e,t){const s=n.length+e.length,r=[];let o=0,i=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?r.push(n[o++]):r.push(e[i++]);return r}function hn(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function Bt(n,e){const t=e.map(s=>1);return P$(n,t,e)}function Sn(n,e,t){D(lw(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Ot(n,e){if(lw(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function fi(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Vt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(n,e=null,t=!1){const r={x:_(n,"x","max")},o={reductionIndices:e,keepDims:t};return B.runKernel(Sd,r,o)}const As=V({max_:e3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t3(n,e=null,t=!1){const r={x:_(n,"x","min")},o={axis:e,keepDims:t};return B.runKernel($d,r,o)}const ul=V({min_:t3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n,e){let t=_(n,"base","pow"),s=_(e,"exp","pow");[t,s]=_t(t,s);const r={a:t,b:s};return B.runKernel(Ql,r)}const Wr=V({pow_:n3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pe(n,e){if((an(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&an(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return hi(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(n){const t={x:_(n,"x","sqrt","float32")};return B.runKernel(uu,t)}const cn=V({sqrt_:s3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3(n){const e=_(n,"x","square"),t={};return B.runKernel("Square",{x:e},t)}const ft=V({square_:r3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n,e=null,t=!1){let s=_(n,"x","sum");s.dtype==="bool"&&(s=ve(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return B.runKernel(Wd,r,o)}const Ee=V({sum_:o3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(n,e="euclidean",t=null,s=!1){n=_(n,"x","norm");const r=z$(n,e,t);let o=r.shape;if(s){const i=Xe(t,n.shape);o=Bt(r.shape,i)}return j(r,o)}function z$(n,e,t=null){if(n.rank===0)return jt(n);if(n.rank!==1&&t===null)return z$(j(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Ee(jt(n),t);if(e===1/0)return As(jt(n),t);if(e===-1/0)return ul(jt(n),t);if(e==="euclidean"||e===2)return cn(Ee(Wr(jt(n),Pe(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return As(Ee(jt(n),t[0]),t[1]-1);if(e===1/0)return As(Ee(jt(n),t[1]),t[0]);if(e===-1/0)return ul(Ee(jt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return cn(Ee(ft(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const wu=V({norm_:i3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(n,e=null,t=!1){return wu(n,"euclidean",e,t)}const uw=V({euclideanNorm_:a3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n){const t={x:_(n,"x","exp")};return B.runKernel(Ll,t)}const es=V({exp_:l3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3(n,e=0){const t=_(n,"x","expandDims","string_or_numeric");D(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return B.runKernel(dd,s,r)}const En=V({expandDims_:u3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(n){const t={x:_(n,"x","expm1")};return B.runKernel(Pl,t)}const cw=V({expm1_:c3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(n,e){const t=_(n,"x","tile","string_or_numeric");D(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return B.runKernel(fu,s,r)}const Ts=V({tile_:d3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(n,e,t,s="float32"){e==null&&(e=n);const r=He([n,e],s),o=n<=e?n:e;for(let a=0;a<o;++a)r.set(1,a,a);const i=j(r.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return Ts(En(i,0),[t[0],1,1]);if(t.length===2)return Ts(En(En(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Ts(En(En(En(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const lg=V({eye_:h3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(n){const t={x:_(n,"x","floor","float32")};return B.runKernel(zl,t)}const bu=V({floor_:p3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f3(n,e,t=0,s=0){const r=_(n,"x","gather"),o=_(e,"indices","gather","int32"),i={x:r,indices:o},a={axis:t,batchDims:s};return B.runKernel(pd,i,a)}const vu=V({gather_:f3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(n,e){let t=_(n,"a","greater","string_or_numeric"),s=_(e,"b","greater","string_or_numeric");[t,s]=_t(t,s),Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(fd,r)}const ss=V({greater_:m3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g3(n,e){let t=_(n,"a","greaterEqual","string_or_numeric"),s=_(e,"b","greaterEqual","string_or_numeric");[t,s]=_t(t,s),Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(Bl,r)}const vo=V({greaterEqual_:g3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n){const t={input:_(n,"input","imag")};return B.runKernel(wm,t)}const nh=V({imag_:y3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(n){const t={x:_(n,"x","isFinite")};return B.runKernel(Wl,t)}const dw=V({isFinite_:x3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(n){const t={x:_(n,"x","isInf")};return B.runKernel(Ul,t)}const hw=V({isInf_:w3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3(n){const t={x:_(n,"x","isNaN")};return B.runKernel(Gl,t)}const pw=V({isNaN_:b3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(n,e=.2){const s={x:_(n,"x","leakyRelu")},r={alpha:e};return B.runKernel(md,s,r)}const sh=V({leakyRelu_:v3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(n,e){let t=_(n,"a","less","string_or_numeric"),s=_(e,"b","less","string_or_numeric");[t,s]=_t(t,s),Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(gd,r)}const cl=V({less_:S3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(n,e){let t=_(n,"a","lessEqual","string_or_numeric"),s=_(e,"b","lessEqual","string_or_numeric");[t,s]=_t(t,s),Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(yd,r)}const mi=V({lessEqual_:k3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M$(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return B.runKernel(bm,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(n,e=5,t=1,s=1,r=.5){const o=_(n,"x","localResponseNormalization");D(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),D(Ji(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=j(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const l={x:i},c={depthRadius:e,bias:t,alpha:s,beta:r},h=B.runKernel(vd,l,c);return a?j(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const fw=V({localResponseNormalization_:N3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C3(n){const t={x:_(n,"x","log","float32")};return B.runKernel(Hl,t)}const ms=V({log_:C3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(n){const t={x:_(n,"x","log1p")};return B.runKernel(jl,t)}const rh=V({log1p_:$3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n){return D(ei(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const s=_(e,"x","tf.grad","string_or_numeric"),r=t!=null?_(t,"dy","tf.grad"):null;return B.tidy(()=>{const{value:o,grads:i}=B.gradients(()=>n(s),[s],r);return r!=null&&bn(o.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),ug(i),i[0]})}}function T3(n){return D(ei(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{D(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=Oc(e,"args","tf.grads","string_or_numeric"),r=t!=null?_(t,"dy","tf.grads"):null;return B.tidy(()=>{const{value:o,grads:i}=B.gradients(()=>n(...s),s,r);return r!=null&&bn(o.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ug(i),i})}}function E3(n){return D(ei(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{D(e instanceof ut,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(t==null||t instanceof ut,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:r}=B.gradients(()=>n(e),[e],t);return ug(s),{grad:s[0],value:r}}}function R3(n){return D(ei(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{D(Array.isArray(e)&&e.every(r=>r instanceof ut),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(t==null||t instanceof ut,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=B.gradients(()=>n(...e),e,t);return t!=null&&bn(s.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),ug(s.grads),s}}function B$(n,e){D(ei(n),()=>"The f passed in variableGrads(f) must be a function"),D(e==null||Array.isArray(e)&&e.every(c=>c instanceof _c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in B.registeredVariables)e.push(B.registeredVariables[c])}const s=t?e.filter(c=>!c.trainable):null,r=e.length;e=e.filter(c=>c.trainable),D(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:a}=B.gradients(n,e,null,o);D(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const l={};return e.forEach((c,h)=>{a[h]!=null&&(l[c.name]=a[h])}),s!=null&&s.forEach(c=>l[c.name]=null),{value:i,grads:l}}function Ur(n){return B.customGrad(n)}function ug(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(n){const t={x:_(n,"x","neg")};return B.runKernel(Td,t)}const vt=V({neg_:A3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D3(n){const t={x:_(n,"x","softplus")};return B.runKernel(lu,t)}const wa=V({softplus_:D3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _3(n){const e=_(n,"x","logSigmoid");return Ur(s=>({value:vt(wa(vt(s))),gradFunc:i=>G(i,mr(vt(s)))}))(e)}const mw=V({logSigmoid_:_3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n,e){let t=_(n,"a","sub"),s=_(e,"b","sub");[t,s]=_t(t,s);const r={a:t,b:s};return B.runKernel(du,r)}const $e=V({sub_:O3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n,e=-1){const t=_(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Ur((r,o)=>{const a=As(r,e,!0),l=$e(r,a),c=$e(ve(l,"float32"),ms(Ee(es(l),e,!0)));return o([c]),{value:c,gradFunc:(p,f)=>{const[g]=f,y=!0,b=es(g);return $e(p,G(Ee(p,e,y),b))}}})(t)}const cg=V({logSoftmax_:F3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(n,e=null,t=!1){const s=_(n,"x","logSumExp"),r=Xe(e,s.shape),o=As(s,r,!0),i=$e(s,o),a=es(i),l=Ee(a,r),c=ms(l),h=pe(j(o,c.shape),c);if(t){const p=Bt(h.shape,r);return j(h,p)}return h}const oh=V({logSumExp_:L3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n,e){const t=_(n,"a","logicalAnd","bool"),s=_(e,"b","logicalAnd","bool");Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(xd,r)}const yr=V({logicalAnd_:P3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(n){const t={x:_(n,"x","logicalNot","bool")};return B.runKernel(wd,t)}const ih=V({logicalNot_:z3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n,e){const t=_(n,"a","logicalOr","bool"),s=_(e,"b","logicalOr","bool");Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(bd,r)}const dg=V({logicalOr_:M3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(n,e){const t=_(n,"a","logicalXor","bool"),s=_(e,"b","logicalXor","bool");return Ge(t.shape,s.shape),yr(dg(n,e),ih(yr(n,e)))}const gw=V({logicalXor_:B3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Up=2147483648;function V3(n,e,t="left"){const s=_(n,"sortedSequence","searchSorted"),r=_(e,"values","searchSorted"),o=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],a=j(s,[-1,o]),l=j(r,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(le(l.shape)>=Up)throw new Error(`values tensor size must less than ${Up}`);if(a.shape[1]>=Up)throw new Error(`trailing dim_size must less than ${Up} for int32 output type, was ${a.shape[1]}`);const c={sortedSequence:a,values:l},h={side:t};return B.runKernel(zm,c,h)}const hg=V({searchSorted_:V3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n,e){return hg(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W3(n,e,t,s,r){const o=_(n,"x","maxPool"),i=1;let a=o,l=!1;o.rank===3&&(l=!0,a=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),D(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),D(vn(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),Un("maxPool",s,r);const c={x:a},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r},p=B.runKernel(kd,c,h);return l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const ah=V({maxPool_:W3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3(n,e=[1,1,1],t,s,r,o="NDHWC"){const i=_(n,"x","maxPool3d");let a=i,l=!1;i.rank===4&&(l=!0,a=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),D(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),Un("maxPool3d",s,r);const c={x:a},h={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},p=B.runKernel(Nd,c,h);return l?j(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const yw=V({maxPool3d_:U3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n,e,t,s,r=!1){const i={x:_(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},l=B.runKernel(Nm,i,a);return{result:l[0],indexes:l[1]}}const W$=V({maxPoolWithArgmax_:G3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(n,e){let t=_(n,"a","maximum"),s=_(e,"b","maximum");[t,s]=_t(t,s),t.dtype==="bool"&&(t=ve(t,"int32"),s=ve(s,"int32")),Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(ql,r)}const jr=V({maximum_:H3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n,e=null,t=!1){const r={x:_(n,"x","mean")},o={axis:e,keepDims:t};return B.runKernel(Cd,r,o)}const At=V({mean_:j3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt(n,e="float32"){if(ws(n),e==="complex64"){const s=qt(n,"float32"),r=qt(n,"float32");return po(s,r)}const t=wn(le(n),e);return B.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xn(n,e="float32"){if(ws(n),e==="complex64"){const s=Xn(n,"float32"),r=qt(n,"float32");return po(s,r)}const t=qf(le(n),e);return B.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=_(n,"x","meshgrid",n instanceof ut?n.dtype:"float32");if(e===void 0)return[s];let r=_(e,"y","meshgrid",e instanceof ut?e.dtype:"float32");const o=le(s.shape),i=le(r.shape);return t==="xy"?(s=j(s,[1,-1]),r=j(r,[-1,1]),[qe(Xn([i,1],s.dtype),s),qe(r,Xn([1,o],r.dtype))]):(s=j(s,[-1,1]),r=j(r,[1,-1]),[qe(s,Xn([1,i],s.dtype)),qe(Xn([o,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n,e){let t=_(n,"a","minimum"),s=_(e,"b","minimum");[t,s]=_t(t,s),t.dtype==="bool"&&(t=ve(t,"int32"),s=ve(s,"int32")),Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(Kl,r)}const oi=V({minimum_:q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(n,e,t){D(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=_(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)D(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},i={x:s};return B.runKernel(Id,i,o)}const xw=V({mirrorPad_:K3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n,e){let t=_(n,"a","mod"),s=_(e,"b","mod");[t,s]=_t(t,s);const r={a:t,b:s};return B.runKernel(Xl,r)}const ww=V({mod_:X3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n,e=null,t=!1){n=_(n,"x","moments");const s=Xe(e,n.shape),r=At(n,s,t);let o=r.shape;t||(o=Bt(r.shape,s));const i=ft($e(ve(n,"float32"),j(r,o))),a=At(i,s,t);return{mean:r,variance:a}}const lh=V({moments_:Y3});function Q3(n,e,t,s){const r=_(e,"data","multiRNNCell"),o=Oc(t,"c","multiRNNCell"),i=Oc(s,"h","multiRNNCell");let a=r;const l=[];for(let p=0;p<n.length;p++){const f=n[p](a,o[p],i[p]);l.push(f[0]),l.push(f[1]),a=f[1]}const c=[],h=[];for(let p=0;p<l.length;p+=2)c.push(l[p]),h.push(l[p+1]);return[c,h]}const G$=V({multiRNNCell_:Q3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n,e,t,s=!1){const r=_(n,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();const l={logits:i===1?j(r,[1,-1]):r},c={numSamples:e,seed:t,normalized:s},h=B.runKernel(Cm,l,c);return i===1?j(h,[h.size]):h}const H$=V({multinomial_:Z3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(n,e){let t=_(n,"a","notEqual","string_or_numeric"),s=_(e,"b","notEqual","string_or_numeric");[t,s]=_t(t,s),Ge(t.shape,s.shape);const r={a:t,b:s};return B.runKernel(Ed,r)}const ia=V({notEqual_:J3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:_(n,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:t,offValue:s};return B.runKernel(Ad,i,a)}const dl=V({oneHot_:eP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n){const t={x:_(n,"x","onesLike")};return B.runKernel(Rd,t)}const gs=V({onesLike_:tP});function nP(n,e){const t=_(n,"v1","outerProduct"),s=_(e,"v2","outerProduct");D(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=j(t,[-1,1]),o=j(s,[1,-1]);return qe(r,o)}const j$=V({outerProduct_:nP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n,e,t=0){const s=_(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return B.runKernel(_d,o,r)}const So=V({pad_:sP});function rP(n,e,t=0){return D(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),So(n,[e],t)}const q$=V({pad1d_:rP});function oP(n,e,t=0){return D(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),So(n,e,t)}const K$=V({pad2d_:oP});function iP(n,e,t=0){return D(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),So(n,e,t)}const X$=V({pad3d_:iP});function aP(n,e,t=0){return D(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),So(n,e,t)}const Y$=V({pad4d_:aP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n,e,t){const s=_(n,"x","spaceToBatchND");D(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),D(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),D(s.shape.reduce((i,a,l)=>l>0&&l<=e.length?i&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return B.runKernel(Ud,r,o)}const uh=V({spaceToBatchND_:lP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n,e,t,s,r,o,i){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const a=_(n,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),D(vn(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const h=Qs(l.shape,e,o,r,s),p=[h.dilationHeight,h.dilationWidth];let f;s==="same"?f=dP([h.filterHeight,h.filterWidth],p):f=[[0,0],[0,0]];const g=p[0]===1&&p[1]===1,[y,b]=cP([h.inHeight,h.inWidth],p,f),w=g?s:"valid",v=g?l:uh(l,p,y),$=(t==="avg"?()=>Jd(v,e,o,w,i):()=>ah(v,e,o,w,i))(),N=g?$:eh($,p,b);return c?j(N,[N.shape[1],N.shape[2],N.shape[3]]):N}function cP(n,e,t){const s=t.map(h=>h[0]),r=t.map(h=>h[1]),o=n.concat(s,r),i=e.map((h,p)=>(h-o[p]%h)%h),a=r.map((h,p)=>h+i[p]),l=e.map((h,p)=>[s[p],a[p]]),c=e.map((h,p)=>[0,i[p]]);return[l,c]}function dP(n,e){const s=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,a)=>i-r[a]);return s.map((i,a)=>[r[a],o[a]])}const bw=V({pool_:uP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(n,e){const t=_(n,"x","prelu"),s=_(e,"alpha","prelu"),r={x:t,alpha:s};return B.runKernel(Od,r)}const ch=V({prelu_:hP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(n,e=null,t=!1){let s=_(n,"x","prod");s.dtype==="bool"&&(s=ve(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return B.runKernel(Fd,r,o)}const vw=V({prod_:pP});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n,e,t,s){const r=n.map((h,p)=>_(h,`tensors${p}`,"raggedGather","int32")),o=_(e,"paramsDenseValues","raggedGather"),i=_(t,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:o,indices:i},l={outputRaggedRank:s},c=B.runKernel(Em,a,l);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const Q$=V({raggedGather_:fP});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(n,e,t){const s=_(n,"starts","raggedRange"),r=_(e,"limits","raggedRange",s.dtype),o=_(t,"deltas","raggedRange",s.dtype),i={starts:s,limits:r,deltas:o},a=B.runKernel(Rm,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const Z$=V({raggedRange_:mP});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n,e,t,s,r){const o=_(n,"shape","raggedTensorToTensor","int32"),i=_(e,"values","raggedTensorToTensor"),a=_(t,"defaultValue","raggedTensorToTensor",i.dtype),l=s.map((p,f)=>_(p,`tensors${f}`,"raggedTensorToTensor","int32")),c={shape:o,values:i,defaultValue:a,rowPartitionTensors:l},h={rowPartitionTypes:r};return B.runKernel(Am,c,h)}const J$=V({raggedTensorToTensor_:gP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n,e,t){ws(n);const s=le(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return B.makeTensor(r,n,t)}const eI=V({rand_:yP});var of={exports:{}},xP=of.exports,cN;function wP(){return cN||(cN=1,function(n){(function(e,t,s){function r(l){var c=this,h=a();c.next=function(){var p=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=p-(c.c=p|0)},c.c=1,c.s0=h(" "),c.s1=h(" "),c.s2=h(" "),c.s0-=h(l),c.s0<0&&(c.s0+=1),c.s1-=h(l),c.s1<0&&(c.s1+=1),c.s2-=h(l),c.s2<0&&(c.s2+=1),h=null}function o(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function i(l,c){var h=new r(l),p=c&&c.state,f=h.next;return f.int32=function(){return h.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,p&&(typeof p=="object"&&o(p,h),f.state=function(){return o(h,{})}),f}function a(){var l=4022871197,c=function(h){h=String(h);for(var p=0;p<h.length;p++){l+=h.charCodeAt(p);var f=.02519603282416938*l;l=f>>>0,f-=l,f*=l,l=f>>>0,f-=l,l+=f*4294967296}return(l>>>0)*23283064365386963e-26};return c}t.exports?t.exports=i:this.alea=i})(xP,n)}(of)),of.exports}var af={exports:{}},bP=af.exports,dN;function vP(){return dN||(dN=1,function(n){(function(e,t,s){function r(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var p=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^p^p>>>8},a===(a|0)?l.x=a:c+=a;for(var h=0;h<c.length+64;h++)l.x^=c.charCodeAt(h)|0,l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function i(a,l){var c=new r(a),h=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,y=(f+g)/(1<<21);while(y===0);return y},p.int32=c.next,p.quick=p,h&&(typeof h=="object"&&o(h,c),p.state=function(){return o(c,{})}),p}t.exports?t.exports=i:this.xor128=i})(bP,n)}(af)),af.exports}var lf={exports:{}},SP=lf.exports,hN;function kP(){return hN||(hN=1,function(n){(function(e,t,s){function r(a){var l=this,c="";l.next=function(){var p=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(p^p<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var h=0;h<c.length+64;h++)l.x^=c.charCodeAt(h)|0,h==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function o(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function i(a,l){var c=new r(a),h=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,y=(f+g)/(1<<21);while(y===0);return y},p.int32=c.next,p.quick=p,h&&(typeof h=="object"&&o(h,c),p.state=function(){return o(c,{})}),p}t.exports?t.exports=i:this.xorwow=i})(SP,n)}(lf)),lf.exports}var uf={exports:{}},NP=uf.exports,pN;function CP(){return pN||(pN=1,function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var h=l.x,p=l.i,f,g;return f=h[p],f^=f>>>7,g=f^f<<24,f=h[p+1&7],g^=f^f>>>10,f=h[p+3&7],g^=f^f>>>3,f=h[p+4&7],g^=f^f<<7,f=h[p+7&7],f=f^f<<13,g^=f^f<<9,h[p]=g,l.i=p+1&7,g};function c(h,p){var f,g=[];if(p===(p|0))g[0]=p;else for(p=""+p,f=0;f<p.length;++f)g[f&7]=g[f&7]<<15^p.charCodeAt(f)+g[f+1&7]<<13;for(;g.length<8;)g.push(0);for(f=0;f<8&&g[f]===0;++f);for(f==8?g[7]=-1:g[f],h.x=g,h.i=0,f=256;f>0;--f)h.next()}c(l,a)}function o(a,l){return l.x=a.x.slice(),l.i=a.i,l}function i(a,l){a==null&&(a=+new Date);var c=new r(a),h=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,y=(f+g)/(1<<21);while(y===0);return y},p.int32=c.next,p.quick=p,h&&(h.x&&o(h,c),p.state=function(){return o(c,{})}),p}t.exports?t.exports=i:this.xorshift7=i})(NP,n)}(uf)),uf.exports}var cf={exports:{}},$P=cf.exports,fN;function IP(){return fN||(fN=1,function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var h=l.w,p=l.X,f=l.i,g,y;return l.w=h=h+1640531527|0,y=p[f+34&127],g=p[f=f+1&127],y^=y<<13,g^=g<<17,y^=y>>>15,g^=g>>>12,y=p[f]=y^g,l.i=f,y+(h^h>>>16)|0};function c(h,p){var f,g,y,b,w,v=[],S=128;for(p===(p|0)?(g=p,p=null):(p=p+"\0",g=0,S=Math.max(S,p.length)),y=0,b=-32;b<S;++b)p&&(g^=p.charCodeAt((b+32)%p.length)),b===0&&(w=g),g^=g<<10,g^=g>>>15,g^=g<<4,g^=g>>>13,b>=0&&(w=w+1640531527|0,f=v[b&127]^=g+w,y=f==0?y+1:0);for(y>=128&&(v[(p&&p.length||0)&127]=-1),y=127,b=4*128;b>0;--b)g=v[y+34&127],f=v[y=y+1&127],g^=g<<13,f^=f<<17,g^=g>>>15,f^=f>>>12,v[y]=g^f;h.w=w,h.X=v,h.i=y}c(l,a)}function o(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function i(a,l){a==null&&(a=+new Date);var c=new r(a),h=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,y=(f+g)/(1<<21);while(y===0);return y},p.int32=c.next,p.quick=p,h&&(h.X&&o(h,c),p.state=function(){return o(c,{})}),p}t.exports?t.exports=i:this.xor4096=i})($P,n)}(cf)),cf.exports}var df={exports:{}},TP=df.exports,mN;function EP(){return mN||(mN=1,function(n){(function(e,t,s){function r(a){var l=this,c="";l.next=function(){var p=l.b,f=l.c,g=l.d,y=l.a;return p=p<<25^p>>>7^f,f=f-g|0,g=g<<24^g>>>8^y,y=y-p|0,l.b=p=p<<20^p>>>12^f,l.c=f=f-g|0,l.d=g<<16^f>>>16^y,l.a=y-p|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var h=0;h<c.length+20;h++)l.b^=c.charCodeAt(h)|0,l.next()}function o(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function i(a,l){var c=new r(a),h=l&&l.state,p=function(){return(c.next()>>>0)/4294967296};return p.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,y=(f+g)/(1<<21);while(y===0);return y},p.int32=c.next,p.quick=p,h&&(typeof h=="object"&&o(h,c),p.state=function(){return o(c,{})}),p}t.exports?t.exports=i:this.tychei=i})(TP,n)}(df)),df.exports}var hf={exports:{}};const RP={},AP=Object.freeze(Object.defineProperty({__proto__:null,default:RP},Symbol.toStringTag,{value:"Module"})),DP=g1(AP);var _P=hf.exports,gN;function OP(){return gN||(gN=1,function(n){(function(e,t,s){var r=256,o=6,i=52,a="random",l=s.pow(r,o),c=s.pow(2,i),h=c*2,p=r-1,f;function g(N,T,R){var L=[];T=T==!0?{entropy:!0}:T||{};var P=v(w(T.entropy?[N,$(t)]:N??S(),3),L),O=new y(L),F=function(){for(var E=O.g(o),W=l,X=0;E<c;)E=(E+X)*r,W*=r,X=O.g(1);for(;E>=h;)E/=2,W/=2,X>>>=1;return(E+X)/W};return F.int32=function(){return O.g(4)|0},F.quick=function(){return O.g(4)/4294967296},F.double=F,v($(O.S),t),(T.pass||R||function(E,W,X,ee){return ee&&(ee.S&&b(ee,O),E.state=function(){return b(O,{})}),X?(s[a]=E,W):E})(F,P,"global"in T?T.global:this==s,T.state)}function y(N){var T,R=N.length,L=this,P=0,O=L.i=L.j=0,F=L.S=[];for(R||(N=[R++]);P<r;)F[P]=P++;for(P=0;P<r;P++)F[P]=F[O=p&O+N[P%R]+(T=F[P])],F[O]=T;(L.g=function(E){for(var W,X=0,ee=L.i,Q=L.j,te=L.S;E--;)W=te[ee=p&ee+1],X=X*r+te[p&(te[ee]=te[Q=p&Q+W])+(te[Q]=W)];return L.i=ee,L.j=Q,X})(r)}function b(N,T){return T.i=N.i,T.j=N.j,T.S=N.S.slice(),T}function w(N,T){var R=[],L=typeof N,P;if(T&&L=="object")for(P in N)try{R.push(w(N[P],T-1))}catch{}return R.length?R:L=="string"?N:N+"\0"}function v(N,T){for(var R=N+"",L,P=0;P<R.length;)T[p&P]=p&(L^=T[p&P]*19)+R.charCodeAt(P++);return $(T)}function S(){try{var N;return f&&(N=f.randomBytes)?N=N(r):(N=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(N)),$(N)}catch{var T=e.navigator,R=T&&T.plugins;return[+new Date,e,R,e.screen,$(t)]}}function $(N){return String.fromCharCode.apply(0,N)}if(v(s.random(),t),n.exports){n.exports=g;try{f=DP}catch{}}else s["seed"+a]=g})(typeof self<"u"?self:_P,[],Math)}(hf)),hf.exports}var i0,yN;function FP(){if(yN)return i0;yN=1;var n=wP(),e=vP(),t=kP(),s=CP(),r=IP(),o=EP(),i=OP();return i.alea=n,i.xor128=e,i.xorwow=t,i.xorshift7=s,i.xor4096=r,i.tychei=o,i0=i,i0}var pg=FP();/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LP=.001,tI=.1;function PP(n,e,t){return t==null&&(t=Sw()),P0(n,e,(s,r)=>kw(s,r,t))}function Sw(){return B.backend.floatPrecision()===32?LP:tI}function P0(n,e,t){let s=!0;if((an(n)||an(e))&&(s=!1),an(n)&&an(e)&&(s=!0),s){const i=n.constructor.name,a=e.constructor.name;if(i!==a)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${a}`)}if(Array.isArray(n)&&Array.isArray(e)){const i=Vr(n),a=Vr(e);if(!Qe(i,a))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${a}]`)}const r=an(n)?n:Br(n),o=an(e)?e:Br(e);if(r.length!==o.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${o.length}.
Actual:   ${r}.
Expected: ${o}.`);for(let i=0;i<o.length;++i){const a=r[i],l=o[i];if(!t(a,l))throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${l}.
Actual:   ${r}.
Expected: ${o}.`)}typeof expect<"u"&&expect().nothing()}function zP(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function MP(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return _r(n)||_r(n[0])||_r(e)||_r(e[0])?P0(n,t,(s,r)=>s==r):P0(n,e,(s,r)=>kw(s,r,0))}function BP(n,e,t){if(t==null&&(t=Sw()),!kw(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function kw(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function VP(n,e,t){for(let s=0;s<n.length;s++)if(n[s]<e||n[s]>t)throw new Error(`Value out of range:${n[s]} low: ${e}, high: ${t}`)}function WP(n,e){const t=new Float32Array(n),s=new Float32Array(e);if(t.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${t.length}`);for(let r=0;r<s.length;r++)if(t[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${t[r]} instead`)}function nI(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?nI(t):n[e]=Fr(t)}return n}function UP(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",s=>t(e)),e.load()})}async function GP(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const HP=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:tI,createVideoElement:UP,encodeStrings:nI,expectArrayBuffersEqual:WP,expectArraysClose:PP,expectArraysEqual:MP,expectNumbersClose:BP,expectPromiseToFail:zP,expectValuesInRange:VP,play:GP,testEpsilon:Sw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nw{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=pg.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class jP{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=pg.alea(o.toString()),this.randn=new Nw(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,i;for(;;){do r=this.randn.nextValue(),i=1+this.c*r;while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<t||Math.log(o)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class qP{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=pg.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(n,e,t=1,s="float32",r){if(ws(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new jP(e,t,s,r),i=He(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const sI=V({randomGamma_:KP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(n,e=0,t=1,s,r){if(ws(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new Nw(e,t,s,!1,r),i=He(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const fg=V({randomNormal_:XP});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return fg(n,0,1,e,t)}const rI=V({randomStandardNormal_:YP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(n,e=0,t=1,s="float32",r){ws(n);const o=He(n,s),i=new qP(e,t,null,r);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const gi=V({randomUniform_:QP});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n,e,t,s){return gi(n,e,t,"int32",s)}const oI=V({randomUniformInt_:ZP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return B.runKernel(Dm,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JP(n){const t={input:_(n,"input","real")};return B.runKernel(_m,t)}const hl=V({real_:JP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(n){const t={x:_(n,"x","reciprocal")};return B.runKernel(Zl,t)}const Cw=V({reciprocal_:ez});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tz(n){const t={x:_(n,"x","relu")};return B.runKernel(Jl,t)}const Sr=V({relu_:tz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nz(n){const t={x:_(n,"x","relu6")};return B.runKernel(eu,t)}const mg=V({relu6_:nz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(n,e){const s={x:_(n,"x","reverse")},r={dims:e};return B.runKernel(Md,s,r)}const Ds=V({reverse_:sz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n){const e=_(n,"x","reverse");return D(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Ds(e,0)}const iI=V({reverse1d_:rz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oz(n,e){const t=_(n,"x","reverse");return D(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Ds(t,e)}const aI=V({reverse2d_:oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(n,e){const t=_(n,"x","reverse");return D(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Ds(t,e)}const lI=V({reverse3d_:iz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function az(n,e){const t=_(n,"x","reverse");return D(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Ds(t,e)}const uI=V({reverse4d_:az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(n){const t={x:_(n,"x","round")};return B.runKernel(tu,t)}const gg=V({round_:lz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n){const t={x:_(n,"x","rsqrt","float32")};return B.runKernel(nu,t)}const yg=V({rsqrt_:uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(n){const t={x:_(n,"x","selu")};return B.runKernel(su,t)}const xg=V({selu_:cz});function dz(n,e,t,s,r,o=[1,1],i="NHWC"){const a=_(n,"x","separableConv2d"),l=_(e,"depthwiseFilter","separableConv2d"),c=_(t,"pointwiseFilter","separableConv2d");let h=a,p=!1;if(a.rank===3&&(p=!0,h=j(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(h.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),D(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),D(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),D(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),D(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const f=l.shape[2],g=l.shape[3];D(c.shape[2]===f*g,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*g}, but got ${c.shape[2]}.`);const y=yu(h,l,s,r,i,o),w=fo(y,c,1,"valid",i);return p?j(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const wg=V({separableConv2d_:dz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function hz(n,e){const t=_(n,"x","setdiff1d"),s=_(e,"y","setdiff1d");D(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),D(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),D(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),i=new Set(o);let a=0;for(let h=0;h<r.length;h++)i.has(r[h])||a++;const l=new Kt([a],t.dtype),c=new Kt([a],"int32");for(let h=0,p=0;h<r.length;h++)i.has(r[h])||(l.values[p]=r[h],c.values[p]=h,p++);return[l.toTensor(),c.toTensor()]}const cI=hz;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n){const t={x:_(n,"x","sign")};return B.runKernel(iu,t)}const $w=V({sign_:pz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(n){const t={x:_(n,"x","sin","float32")};return B.runKernel(ru,t)}const bg=V({sin_:fz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(n){const t={x:_(n,"x","sinh")};return B.runKernel(ou,t)}const vg=V({sinh_:mz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n,e,t){const s=_(n,"x","slice1d");return D(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),et(s,[e],[t])}const dh=V({slice1d_:gz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yz(n,e,t){const s=_(n,"x","slice2d");return D(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),et(s,e,t)}const Sg=V({slice2d_:yz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n,e,t){const s=_(n,"x","slice3d");return D(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),et(s,e,t)}const hh=V({slice3d_:xz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n,e,t){const s=_(n,"x","slice4d");return D(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),et(s,e,t)}const pl=V({slice4d_:wz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(n,e=-1){const t=_(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return B.runKernel(Hd,s,r)}const ph=V({softmax_:bz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n){D(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return B.runKernel(fm,e)}const fh=V({fft_:vz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n){D(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return B.runKernel(xm,e)}const fl=V({ifft_:Sz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=j(n,[t,e]);s=fl(r)}else{const r=[t,2*(e-1)],o=j(hl(n),[t,e]),i=j(nh(n),[t,e]),a=Ds(et(o,[0,1],[t,e-2]),1),l=G(Ds(et(i,[0,1],[t,e-2]),1),Pe(-1)),c=Mt([o,a],1),h=Mt([i,l],1),p=j(po(c,h),[r[0],r[1]]);s=fl(p)}if(s=hl(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=j(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const kg=V({irfft_:kz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(n,e,t=0){const r={x:_(n,"x","split")},o={numOrSizeSplits:e,axis:t};return B.runKernel(Gd,r,o)}const Yn=V({split_:Nz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(n,e){D(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const y=n.shape.map(w=>0),b=n.shape.map(w=>w);b[n.shape.length-1]=e,r=et(n,y,b),t=e}else if(e!=null&&e>t){const y=n.shape.map(b=>b);y[n.shape.length-1]=e-t,r=Mt([n,qt(y)],n.shape.length-1),t=e}else r=n;const o=tt(r),i=j(po(r,o),[s,t]),a=fh(i),l=Math.floor(t/2)+1,c=hl(a),h=nh(a),p=Yn(c,[l,t-l],c.shape.length-1),f=Yn(h,[l,t-l],h.shape.length-1),g=r.shape.slice();return g[r.shape.length-1]=l,j(po(p[0],f[0]),g)}const mh=V({rfft_:Cz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(n,e){let t=_(n,"a","squaredDifference"),s=_(e,"b","squaredDifference");[t,s]=_t(t,s),Ge(t.shape,s.shape);const r={a:t,b:s},o={};return B.runKernel(cu,r,o)}const Ng=V({squaredDifference_:$z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n,e){const t=_(n,"x","squeeze","string_or_numeric");return j(t,yo(t.shape,e).newShape)}const yi=V({squeeze_:Iz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(n,e=0){const t=Oc(n,"tensors","stack","string_or_numeric");D(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&D(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return B.runKernel(Dd,s,r)}const ts=V({stack_:Tz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(n,e=0){const s={x:_(n,"x","step")},r={alpha:e};return B.runKernel(mu,s,r)}const ba=V({step_:Ez});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rz(n,e,t,s,r=0,o=0,i=0,a=0,l=0){const h={x:_(n,"x","stridedSlice","string_or_numeric")},p={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return B.runKernel(Hm,h,p)}const Iw=V({stridedSlice_:Rz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(n){const t={x:_(n,"x","tan","float32")};return B.runKernel(hu,t)}const Tw=V({tan_:Az});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(n,e){fa(n);const t=Vr(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return hi(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rl(n,e,t){if(fa(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Vr(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return hi(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(n,e,t){if(fa(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Vr(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return hi(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(n,e,t){if(fa(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Vr(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return hi(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(n,e,t){if(fa(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Vr(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return hi(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pI(n,e,t){if(fa(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Vr(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,hi(n,e,s,t)}function Rw(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let i=0;i<r;++i)if(t.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-r;++i)if(t.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${t.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}function Cg(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}Rw(t,e,n)}function xi(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let i=1;for(let p=r;p<o;++p)i*=t[p];const a=r<1?1:r,l=le(e.shape)/a,c=[...Le(t.slice(0,r)),1],h=le(t);return{sliceRank:r,numUpdates:l,sliceSize:i,strides:c,outputSize:h}}const Dz=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:xi,validateInput:Cg,validateUpdateShape:Rw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n,e,t){const s=_(n,"tensor","tensorScatterupdate"),r=_(e,"indices","tensorScatterupdate","int32"),o=_(t,"updates","tensorScatterupdate");if(Cg(o,r,s.shape),s.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${o.dtype}.`);const i={tensor:s,indices:r,updates:o},a={};return B.runKernel(Pm,i,a)}const fI=V({tensorScatterUpdate_:_z});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(n,e=1,t=!0){const s=_(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},i={k:e,sorted:t},[a,l]=B.runKernel(Xm,o,i);return{values:a,indices:l}}const Aw=V({topk_:Oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n,e=0,t=1,s,r){if(ws(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Nw(e,t,s,!0,r),i=He(n,s);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const $g=V({truncatedNormal_:Fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n,e=0){const t=_(n,"x","unique","string_or_numeric");D(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,i]=B.runKernel(Qm,s,r);return{values:o,indices:i}}const Dw=V({unique_:Lz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(n,e,t){const s=_(n,"x","unsortedSegmentSum"),r=_(e,"segmentIds","unsortedSegmentSum","int32");D(Ji(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:t};return B.runKernel(Kd,o,i)}const Ig=V({unsortedSegmentSum_:Pz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n,e=0){const t=_(n,"x","unstack","string_or_numeric");D(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return B.runKernel(qd,s,r)}const _s=V({unstack_:zz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(n,e){return hg(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _w(n,e=!0,t,s){return B.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tg(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=He(n,"int32"),r=He([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const i=s.indexToLoc(t[o]),a=o*n.length;r.values.set(i,a)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Mz(n){const e=_(n,"condition","whereAsync","bool"),t=await e.data(),s=Tg(e.shape,t);return n!==e&&e.dispose(),s}const Ow=Mz;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Bz(n,e,t){const s=_(n,"tensor","boolMask"),r=_(e,"mask","boolMask","bool"),o=t??0,i=r.rank,a=s.shape;D(i>0,()=>"mask cannot be scalar"),bn(a.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let b=o;b<o+i;b++)l*=a[b];const c=a.slice(0,o).concat([l],a.slice(o+i)),h=j(s,c),p=j(r,[-1]),f=await Ow(p),g=yi(f,[1]),y=vu(h,g,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),g.dispose(),h.dispose(),p.dispose(),f.dispose(),y}const gI=Bz;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n,e,t){const s=_(n,"x","transpose");if(e==null&&(e=s.shape.map((i,a)=>a).reverse()),D(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(i=>{D(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?ne(()=>{let i=hl(s),a=nh(s);return i=B.runKernel(Xi,{x:i},o),a=B.runKernel(Xi,{x:a},o),t&&(a=vt(a)),po(i,a)}):B.runKernel(Xi,r,o)}const Je=V({transpose_:Vz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(n,e,t,s,r=!0){const o=_(n,"v","movingAverage"),i=_(e,"x","movingAverage"),a=_(t,"decay","movingAverage");h$(o,i),D(Qe(o.shape,i.shape),()=>"Shape mismatch in v and x");const l=Pe(1),c=$e(l,a);let h=G($e(i,o),c);if(r){D(s!=null,()=>"When using zeroDebias: true, step is required.");const p=_(s,"step","movingAverage");h=_e(h,$e(l,Wr(a,p)))}return pe(o,h)}const yI=V({movingAverage_:Wz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n,e,t){ws(t);const s=_(n,"indices","scatterND","int32"),r=_(e,"updates","scatterND");Cg(r,s,t);const o={indices:s,updates:r},i={shape:t};return B.runKernel(Lm,o,i)}const xI=V({scatterND_:Uz});function Gz(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(n,e,t,s=0){ws(t);const r=_(n,"sparseIndices","sparseToDense","int32"),o=_(e,"sparseValues","sparseToDense","string_or_numeric"),i=_(s,"defaultValue","sparseToDense",o.dtype);Gz(r,o,t,i);const a={sparseIndices:r,sparseValues:o,defaultValue:i},l={outputShape:t};return B.runKernel(Um,a,l)}const wI=V({sparseToDense_:Hz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n,e){const t=_(e,"indices","gatherND","int32"),r={params:_(n,"x","gatherND","string_or_numeric"),indices:t};return B.runKernel(ym,r)}const bI=V({gatherND_:jz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n,e){if(e==null)return n.shape.slice();if(Qe(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(n,e,t,s){const r=_(n,"x","dropout");if(D(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),D(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof ut?r.clone():r;const o=qz(r,t),i=1-e,a=_e(bu(pe(gi(o,0,1,"float32",s),i)),i);return G(r,a)}const Fw=V({dropout_:Kz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lw(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Eg(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(i)}return Rn(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Xz(n,e,t=1){const s=_(n,"predictions","inTopK"),r=_(e,"targets","inTopK");D(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),D(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),bn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];D(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const i=await s.data(),a=await r.data(),[l,c]=[i.length/o,o],h=un("bool",l);for(let p=0;p<l;p++){const f=p*c,g=i.subarray(f,f+c),y=[];for(let b=0;b<g.length;b++)y.push({value:g[b],index:b});y.sort((b,w)=>w.value-b.value),h[p]=0;for(let b=0;b<t;b++)if(y[b].index===a[p]){h[p]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),Xs(h,r.shape,"bool")}const vI=Xz;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(n,e,t,s,r,o="NHWC",i){let a=n;n.rank===3&&(a=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=j(e,[1,e.shape[0],e.shape[1],e.shape[2]])),D(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),D(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),D(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=o==="NHWC"?a.shape[3]:a.shape[1],h=o==="NHWC"?l.shape[3]:l.shape[1];D(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),D(h===t[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${t[3]}).`),Un("conv2dDerFilter",r,i);const p={x:a,dy:l},f={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:t};return B.runKernel(tm,p,f)}const Pw=V({conv2DBackpropFilter_:Yz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rg(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return G(n,ba(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Ag(n,e){let t=e;const s=Xt(n.shape,e.shape);return s.length>0&&(t=Ee(t,s)),j(t,n.shape)}function Dg(n,e,t,s){if(e==="linear")return n;if(e==="relu")return Sr(n);if(e==="elu")return xu(n);if(e==="relu6")return mg(n);if(e==="prelu")return ch(n,t);if(e==="leakyrelu")return sh(n,s);if(e==="sigmoid")return mr(n);throw new Error(`Unknown fused activation ${e}.`)}const _g=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(l=l||"linear",_g(B.state.gradientDepth,l)===!1){D(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let R=fo(n,e,t,s,r,o,i);return a!=null&&(R=pe(R,a)),Dg(R,l,c,h)}const p=_(n,"x","conv2d","float32"),f=_(e,"filter","conv2d","float32");let g=p,y=!1;p.rank===3&&(y=!0,g=j(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(g.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${g.rank}.`),D(f.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),Un("fused conv2d",s,i);const b=r==="NHWC"?g.shape[3]:g.shape[1];D(f.shape[2]===b,()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${f.shape[2]}.`),D(vn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const w=dn(g.shape,f.shape,t,o,s,i);let v;a!=null&&(v=_(a,"bias","fused conv2d"),[v]=_t(v,p),r==="NHWC"?Ge(w.outShape,v.shape):(D(v.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${v.shape.length}.`),D(v.shape.length===0||v.shape[0]===w.outChannels||v.shape[0]===1,()=>`Error in fused conv2d: bias shape (${v.shape}) is not compatible with the number of output channels (${w.outChannels})`)));let S;if(c!=null){const R=c.shape;if(D(R.length<=1||R.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${R.length}.`),R.length===1)D(R[0]===1||R[0]===w.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${R}) is not compatible with the number of output channels (${w.outChannels}).`);else if(R.length===3)try{Ge(R,w.outShape)}catch{const P=`Error in fused conv2d: PReLU activation weights (${R}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(P)}S=_(c,"prelu weights","fused conv2d")}const $=(R,L)=>{D(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[P,O,F,E]=L,W=Rg(R,F,l);D(si(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const X=tw(O.shape,W,P,t,s),ee=Pw(O,W,P.shape,t,s),Q=[X,ee];if(E!=null){const te=Ag(E,W);Q.push(te)}return Q},N={x:g,filter:f,bias:v,preluActivationWeights:S},T={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return a==null?Ur((L,P,O)=>{let F=B.runKernel(Ec,N,T);return O([P,L,F]),y&&(F=j(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:$}})(g,f):Ur((L,P,O,F)=>{let E=B.runKernel(Ec,N,T);return F([P,L,E,O]),y&&(E=j(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:$}})(g,f,v)}const SI=V({fusedConv2d_:Qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n,e,t,s,r,o=[1,1],i){let a=n;n.rank===3&&(a=j(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:a,dy:l},h={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:t};return B.runKernel(lm,c,h)}const kI=V({depthwiseConv2dNativeBackpropFilter_:Zz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(n,e,t,s,r,o=[1,1],i){let a=e,l=!1;e.rank===3&&(l=!0,a=j(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:a,filter:t},h={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n},p=B.runKernel(um,c,h);return l?j(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const NI=V({depthwiseConv2dNativeBackpropInput_:Jz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(_g(B.state.gradientDepth,l)===!1){let T=yu(n,e,t,s,r,o,i);return a!=null&&(T=pe(T,a)),Dg(T,l,c,h)}const p=_(n,"x","depthwiseConv2d","float32"),f=_(e,"filter","depthwiseConv2d","float32");let g=p,y=!1;p.rank===3&&(y=!0,g=j(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(g.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${g.rank}.`),D(f.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),D(g.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${g.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),o==null&&(o=[1,1]),D(vn(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),Un("fused depthwiseConv2d",s,i);const b=dn(g.shape,f.shape,t,o,s,i,!0);let w;a!=null&&(w=_(a,"bias","fused conv2d"),[w]=_t(w,p),Ge(b.outShape,w.shape));let v;c!=null&&(v=_(c,"prelu weights","fused depthwiseConv2d"));const S=(T,R)=>{D(si(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[L,P,O,F]=R,E=Rg(T,O,l),W=NI(P.shape,E,L,t,s,o,i),X=kI(P,E,L.shape,t,s,o,i);if(F!=null){const ee=Ag(w,E);return[W,X,ee]}return[W,X]},$={x:g,filter:f,bias:w,preluActivationWeights:v},N={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return a==null?Ur((R,L,P)=>{let O=B.runKernel(Rc,$,N);return P([L,R,O]),y&&(O=j(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:S}})(g,f):Ur((R,L,P,O)=>{let F=B.runKernel(Rc,$,N);return O([L,R,F,P]),y&&(F=j(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:S}})(g,f,w)}const tM=V({fusedDepthwiseConv2d_:eM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(_g(B.state.gradientDepth,o)===!1){let E=qe(n,e,t,s);return r!=null&&(E=pe(E,r)),Dg(E,o,i,a)}let l=_(n,"a","fused matMul"),c=_(e,"b","fused matMul");[l,c]=_t(l,c);const h=t?l.shape[l.rank-2]:l.shape[l.rank-1],p=s?c.shape[c.rank-1]:c.shape[c.rank-2],f=t?l.shape[l.rank-1]:l.shape[l.rank-2],g=s?c.shape[c.rank-2]:c.shape[c.rank-1],y=l.shape.slice(0,-2),b=c.shape.slice(0,-2),w=le(y),v=le(b);D(h===p,()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${s} must match.`);const $=Ge(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([f,g]),N=t?j(l,[w,h,f]):j(l,[w,f,h]),T=s?j(c,[v,g,p]):j(c,[v,p,g]);let R;r!=null&&(R=_(r,"bias","fused matMul"),[R]=_t(R,l),Ge($,R.shape));let L;i!=null&&(L=_(i,"prelu weights","fused matMul"));const P=(E,W)=>{const[X,ee,Q,te]=W,oe=Rg(j(E,Q.shape),Q,o);let U,Z;if(!t&&!s?(U=qe(oe,ee,!1,!0),Z=qe(X,oe,!0,!1)):!t&&s?(U=qe(oe,ee,!1,!1),Z=qe(oe,X,!0,!1)):t&&!s?(U=qe(ee,oe,!1,!0),Z=qe(X,oe,!1,!1)):(U=qe(ee,oe,!0,!0),Z=qe(oe,X,!0,!0)),r!=null){const J=Ag(te,oe);return[U,Z,J]}else return[U,Z]},O={a:N,b:T,bias:R,preluActivationWeights:L},F={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:a};return r==null?Ur((W,X,ee)=>{const Q=B.runKernel(Tc,O,F);return ee([W,X,Q]),{value:j(Q,$),gradFunc:P}})(N,T):Ur((W,X,ee,Q)=>{const te=B.runKernel(Tc,O,F);return Q([W,X,te,ee]),{value:j(te,$),gradFunc:P}})(N,T,R)}const z0=V({fusedMatMul_:nM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI=Object.freeze(Object.defineProperty({__proto__:null,conv2d:SI,depthwiseConv2d:tM,matMul:z0},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n){return Eg(n,.54,.46)}const rM=V({hammingWindow_:sM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(n){return Eg(n,.5,.5)}const $I=V({hannWindow_:oM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n,e,t,s=!1,r=0){let o=0;const i=[];for(;o+e<=n.size;)i.push(et(n,o,e)),o+=t;if(s)for(;o<n.size;){const a=o+e-n.size,l=Mt([et(n,o,e-a),xa([a],r)]);i.push(l),o+=t}return i.length===0?rl([],[0,e]):j(Mt(i),[i.length,e])}const II=V({frame_:iM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n,e,t,s,r=$I){s==null&&(s=Lw(e));const o=II(n,e,t),i=G(o,r(e));return mh(i,s)}const lM=V({stft_:aM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n,e,t,s,r="bilinear",o=0){const i=_(n,"image","cropAndResize"),a=_(e,"boxes","cropAndResize","float32"),l=_(t,"boxInd","cropAndResize","int32"),c=a.shape[0];D(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),D(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),D(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),D(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),D(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),D(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const h={image:i,boxes:a,boxInd:l},p={method:r,extrapolationValue:o,cropSize:s};return B.runKernel(om,h,p)}const cM=V({cropAndResize_:uM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n){const e=_(n,"image","flipLeftRight","float32");D(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return B.runKernel(gm,t,{})}const hM=V({flipLeftRight_:dM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n){const e=_(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];D(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),D(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Ts(e,r)}const fM=V({grayscaleToRGB_:pM});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n){const e=_(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];D(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),D(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,o=ve(e,"float32"),i=Rn([.2989,.587,.114]);let a;switch(e.rank){case 2:a=Wi("ij,j->i",o,i);break;case 3:a=Wi("ijk,k->ij",o,i);break;case 4:a=Wi("ijkl,l->ijk",o,i);break;case 5:a=Wi("ijklm,m->ijkl",o,i);break;case 6:a=Wi("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=En(a,-1),ve(a,r)}const gM=V({rgbToGrayscale_:mM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n,e,t=0,s=.5){const r=_(n,"image","rotateWithOffset","float32");D(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:e,fillValue:t,center:s};return B.runKernel(Zm,o,i)}const xM=V({rotateWithOffset_:yM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Su(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return t=Math.min(t,i),D(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),D(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),D(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),D(e.rank===1,()=>"scores must be a 1D tensor"),D(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),D(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppression","float32"),i=_(e,"scores","nonMaxSuppression","float32"),a=Su(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return B.runKernel($m,{boxes:o,scores:i},l)}const bM=V({nonMaxSuppression_:wM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(n,e,t){const s=SM(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function SM(n,e,t){return kM(n,e,t)}function kM(n,e,t){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const a=t(e,n[o]);a>0?s=o+1:(r=o,i=!a)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Og(n,e,t,s,r){return zw(n,e,t,s,r,0)}function Fg(n,e,t,s,r,o){return zw(n,e,t,s,r,0,!1,o,!0)}function Lg(n,e,t,s,r,o){return zw(n,e,t,s,r,o,!0)}function zw(n,e,t,s,r,o,i=!1,a=!1,l=!1){const c=[];for(let w=0;w<e.length;w++)e[w]>r&&c.push({score:e[w],boxIndex:w,suppressBeginIndex:0});c.sort(xN);const h=o>0?-.5/o:0,p=[],f=[];for(;p.length<t&&c.length>0;){const w=c.pop(),{score:v,boxIndex:S,suppressBeginIndex:$}=w;if(v<r)break;let N=!1;for(let T=p.length-1;T>=$;--T){const R=NM(n,S,p[T]);if(R>=s){N=!0;break}if(w.score=w.score*CM(s,h,R),w.score<=r)break}w.suppressBeginIndex=p.length,N||(w.score===v?(p.push(S),f.push(w.score)):w.score>r&&vM(c,w,xN))}const g=p.length,y=t-g;a&&y>0&&(p.push(...new Array(y).fill(0)),f.push(...new Array(y).fill(0)));const b={selectedIndices:p};return i&&(b.selectedScores=f),l&&(b.validOutputs=g),b}function NM(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),h=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),f=Math.max(r[1],r[3]),g=(a-o)*(l-i),y=(p-c)*(f-h);if(g<=0||y<=0)return 0;const b=Math.max(o,c),w=Math.max(i,h),v=Math.min(a,p),S=Math.min(l,f),$=Math.max(v-b,0)*Math.max(S-w,0);return $/(g+y-$)}function CM(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function xN(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function $M(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppressionAsync"),i=_(e,"scores","nonMaxSuppressionAsync"),a=Su(o,i,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([o.data(),i.data()]),c=l[0],h=l[1],{selectedIndices:p}=Og(c,h,t,s,r);return o!==n&&o.dispose(),i!==e&&i.dispose(),Rn(p,"int32")}const IM=$M;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=_(n,"boxes","nonMaxSuppression"),a=_(e,"scores","nonMaxSuppression"),l=Su(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const c={boxes:i,scores:a},h={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},p=B.runKernel(Tm,c,h);return{selectedIndices:p[0],selectedScores:p[1]}}const EM=V({nonMaxSuppressionWithScore_:TM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function RM(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=_(n,"boxes","nonMaxSuppressionAsync"),a=_(e,"scores","nonMaxSuppressionAsync"),l=Su(i,a,t,s,r,o);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,o=l.softNmsSigma;const c=await Promise.all([i.data(),a.data()]),h=c[0],p=c[1],{selectedIndices:f,selectedScores:g}=Lg(h,p,t,s,r,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Rn(f,"int32"),selectedScores:Rn(g)}}const AM=RM;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=_(n,"boxes","nonMaxSuppression"),a=_(e,"scores","nonMaxSuppression"),l=Su(i,a,t,s,r,null),c=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,f={boxes:i,scores:a},g={maxOutputSize:c,iouThreshold:h,scoreThreshold:p,padToMaxOutputSize:o},y=B.runKernel(Im,f,g);return{selectedIndices:y[0],validOutputs:y[1]}}const _M=V({nonMaxSuppressionPadded_:DM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OM(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=_(n,"boxes","nonMaxSuppressionAsync"),a=_(e,"scores","nonMaxSuppressionAsync"),l=Su(i,a,t,s,r,null),c=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[f,g]=await Promise.all([i.data(),a.data()]),{selectedIndices:y,validOutputs:b}=Fg(f,g,c,h,p,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:Rn(y,"int32"),validOutputs:Pe(b,"int32")}}const FM=OM;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n,e,t=!1,s=!1){const r=_(n,"images","resizeBilinear");D(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),D(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),D(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},c=B.runKernel(zd,a,l);return i?j(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const TI=V({resizeBilinear_:LM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n,e,t=!1,s=!1){const r=_(n,"images","resizeNearestNeighbor");D(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),D(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),D(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=j(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:o},l={alignCorners:t,halfPixelCenters:s,size:e},c=B.runKernel(Pd,a,l);return i?j(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const EI=V({resizeNearestNeighbor_:PM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(n,e="binary",t=!1,s=.5){const r=_(n,"image","threshold"),o=.2989,i=.587,a=.114,l=r.shape[0]*r.shape[1];let c=G(Rn([s]),255),h,p,f,g;if(D(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),D(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),D(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),D(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[h,p,f]=Yn(r,[1,1,1],-1);const w=G(h,o),v=G(p,i),S=G(f,a);g=pe(pe(w,v),S)}else g=n;if(e==="otsu"){const w=X1(ve(gg(g),"int32"),Xs([]),256);c=MM(w,l)}const y=t?mi(g,c):ss(g,c);return ve(G(y,255),"int32")}function MM(n,e){let t=Rn([-1]),s=Rn([0]),r=Rn([0]),o,i,a,l,c,h;for(let p=0;p<n.size-1;p++){o=et(n,0,p+1),i=et(n,p+1),c=_e(Ee(o),e),h=_e(Ee(i),e);const f=Ee(G(o,aa(0,o.size)));a=_e(f,Ee(o));const g=xa(i.shape,o.size),y=pe(aa(0,i.size),g),b=G(i,y);l=_e(Ee(b),Ee(i));const w=$e(a,l),v=$e(a,l),S=G(c,h);r=G(G(S,w),v);const $=ss(r,s);s=xn($,r,s),t=xn($,Rn([p]),t)}return t}const BM=V({threshold_:zM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n,e,t="nearest",s="constant",r=0,o){const i=_(n,"image","transform","float32"),a=_(e,"transforms","transform","float32");D(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),D(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const l={image:i,transforms:a},c={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return B.runKernel(Ym,l,c)}const WM=V({transform_:VM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n,e,t){const s=_(n,"a","bandPart");D(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);let a,l;typeof e=="number"?(D(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),D(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),a=_(e<0?o:e,"numLower","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=xn(cl(e,0),o,oi(e,o))),typeof t=="number"?(D(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),D(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),l=_(t<0?i:t,"numUpper","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=xn(cl(t,0),i,oi(t,i)));const c=j(aa(0,o,1,"int32"),[-1,1]),h=aa(0,i,1,"int32"),p=$e(c,h),f=yr(mi(p,a),vo(p,vt(l))),g=qt([o,i],s.dtype);return j(ts(_s(j(s,[-1,o,i])).map(y=>xn(f,y,g))),r)}const GM=V({bandPart_:UM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n){let e;if(Array.isArray(n)){e=!1,D(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)D(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=Yn(n,n.shape[0],0).map(r=>yi(r,[0]));D(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(B.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const a=G(Ee(G(t[i],o)),t[i]);o=$e(o,a)}return _e(o,wu(o,"euclidean"))}));return e?ts(t,0):t}const jM=V({gramSchmidt_:HM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n,e=!1){if(D(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return wN(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=_s(j(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(l=>{const[c,h]=wN(l,e);r.push(c),o.push(h)});const i=j(ts(r,0),n.shape),a=j(ts(o,0),n.shape);return[i,a]}}function wN(n,e=!1){return B.tidy(()=>{D(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=lg(t),o=Lr(n);const i=rl([[1]],[1,1]);let a=Lr(i);const l=t>=s?s:t;for(let c=0;c<l;++c){const h=o,p=a,f=r;[a,o,r]=B.tidy(()=>{const g=et(o,[c,c],[t-c,1]),y=wu(g),b=et(o,[c,c],[1,1]),w=xn(ss(b,0),rl([[-1]]),rl([[1]])),v=$e(b,G(w,y)),S=_e(g,v);S.shape[0]===1?a=Lr(i):a=Mt([i,et(S,[1,0],[S.shape[0]-1,S.shape[1]])],0);const $=vt(_e(qe(w,v),y)),N=et(o,[c,0],[t-c,s]),T=G($,a),R=Je(a);if(c===0)o=$e(N,qe(T,qe(R,N)));else{const O=$e(N,qe(T,qe(R,N)));o=Mt([et(o,[0,0],[c,s]),O],0)}const L=Je(T),P=et(r,[0,c],[t,r.shape[1]-c]);if(c===0)r=$e(P,qe(qe(P,a),L));else{const O=$e(P,qe(qe(P,a),L));r=Mt([et(r,[0,0],[t,c]),O],1)}return[a,o,r]}),Ke([h,p,f])}return!e&&t>s&&(r=et(r,[0,0],[t,s]),o=et(o,[0,0],[s,s])),[r,o]})}const KM=V({qr_:qM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Bn||(Bn={}));function XM(n,e,t=Bn.SUM_BY_NONZERO_WEIGHTS){const s=_(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=_(e,"weights","computeWeightedLoss"));const o=r==null?s:G(s,r);if(t===Bn.NONE)return o;if(t===Bn.SUM)return Ee(o);if(t===Bn.MEAN){if(r==null)return At(o);{const i=s.size/r.size,a=_e(Ee(o),Ee(r));return i>1?_e(a,Pe(i)):a}}if(t===Bn.SUM_BY_NONZERO_WEIGHTS){if(r==null)return _e(Ee(o),Pe(s.size));{const i=G(r,Xn(s.shape)),a=ve(Ee(ia(i,Pe(0))),"float32");return _e(Ee(o),a)}}throw Error(`Unknown reduction: ${t}`)}const ko=V({computeWeightedLoss_:XM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n,e,t,s=Bn.SUM_BY_NONZERO_WEIGHTS){const r=_(n,"labels","absoluteDifference"),o=_(e,"predictions","absoluteDifference");let i=null;t!=null&&(i=_(t,"weights","absoluteDifference")),bn(r.shape,o.shape,"Error in absoluteDifference: ");const a=jt($e(r,o));return ko(a,i,s)}const QM=V({absoluteDifference_:YM});function ZM(n,e,t,s,r=Bn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","cosineDistance"),i=_(e,"predictions","cosineDistance");let a=null;s!=null&&(a=_(s,"weights","cosineDistance")),bn(o.shape,i.shape,"Error in cosineDistance: ");const l=Pe(1),c=$e(l,Ee(G(o,i),t,!0));return ko(c,a,r)}const JM=V({cosineDistance_:ZM});function eB(n,e,t,s=Bn.SUM_BY_NONZERO_WEIGHTS){let r=_(n,"labels","hingeLoss");const o=_(e,"predictions","hingeLoss");let i=null;t!=null&&(i=_(t,"weights","hingeLoss")),bn(r.shape,o.shape,"Error in hingeLoss: ");const a=Pe(1);r=$e(G(Pe(2),r),a);const l=Sr($e(a,G(r,o)));return ko(l,i,s)}const tB=V({hingeLoss_:eB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n,e,t,s=1,r=Bn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","huberLoss"),i=_(e,"predictions","huberLoss");let a=null;t!=null&&(a=_(t,"weights","huberLoss")),bn(o.shape,i.shape,"Error in huberLoss: ");const l=Pe(s),c=jt($e(i,o)),h=oi(c,l),p=$e(c,h),f=pe(G(Pe(.5),ft(h)),G(l,p));return ko(f,a,r)}const sB=V({huberLoss_:nB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n,e,t,s=1e-7,r=Bn.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","logLoss"),i=_(e,"predictions","logLoss");let a=null;t!=null&&(a=_(t,"weights","logLoss")),bn(o.shape,i.shape,"Error in logLoss: ");const l=Pe(1),c=Pe(s),h=vt(G(o,ms(pe(i,c)))),p=G($e(l,o),ms(pe($e(l,i),c))),f=$e(h,p);return ko(f,a,r)}const oB=V({logLoss_:rB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n,e,t,s=Bn.SUM_BY_NONZERO_WEIGHTS){const r=_(n,"labels","meanSquaredError"),o=_(e,"predictions","meanSquaredError");let i=null;t!=null&&(i=_(t,"weights","meanSquaredError")),bn(r.shape,o.shape,"Error in meanSquaredError: ");const a=Ng(r,o);return ko(a,i,s)}const aB=V({meanSquaredError_:iB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n,e){const t=_(n,"labels","sigmoidCrossEntropyWithLogits"),s=_(e,"logits","sigmoidCrossEntropyWithLogits");bn(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Sr(s),o=G(s,t),i=rh(es(vt(jt(s))));return pe($e(r,o),i)}function uB(n,e,t,s=0,r=Bn.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"multiClassLabels","sigmoidCrossEntropy");const i=_(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=_(t,"weights","sigmoidCrossEntropy")),bn(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=Pe(s),h=Pe(1),p=Pe(.5);o=pe(G(o,$e(h,c)),G(p,c))}const l=lB(o,i);return ko(l,a,r)}const cB=V({sigmoidCrossEntropy_:uB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Ur((r,o,i)=>{const l=oh(o,[t],!0),c=$e(ve(o,"float32"),l);i([r,c]);const h=vt(G(c,r));return{value:Ee(h,[t]),gradFunc:(g,y)=>{const[b,w]=y,v=Bt(g.shape,[t]);return[G(j(g,v),$e(ve(b,"float32"),es(w))),G(j(g,v),$e(es(w),ve(b,"float32")))]}}})(n,e)}function hB(n,e,t,s=0,r=Bn.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"onehotLabels","softmaxCrossEntropy");const i=_(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=_(t,"weights","softmaxCrossEntropy")),bn(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const c=Pe(s),h=Pe(1),p=Pe(o.shape[1]);o=pe(G(o,$e(h,c)),_e(c,p))}const l=dB(o,i);return ko(l,a,r)}const pB=V({softmaxCrossEntropy_:hB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n,e,t,s){const r=_(n,"indices","sparseFillEmptyRows","int32"),o=_(e,"values","sparseFillEmptyRows"),i=_(t,"denseShape","sparseFillEmptyRows","int32"),a=_(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:r,values:o,denseShape:i,defaultValue:a},c=B.runKernel(Mm,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const mB=V({sparseFillEmptyRows_:fB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n,e,t){const s=_(n,"inputIndices","sparseReshape","int32"),r=_(e,"inputShape","sparseReshape","int32"),o=_(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:s,inputShape:r,newShape:o},a=B.runKernel(Bm,i);return{outputIndices:a[0],outputShape:a[1]}}const yB=V({sparseReshape_:gB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n,e,t){const s=_(n,"data","sparseSegmentMean"),r=_(e,"indices","sparseSegmentMean","int32"),o=_(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return B.runKernel(Vm,i)}const wB=V({sparseSegmentMean_:xB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n,e,t){const s=_(n,"data","sparseSegmentSum"),r=_(e,"indices","sparseSegmentSum","int32"),o=_(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:s,indices:r,segmentIds:o};return B.runKernel(Wm,i)}const vB=V({sparseSegmentSum_:bB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(n,e,t,s,r,o,i,a){const l=_(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=_(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const h={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:i,preserveShortSequences:a},p={data:l,dataSplits:c},f=B.runKernel(jm,p,h);return{nGrams:f[0],nGramsSplits:f[1]}}const kB=V({stringNGrams_:SB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n,e,t=!0){const s=_(n,"input","stringSplit","string"),r=_(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},i={input:s,delimiter:r},a=B.runKernel(qm,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const CB=V({stringSplit_:NB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n,e){const t=_(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return B.runKernel(Km,r,s)}const IB=V({stringToHashBucketFast_:$B});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n,e,t,s=!0){const r=_(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:s};return B.runKernel(jd,{x:r},o)}const EB=V({staticRegexReplace_:TB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI={fft:fh,ifft:fl,rfft:mh,irfft:kg},AI={hammingWindow:rM,hannWindow:$I,frame:II,stft:lM},pr={flipLeftRight:hM,grayscaleToRGB:fM,resizeNearestNeighbor:EI,resizeBilinear:TI,rgbToGrayscale:gM,rotateWithOffset:xM,cropAndResize:cM,nonMaxSuppression:bM,nonMaxSuppressionAsync:IM,nonMaxSuppressionWithScore:EM,nonMaxSuppressionWithScoreAsync:AM,nonMaxSuppressionPadded:_M,nonMaxSuppressionPaddedAsync:FM,threshold:BM,transform:WM},Mw={bandPart:GM,gramSchmidt:jM,qr:KM},DI={absoluteDifference:QM,computeWeightedLoss:ko,cosineDistance:JM,hingeLoss:tB,huberLoss:sB,logLoss:oB,meanSquaredError:aB,sigmoidCrossEntropy:cB,softmaxCrossEntropy:pB},_I={sparseFillEmptyRows:mB,sparseReshape:yB,sparseSegmentMean:wB,sparseSegmentSum:vB},OI={stringNGrams:kB,stringSplit:CB,stringToHashBucketFast:IB,staticRegexReplace:EB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RB=new Map,M0=new Map;class va{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Is{constructor(){this.classNameMap={}}static getMap(){return Is.instance==null&&(Is.instance=new Is),Is.instance}static register(e){Is.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function fe(n,e,t){D(n.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),D(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return Is.register(n),RB.set(r,n),M0.set(n,r),n}function AB(n){return M0.has(n)?M0.get(n):n.className}const DB=Object.freeze(Object.defineProperty({__proto__:null,Serializable:va,SerializationMap:Is,getRegisteredName:AB,registerClass:fe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class No extends va{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const i=s.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return Ke(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return B$(e,t)}dispose(){this.iterations_!=null&&Ke(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Pe(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(No,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bw extends No{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=B.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:ne(()=>tt(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:ne(()=>tt(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;ne(()=>{const h=pe(G(l,this.rho),G(ft(a),1-this.rho)),p=G(_e(cn(pe(c,this.epsilon)),cn(pe(l,this.epsilon))),a),f=pe(G(c,this.rho),G(ft(p),1-this.rho));l.assign(h),c.assign(f);const g=pe(G(p,-this.learningRate),o);o.assign(g)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ke(this.accumulatedGrads.map(e=>e.variable)),Ke(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vw extends No{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=B.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:ne(()=>xa(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const a=this.accumulatedGrads[r].variable;ne(()=>{const l=pe(a,ft(i));a.assign(l);const c=pe(G(_e(i,cn(pe(l,B.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ke(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ww extends No{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ne(()=>{this.accBeta1=Pe(t).variable(),this.accBeta2=Pe(s).variable()}),r==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ne(()=>{const s=$e(1,this.accBeta1),r=$e(1,this.accBeta2);t.forEach((o,i)=>{const a=B.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:ne(()=>tt(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:ne(()=>tt(a).variable(l))});const c=Array.isArray(e)?e[i].tensor:e[o];if(c==null)return;const h=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,f=pe(G(h,this.beta1),G(c,1-this.beta1)),g=pe(G(p,this.beta2),G(ft(c),1-this.beta2)),y=_e(f,s),b=_e(g,r);h.assign(f),p.assign(g);const w=pe(G(_e(y,pe(cn(b),this.epsilon)),-this.learningRate),a);a.assign(w)}),this.accBeta1.assign(G(this.accBeta1,this.beta1)),this.accBeta2.assign(G(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ke(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ke(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ne(()=>{this.accBeta1.assign(Wr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Wr(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uw extends No{static get className(){return"Adamax"}constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ne(()=>{this.iteration=Pe(0).variable(),this.accBeta1=Pe(t).variable()}),r==null&&(this.epsilon=B.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ne(()=>{const s=$e(1,this.accBeta1),r=_e(-this.learningRate,pe(G(this.iteration,this.decay),1));t.forEach((o,i)=>{const a=B.registeredVariables[o],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:tt(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:tt(a).variable(l)});const c=Array.isArray(e)?e[i].tensor:e[o];if(c==null)return;const h=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,f=pe(G(h,this.beta1),G(c,1-this.beta1)),g=G(p,this.beta2),y=jt(c),b=jr(g,y);h.assign(f),p.assign(b);const w=pe(G(_e(r,s),_e(f,pe(b,this.epsilon))),a);a.assign(w)}),this.iteration.assign(pe(this.iteration,1)),this.accBeta1.assign(G(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ke(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ke(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pg extends No{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=B.registeredVariables[s];ne(()=>{const a=pe(G(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Qt(Pe(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gw extends Pg{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Pe(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=B.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:ne(()=>tt(o).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&ne(()=>{let l;const c=pe(G(this.m,i),a);this.useNesterov?l=pe(G(this.c,pe(a,G(c,this.m))),o):l=pe(G(this.c,c),o),i.assign(c),o.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ke(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hw extends No{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=B.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=B.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:ne(()=>tt(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:ne(()=>tt(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:ne(()=>tt(o).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;ne(()=>{const h=pe(G(l,this.decay),G(ft(a),1-this.decay));if(this.centered){const p=this.accumulatedMeanGrads[r].variable,f=pe(G(p,this.decay),G(a,1-this.decay)),g=_e(G(a,this.learningRate),cn($e(h,pe(ft(f),this.epsilon)))),y=pe(G(c,this.momentum),g);l.assign(h),p.assign(f),c.assign(y);const b=$e(o,y);o.assign(b)}else{const p=pe(G(l,this.decay),G(ft(a),1-this.decay)),f=pe(G(c,this.momentum),_e(G(a,this.learningRate),cn(pe(p,this.epsilon))));l.assign(p),c.assign(f);const g=$e(o,f);o.assign(g)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ke(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ke(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ke(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _B=[Bw,Vw,Ww,Uw,Gw,Hw,Pg];function OB(){for(const n of _B)fe(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FB="model",LB=".json",PB=".weights.bin";function bN(n){return new Promise(e=>setTimeout(e)).then(n)}class la{constructor(e){if(!se().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(la.URL_SCHEME)&&(e=e.slice(la.URL_SCHEME.length)),(e==null||e.length===0)&&(e=FB),this.modelJsonFileName=e+LB,this.weightDataFileName=e+PB}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=vr.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=v$(e,r),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,await bN(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await bN(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Qd(e)}}}}la.URL_SCHEME="downloads://";class zB{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const o=JSON.parse(r.target.result),i=o.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const l=O1(o,c=>this.loadWeights(c));e(l)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const i of e)t.push(...i.weights),s.push(...i.paths);const r=this.checkManifestAndWeightFiles(e),o=s.map(i=>this.loadWeightsFile(i,r[i]));return Promise.all(o).then(i=>[t,i])}loadWeightsFile(e,t){return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;s(a)},o.onerror=i=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>uN(o.name)),r={};for(const o of e)o.paths.forEach(i=>{const a=uN(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[i]=this.weightsFiles[s.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const MB=n=>se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(la.URL_SCHEME)?BB(n.slice(la.URL_SCHEME.length)):null;Rt.registerSaveRouter(MB);function BB(n="model"){return new la(n)}function VB(n){return new zB(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,e,t,s){i(n),t=t??0,s=s??1,a(t,s);let r=0;const o=l=>(l.then(c=>{const h=t+ ++r/n.length*(s-t);return e(h),c}),l);function i(l){D(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){D(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),D(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),D(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FI(n,e){e==null&&(e={});const t=e.fetchFunc==null?se().platform.fetch:e.fetchFunc,s=n.map(p=>t(p,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await vN(s,e.onProgress,0,.5)).map(p=>p.arrayBuffer());return e.onProgress==null?await Promise.all(a):await vN(a,e.onProgress,.5,1)}function WB(n,e){var t;const s=e.fetchFunc==null?se().platform.fetch:e.fetchFunc;let r=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;r<n.length;){o||(o=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:c}=await o.read();if(l){r++,o=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,r/n.length);continue}i.enqueue(c);return}i.close()}})}async function UB(n,e="",t,s){return LI(i=>FI(i,{requestInit:s}))(n,e,t)}function LI(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},i=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((g,y)=>{let b=0;g.weights.forEach(w=>{const v="quantization"in w?w.quantization.dtype:w.dtype,S=ea[v]*le(w.shape),$=()=>{r[y]=!0,o[y]==null&&(o[y]=[]),o[y].push({manifestEntry:w,groupOffset:b,sizeBytes:S})};s!=null?s.forEach((N,T)=>{N===w.name&&($(),i[T]=!0)}):$(),a.push(w.name),b+=S})}),!i.every(g=>g)){const g=s.filter((y,b)=>!i[b]);throw new Error(`Could not find weights in manifest with names: ${g.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((g,y,b)=>(y&&g.push(b),g),[]),c=[];l.forEach(g=>{e[g].paths.forEach(y=>{const b=t+(t.endsWith("/")?"":"/")+y;c.push(b)})});const h=await n(c),p={};let f=0;return l.forEach(g=>{const y=e[g].paths.length,b=new vr(h.slice(f,f+y));o[g].forEach(v=>{const S=b.slice(v.groupOffset,v.groupOffset+v.sizeBytes),$=y$(S,[v.manifestEntry]);for(const N in $)p[N]=$[N]}),f+=y}),p}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB="application/octet-stream",HB="application/json";class jw{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(D(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=se().platform.fetch,D(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&D(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=v$(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:HB}),"model.json"),e.weightData!=null){const i=vr.join(e.weightData);t.body.append("model.weights.bin",new Blob([i],{type:GB}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Qd(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return O1(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=Sf(e.weightsManifest),r=()=>WB(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=jB(t),o=this.weightPathPrefix||s,i=[],a=[];for(const l of e)for(const c of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(c)):i.push(o+c+r);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),s=Sf(e),r=await FI(t,this.loadOptions);return[s,r]}}jw.URL_SCHEME_REGEX=/^https?:\/\//;function jB(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function B0(n){return n.match(jw.URL_SCHEME_REGEX)!=null}const PI=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>B0(s)):t=B0(n),t)return qw(n,e)}return null};Rt.registerSaveRouter(PI);Rt.registerLoadRouter(PI);function qw(n,e){return new jw(n,e)}function qB(n,e){return qw(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a0{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class zI{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class KB{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function XB(n,e,t,s){const r=arguments;return new KB(Nf(...r))}function Nf(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new a0(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new a0({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new a0({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function YB(n){return new zI(n)}function QB(n){return new zI(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kw=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:vr,browserFiles:VB,browserHTTPRequest:qB,concatenateArrayBuffers:b$,copyModel:TF,decodeWeights:y$,decodeWeightsStream:w$,encodeWeights:D0,fromMemory:XB,fromMemorySync:Nf,getLoadHandlers:fF,getModelArtifactsForJSON:O1,getModelArtifactsForJSONSync:_1,getModelArtifactsInfoForJSON:Qd,getSaveHandlers:S$,getWeightSpecs:Sf,http:qw,isHTTPScheme:B0,listModels:$F,loadWeights:UB,moveModel:EF,registerLoadRouter:pF,registerSaveRouter:hF,removeModel:IF,weightsLoaderFactory:LI,withSaveHandler:YB,withSaveHandlerSync:QB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n,e,t){const s=_(n,"labels","confusionMatrix"),r=_(e,"predictions","confusionMatrix");D(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),D(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),D(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),D(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),D(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=dl(ve(s,"int32"),t),i=dl(ve(r,"int32"),t),a=Je(o),l=qe(a,i);return ve(l,"int32")}const JB=V({confusionMatrix_:ZB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:JB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Li,SN=!1;function MI(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,i=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Dc(bf,B.backendName)!=null){const y={pixels:n},b={numChannels:e};return B.runKernel(bf,y,b)}const[c,h]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let p;if(i)p=n.getContext("2d").getImageData(0,0,c,h).data;else if(s||t)p=n.data;else if(o||r||a){if(Li==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Li=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Li=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Li.canvas.width=c,Li.canvas.height=h,Li.drawImage(n,0,0,c,h),p=Li.getImageData(0,0,c,h).data}let f;if(e===4)f=new Int32Array(p);else{const y=c*h;f=new Int32Array(y*e);for(let b=0;b<y;b++)for(let w=0;w<e;++w)f[b*e+w]=p[b*4+w]}return Ew(f,[h,c,e],"int32")}function tV(n){return n!=null&&n.data instanceof Uint8Array}function nV(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function sV(n){return n!=null&&n.width!==0&&n.height!==0}function rV(n){return nV()&&!(n instanceof ImageBitmap)&&sV(n)&&!tV(n)}async function oV(n,e=3){let t=null;if(se().getBool("WRAP_TO_IMAGEBITMAP")&&rV(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?t=s:t=n}else t=n;return MI(t,e)}function BI(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function iV(n){const e=(n==null?void 0:n.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function aV(n,e){let t=_(n,"img","toPixels");if(!(n instanceof ut)){const c=t;t=ve(c,"int32"),c.dispose()}BI(t);const[s,r]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],i=await t.data(),a=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){const h=[0,0,0,255];for(let f=0;f<o;f++){const g=i[c*o+f];if(t.dtype==="float32"){if(g<0||g>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${g}.`)}else if(t.dtype==="int32"&&(g<0||g>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${g}.`);o===1?(h[0]=g*a,h[1]=g*a,h[2]=g*a):h[f]=g*a}const p=c*4;l[p+0]=Math.round(h[0]),l[p+1]=Math.round(h[1]),l[p+2]=Math.round(h[2]),l[p+3]=Math.round(h[3])}if(e!=null){SN||Dc(dm,B.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),SN=!0),e.width=r,e.height=s;const c=e.getContext("2d"),h=new ImageData(l,r,s);c.putImageData(h,0,0)}return t!==n&&t.dispose(),l}function lV(n,e,t){let s=_(n,"img","draw");if(!(n instanceof ut)){const i=s;s=ve(i,"int32"),i.dispose()}BI(s),iV(t==null?void 0:t.imageOptions);const r={image:s},o={canvas:e,options:t};B.runKernel(dm,r,o)}const uV=V({fromPixels_:MI}),cV=Object.freeze(Object.defineProperty({__proto__:null,draw:lV,fromPixels:uV,fromPixelsAsync:oV,toPixels:aV},Symbol.toStringTag,{value:"Module"}));function zg(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(le(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let i=1;for(let p=0;p<r.length-1;++p)i*=r[p];const a=n.shape,l=r.slice();l.pop();let c=1;for(let p=o;p<t;++p)c*=a[p],l.push(a[p]);const h=[...Le(n.shape).map(p=>p/c),1].slice(0,o);return[l,i,c,h]}const dV=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:zg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V0=-2,hV=-1;function Xw(n,e,t){const s=n.shape.length;D(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),D(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)D(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function pV(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Yw(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function VI(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function WI(n,e,t){return t<=n?t:t-(e-1)}function UI(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function fV(n,e,t,s,r,o,i,a,l){const c=n.length;let h=new Array(c),p=new Array(c),f=new Array(c);if(e.length&&t>0){const g=e[0],y=t+1;h=GI(i,g,y,s,n),p=HI(a,g,y,r,n),f=VI(o,g,y,n)}else for(let g=0;g<c;g++)h[g]=qI(i,s,o,n,g,l),p[g]=KI(a,r,o,n,g,l),f[g]=jI(o,g,l);return{begin:h,end:p,strides:f}}function GI(n,e,t,s,r){const o=[...r],i=UI(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const l=WI(e,t,a);let c=s[l];n&1<<l&&(c=0),o[a]=c}return o}function HI(n,e,t,s,r){const o=[...r],i=UI(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const l=WI(e,t,a);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),o[a]=c}for(let a=0;a<o.length;a++){const l=r[a];o[a]<0&&(o[a]+=l),o[a]=Jo(0,o[a],r[a])}return o}function jI(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function qI(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=Jo(0,i,l-1),i}function KI(n,e,t,s,r,o){let i=e[r];const a=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),a>0?i=Jo(0,i,l):i=Jo(-1,i,l-1),i}function Qw(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function Zw(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Mg(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(i=>{D(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((i,a)=>i>=0?i:(D(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,o]}function Jw(n,e,t,s,r,o,i,a,l){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const p={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let $=0;$<p.dims;$++)h&&1<<$&a&&p.numAddAxisAfterEllipsis++,1<<$&i&&(h=!0);h||(p.ellipsisMask|=1<<p.dims,p.dims++);const f={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};mV(p,f);let g=!0,y=!0,b=!0;const w=[],v=[];for(let $=0;$<n.length;++$){if(f.strides[$]===0)throw Error(`strides[${$}] must be non-zero`);const N=!!(f.shrinkAxisMask&1<<$),T=n[$];if(T===-1){w.push(N?1:-1);continue}const R=[f.beginMask&1<<$,f.endMask&1<<$],L=[f.strides[$]>0?0:-1,f.strides[$]>0?T:T-1];if(N&&f.strides[$]<=0)throw Error("only stride 1 allowed on non-range indexing.");b=b&&f.strides[$]===1;const P=!!(f.beginMask&1<<$&&f.endMask&1<<$);if(f.beginValid&&f.endValid){if(N){const W=f.begin[$]<0?T+f.begin[$]:f.begin[$];if(f.begin[$]=W,f.end[$]=f.begin[$]+1,W<0||W>=T)throw Error(`slice index ${f.begin[$]} of dimension ${$} out of bounds.`)}else f.begin[$]=kN(f.begin[$],0,f.strides[$],T,R,L),f.end[$]=kN(f.end[$],1,f.strides[$],T,R,L);const E=f.strides[$]===1&&f.begin[$]===0&&f.end[$]===T;g=g&&E,y=y&&($===0&&f.strides[$]===1||E)}else g=g&&f.strides[$]===1&&P,y=y&&($===0&&f.strides[$]===1||P);let O,F=!1;if(f.beginValid&&f.endValid?(O=f.end[$]-f.begin[$],F=!0):N?(O=1,F=!0):P&&T>=0&&(f.strides[$]<0?O=-T:O=T,F=!0),F){let E;O===0||O<0!=f.strides[$]<0?E=0:E=Math.trunc(O/f.strides[$])+(O%f.strides[$]!==0?1:0),w.push(E)}else w.push(-1)}for(let $=0;$<f.finalShapeGatherIndices.length;++$){const N=f.finalShapeGatherIndices[$];N>=0?v.push(w[N]):N===V0&&v.push(1)}return{finalShapeSparse:v.filter(($,N)=>f.finalShapeGatherIndices[N]!==V0),finalShape:v,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:f.begin,end:f.end,strides:f.strides}}function mV(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(V0),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(hV),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function kN(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const i=n<0?s+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const XI=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Xw,computeFlatOffset:Zw,computeOutShape:Yw,getNormalizedAxes:fV,isSliceContinous:Qw,maskToAxes:pV,parseSliceParams:Mg,sliceInfo:Jw,startForAxis:qI,startIndicesWithElidedDims:GI,stopForAxis:KI,stopIndicesWithElidedDims:HI,stridesForAxis:jI,stridesWithElidedDims:VI},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const gV="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YI{static sgd(e){return new Pg(e)}static momentum(e,t,s=!1){return new Gw(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new Hw(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new Ww(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new Bw(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new Uw(e,t,s,r,o)}static adagrad(e,t=.1){return new Vw(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi=YI;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function eb(){return new Promise(n=>yV(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(n,e){const t=n[0].length;n.forEach((r,o)=>{D(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),D(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<t;i++)D(i===e||r[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Pr(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var hr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(hr||(hr={}));function QI(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],i=s[s.length-t.length+r],a=s[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${a}`)}else s[i]=o}return s}function ZI(n){const e={FIRST_DIM_SIZE:hr.FIRST_DIM_SIZE,VALUE_ROWIDS:hr.VALUE_ROWIDS,ROW_LENGTHS:hr.ROW_LENGTHS,ROW_SPLITS:hr.ROW_SPLITS,ROW_LIMITS:hr.ROW_LIMITS,ROW_STARTS:hr.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function JI(n){return n.length===0?0:n[0]===hr.FIRST_DIM_SIZE?n.length-1:n.length}function eT(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],i=e[r+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nb=30;function Bg(n){return n<=nb?n:yf(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gh(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/e[i],e[i]]);r=r.concat(n.slice(o+1))}return r}function yh(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function xh(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function rb(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function ob(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vg=1.7580993408473768,Wg=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ib=.3275911,ab=.254829592,lb=-.284496736,ub=1.421413741,cb=-1.453152027,db=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function tT(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function nT(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function sT(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function hb(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function rT(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function oT(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function iT(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l0="->",xV=/->/g,NN=",",CN="...";function pb(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(xV,"").length)/l0.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${l0}").`);const[s,r]=n.split(l0);D(s.indexOf(CN)===-1,()=>`The ellipsis notation ("${CN}") is not supported yet.`);const o=s.split(NN),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let f=0;f<r.length;++f){const g=r[f];if(!o.some(y=>y.indexOf(g)!==-1))throw new Error(`Output subscripts contain the label ${g} not present in the input subscripts.`);a.indexOf(g)===-1&&a.push(g)}for(let f=0;f<s.length;++f){const g=s[f];a.indexOf(g)===-1&&g!==NN&&a.push(g)}const l=new Array(o.length);for(let f=0;f<i;++f){if(new Set(o[f].split("")).size!==o[f].length)throw new Error(`Found duplicate axes in input component ${o[f]}. Support for duplicate axes in input is not implemented yet.`);l[f]=[];for(let g=0;g<o[f].length;++g)l[f].push(a.indexOf(o[f][g]))}const c=a.length,h=r.length,p=[];for(let f=h;f<c;++f)p.push(f);return{allDims:a,summedDims:p,idDims:l}}function fb(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function mb(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let i=0;i<e[r].length;++i)s[e[r][i]]===void 0?s[e[r][i]]=o[i]:D(s[e[r][i]]===o[i],()=>`Expected dimension ${s[e[r][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function gb(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let i=0;i<r;++i)s.push([]);const o=[];for(let i=0;i<t.length;++i){const a=t[i],l=wV(e,a);for(const c of l)o.indexOf(c)===-1&&(s[i].push(c),o.push(c))}return{path:t,steps:s}}function yb(n){return n.every((e,t)=>e===t)}function wV(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function xb(n,e,t=0){let s=[];if(typeof e=="number")D(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);D(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,l)=>l>0?a+l:a);e[o]=n.shape[t]-i}D(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function lT(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function uT(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function dT(n,e){return`size ${n} must be non-negative, not ${e}`}function hT(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function pT(n,e){const t=le(n),s=le(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function fT(n,e){const t=le(n),s=le(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W0(){return"segment ids must be >= 0"}function mT(){return"segment ids are not increasing"}function gT(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function yT(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(n,e){let t=!1,s;for(n<=nb?(s=n,t=!0):s=yf(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=yf(n,s+1);return s}function wT(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function wb(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let p=0;p<s;++p)if(n.shape[p]!==e.shape[p])throw new Error(`x.shape[${p}]: ${n.shape[p]} should be equal to indices.shape[${p}]: ${e.shape[p]}.`);const i=n.shape[t],a=[];let l=1,c=1,h=1;for(let p=0;p<s;++p)a.push(n.shape[p]),l*=n.shape[p];for(let p=s;p<t;p++)a.push(n.shape[p]),c*=n.shape[p];for(let p=s;p<r;p++)a.push(e.shape[p]);for(let p=t+1;p<o;p++)a.push(n.shape[p]),h*=n.shape[p];return{batchSize:l,sliceSize:h,outerSize:c,dimSize:i,outputShape:a}}const bV=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:wb,computeOutShape:wT,segOpComputeOptimalWindowSize:xT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(n){try{return n.map(e=>ho(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function bT(n){return n.map(e=>Fr(e))}const vT=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:ab,ERF_A2:lb,ERF_A3:ub,ERF_A4:cb,ERF_A5:db,ERF_P:ib,PARALLELIZE_THRESHOLD:nb,get RowPartitionType(){return hr},SELU_SCALE:Wg,SELU_SCALEALPHA:Vg,applyActivation:Dg,assertAndGetBroadcastShape:Ge,assertAxesAreInnerMostDims:Sn,assertParamsConsistent:tb,assignToTypedArray:rT,axesAreInnerMostDims:lw,calculateShapes:xi,checkEinsumDimSizes:mb,checkPadOnDimRoundingMode:Un,combineLocations:P$,combineRaggedTensorToTensorShapes:QI,complexWithEvenIndex:nT,complexWithOddIndex:sT,computeConv2DInfo:dn,computeConv3DInfo:pi,computeDefaultPad:G1,computeDilation2DInfo:Zd,computeOptimalWindowSize:Bg,computeOutAndReduceShapes:hn,computeOutShape:Pr,computePool2DInfo:Qs,computePool3DInfo:wo,convertConv2DDataFormat:bo,decodeEinsumEquation:pb,eitherStridesOrDilationsAreOne:vn,expandShapeToKeepDim:Bt,exponent:iT,exponents:oT,fromStringArrayToUint8:bT,fromUint8ToStringArray:go,getAxesPermutation:Ot,getBroadcastDims:oa,getComplexWithIndex:hb,getEinsumComputePath:gb,getEinsumPermutation:fb,getFusedBiasGradient:Ag,getFusedDyActivation:Rg,getImageCenter:sb,getInnerMostAxes:Vt,getPermuted:yh,getRaggedRank:JI,getReductionAxes:Xt,getReshaped:gh,getReshapedPermuted:xh,getRowPartitionTypesHelper:ZI,getSliceBeginCoords:rb,getSliceSize:ob,getSparseFillEmptyRowsIndicesDenseShapeMismatch:aT,getSparseFillEmptyRowsNegativeIndexErrorMessage:lT,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:uT,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:hT,getSparseReshapeInputOutputMismatchErrorMessage:fT,getSparseReshapeInputOutputMultipleErrorMessage:pT,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:cT,getSparseReshapeNegativeOutputDimErrorMessage:dT,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:yT,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:W0,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:mT,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:gT,getUndoAxesPermutation:fi,isIdentityPermutation:yb,log:dO,mergeRealAndImagArrays:mo,prepareAndValidate:zg,prepareSplitSize:xb,segment_util:bV,shouldFuse:_g,slice_util:XI,splitRealAndImagArrays:tT,stridesOrDilationsArePositive:ra,tupleValuesAreOne:si,upcastType:Qn,validateDefaultValueShape:eT,validateInput:Cg,validateUpdateShape:Rw,warn:$s},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vV=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Og,nonMaxSuppressionV4Impl:Fg,nonMaxSuppressionV5Impl:Lg,whereImpl:Tg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */OB();const SV=Object.freeze(Object.defineProperty({__proto__:null,Abs:qc,Acos:vl,Acosh:Sl,AdadeltaOptimizer:Bw,AdagradOptimizer:Vw,AdamOptimizer:Ww,AdamaxOptimizer:Uw,Add:ya,AddN:Kc,All:Kf,Any:Xf,ArgMax:Xc,ArgMin:Yc,Asin:kl,Asinh:Nl,Atan:Cl,Atan2:Il,Atanh:$l,AvgPool:Qc,AvgPool3D:Zc,AvgPool3DGrad:Qf,AvgPoolGrad:Yf,BatchMatMul:Jc,BatchToSpaceND:ed,Bincount:Zf,BitwiseAnd:td,BroadcastArgs:Jf,BroadcastTo:e$,Cast:Tl,Ceil:El,ClipByValue:Rl,Complex:em,ComplexAbs:nd,Concat:sd,Conv2D:rd,Conv2DBackpropFilter:tm,Conv2DBackpropInput:od,Conv3D:id,Conv3DBackpropFilterV2:nm,Conv3DBackpropInputV2:sm,Cos:Al,Cosh:Dl,CropAndResize:om,Cumprod:rm,Cumsum:ad,DataStorage:x1,DenseBincount:im,DepthToSpace:am,DepthwiseConv2dNative:ld,DepthwiseConv2dNativeBackpropFilter:lm,DepthwiseConv2dNativeBackpropInput:um,Diag:cm,Dilation2D:ud,Dilation2DBackpropFilter:wf,Dilation2DBackpropInput:xf,Draw:dm,get ENV(){return k1},Einsum:hm,Elu:Ol,EluGrad:pm,Environment:ZC,Equal:cd,Erf:Fl,Exp:Ll,ExpandDims:dd,Expm1:Pl,FFT:fm,Fill:mm,FlipLeftRight:gm,Floor:zl,FloorDiv:Ml,FromPixels:bf,FusedBatchNorm:hd,FusedConv2D:Ec,FusedDepthwiseConv2D:Rc,GatherNd:ym,GatherV2:pd,Greater:fd,GreaterEqual:Bl,IFFT:xm,Identity:Vl,Imag:wm,IsFinite:Wl,IsInf:Ul,IsNan:Gl,KernelBackend:Hf,LRN:vd,LRNGrad:vm,LeakyRelu:md,Less:gd,LessEqual:yd,LinSpace:bm,Log:Hl,Log1p:jl,LogSoftmax:t$,LogicalAnd:xd,LogicalNot:wd,LogicalOr:bd,LogicalXor:iO,LowerBound:aO,MatrixBandPart:lO,Max:Sd,MaxPool:kd,MaxPool3D:Nd,MaxPool3DGrad:km,MaxPoolGrad:Sm,MaxPoolWithArgmax:Nm,Maximum:ql,Mean:Cd,Min:$d,Minimum:Kl,MirrorPad:Id,Mod:Xl,MomentumOptimizer:Gw,Multinomial:Cm,Multiply:Yl,Neg:Td,NonMaxSuppressionV3:$m,NonMaxSuppressionV4:Im,NonMaxSuppressionV5:Tm,NotEqual:Ed,OP_SCOPE_SUFFIX:E1,OneHot:Ad,OnesLike:Rd,Optimizer:No,OptimizerConstructors:YI,Pack:Dd,PadV2:_d,Pool:uO,Pow:Ql,Prelu:Od,Prod:Fd,RMSPropOptimizer:Hw,RaggedGather:Em,RaggedRange:Rm,RaggedTensorToTensor:Am,Range:Dm,get Rank(){return C0},Real:_m,RealDiv:_l,Reciprocal:Zl,get Reduction(){return Bn},Relu:Jl,Relu6:eu,Reshape:Ld,ResizeBilinear:zd,ResizeBilinearGrad:Fm,ResizeNearestNeighbor:Pd,ResizeNearestNeighborGrad:Om,Reverse:Md,RotateWithOffset:Zm,Round:tu,Rsqrt:nu,SGDOptimizer:Pg,ScatterNd:Lm,SearchSorted:zm,Select:Bd,Selu:su,Sigmoid:au,Sign:iu,Sin:ru,Sinh:ou,Slice:Vd,Softmax:Hd,Softplus:lu,SpaceToBatchND:Ud,SparseFillEmptyRows:Mm,SparseReshape:Bm,SparseSegmentMean:Vm,SparseSegmentSum:Wm,SparseToDense:Um,SplitV:Gd,Sqrt:uu,Square:Gm,SquaredDifference:cu,StaticRegexReplace:jd,Step:mu,StridedSlice:Hm,StringNGrams:jm,StringSplit:qm,StringToHashBucketFast:Km,Sub:du,Sum:Wd,Tan:hu,Tanh:pu,Tensor:ut,TensorBuffer:Kt,TensorScatterUpdate:Pm,Tile:fu,TopK:Xm,Transform:Ym,Transpose:Xi,Unique:Qm,Unpack:qd,UnsortedSegmentSum:Kd,UpperBound:cO,Variable:_c,ZerosLike:Xd,_FusedMatMul:Tc,abs:jt,acos:L1,acosh:P1,add:pe,addN:R$,all:ng,any:Fc,argMax:sa,argMin:z1,asin:M1,asinh:B1,atan:V1,atan2:W1,atanh:U1,avgPool:Jd,avgPool3d:H1,backend:A1,backend_util:vT,basicLSTMCell:A$,batchNorm:gu,batchNorm2d:j1,batchNorm3d:q1,batchNorm4d:K1,batchToSpaceND:eh,bincount:X1,bitwiseAnd:D$,booleanMaskAsync:gI,broadcastArgs:_$,broadcastTo:Yi,broadcast_util:GL,browser:cV,buffer:He,cast:ve,ceil:Y1,clipByValue:Jn,clone:Lr,complex:po,concat:Mt,concat1d:Q1,concat2d:Z1,concat3d:J1,concat4d:ew,conv1d:sg,conv2d:fo,conv2dTranspose:rg,conv3d:nw,conv3dTranspose:sw,copyRegisteredKernels:fO,cos:th,cosh:og,cosineWindow:Eg,cumprod:zc,cumsum:ig,customGrad:Ur,denseBincount:kf,deprecationWarn:qO,depthToSpace:rw,depthwiseConv2d:yu,device_util:VO,diag:F$,dilation2d:ow,disableDeprecationWarnings:jO,dispose:Ke,disposeVariables:KO,div:_e,divNoNan:iw,dot:aw,dropout:Fw,einsum:Wi,elu:xu,enableDebugMode:HO,enableProdMode:GO,enclosingPowerOfTwo:Lw,engine:cr,ensureShape:L$,env:se,equal:Ys,erf:ag,euclideanNorm:uw,exp:es,expandDims:En,expm1:cw,eye:lg,fft:fh,fill:xa,findBackend:eF,findBackendFactory:tF,floor:bu,floorDiv:tg,fused:CI,gather:vu,gatherND:bI,gather_util:dV,getBackend:g$,getGradient:k0,getKernel:Dc,getKernelsForBackend:vf,grad:I3,grads:T3,greater:ss,greaterEqual:vo,ifft:fl,imag:nh,image:pr,inTopKAsync:vI,io:Kw,irfft:kg,isFinite:dw,isInf:hw,isNaN:pw,keep:Qt,kernel_impls:vV,leakyRelu:sh,less:cl,lessEqual:mi,linalg:Mw,linspace:M$,localResponseNormalization:fw,log:ms,log1p:rh,logSigmoid:mw,logSoftmax:cg,logSumExp:oh,logicalAnd:yr,logicalNot:ih,logicalOr:dg,logicalXor:gw,losses:DI,lowerBound:V$,matMul:qe,math:eV,max:As,maxPool:ah,maxPool3d:yw,maxPoolWithArgmax:W$,maximum:jr,mean:At,memory:A0,meshgrid:U$,min:ul,minimum:oi,mirrorPad:xw,mod:ww,moments:lh,movingAverage:yI,mul:G,multiRNNCell:G$,multinomial:H$,neg:vt,nextFrame:eb,norm:wu,notEqual:ia,oneHot:dl,ones:Xn,onesLike:gs,op:V,outerProduct:j$,pad:So,pad1d:q$,pad2d:K$,pad3d:X$,pad4d:Y$,pool:bw,pow:Wr,prelu:ch,print:F1,prod:vw,profile:XO,raggedGather:Q$,raggedRange:Z$,raggedTensorToTensor:J$,rand:eI,randomGamma:sI,randomNormal:fg,randomStandardNormal:rI,randomUniform:gi,randomUniformInt:oI,range:aa,ready:ZO,real:hl,reciprocal:Cw,registerBackend:R1,registerGradient:n$,registerKernel:Jm,relu:Sr,relu6:mg,removeBackend:JO,reshape:j,reverse:Ds,reverse1d:iI,reverse2d:aI,reverse3d:lI,reverse4d:uI,rfft:mh,round:gg,rsqrt:yg,scalar:Pe,scatterND:xI,scatter_util:Dz,searchSorted:hg,selu:xg,separableConv2d:wg,serialization:DB,setBackend:QO,setPlatform:nF,setdiff1dAsync:cI,sigmoid:mr,sign:$w,signal:AI,sin:bg,sinh:vg,slice:et,slice1d:dh,slice2d:Sg,slice3d:hh,slice4d:pl,slice_util:XI,softmax:ph,softplus:wa,spaceToBatchND:uh,sparse:_I,sparseToDense:wI,spectral:RI,split:Yn,sqrt:cn,square:ft,squaredDifference:Ng,squeeze:yi,stack:ts,step:ba,stridedSlice:Iw,string:OI,sub:$e,sum:Ee,sumOutType:eg,tan:Tw,tanh:ri,tensor:Xs,tensor1d:Rn,tensor2d:rl,tensor3d:Ew,tensor4d:dI,tensor5d:hI,tensor6d:pI,tensorScatterUpdate:fI,tensor_util:LO,test_util:HP,tidy:ne,tile:Ts,time:YO,topk:Aw,train:Bi,transpose:Je,truncatedNormal:$g,unique:Dw,unregisterGradient:pO,unregisterKernel:hO,unsortedSegmentSum:Ig,unstack:_s,upcastType:Qn,upperBound:mI,util:kO,valueAndGrad:E3,valueAndGrads:R3,variable:_w,variableGrads:B$,version_core:gV,where:xn,whereAsync:Ow,zeros:qt,zerosLike:tt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ST={kernelName:qc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,ba(ve(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV={kernelName:vl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=ft(ve(t,"float32")),r=cn($e(Pe(1),s));return vt(_e(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV={kernelName:Sl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=cn($e(ft(ve(t,"float32")),1));return _e(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CV={kernelName:ya,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ge(t.shape,s.shape);return{a:()=>{let a=n;const l=Xt(t.shape,r);return l.length>0&&(a=Ee(a,l)),j(a,t.shape)},b:()=>{let a=n;const l=Xt(s.shape,r);return l.length>0&&(a=Ee(a,l)),j(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $V={kernelName:Kc,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV={kernelName:Xc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>tt(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV={kernelName:Yc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>tt(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV={kernelName:kl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_e(n,cn($e(Pe(1),ft(ve(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RV={kernelName:Nl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=cn(pe(Pe(1),ft(ve(t,"float32"))));return _e(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV={kernelName:Il,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ge(t.shape,s.shape);return{a:()=>{const a=pe(ft(t),ft(s));let l=G(n,_e(s,a));const c=Xt(t.shape,r);return c.length>0&&(l=Ee(l,c)),j(l,t.shape)},b:()=>{const a=pe(ft(t),ft(s));let l=vt(G(n,_e(t,a)));const c=Xt(s.shape,r);return c.length>0&&(l=Ee(l,c)),j(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DV={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_e(n,pe(ft(ve(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V={kernelName:$l,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_e(n,$e(Pe(1),ft(ve(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(n,e,t,s,r,o){const i=_(n,"dy","avgPool3dGrad"),a=_(e,"input","avgPool3dGrad");let l=i,c=a,h=!1;a.rank===4&&(h=!0,l=j(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=j(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),D(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Un("avgPool3dGrad",r,o);const p={dy:l,input:c},f={filterSize:t,strides:s,pad:r,dimRoundingMode:o},g=B.runKernel(Qf,p,f);return h?j(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const FV=V({avgPool3dGrad_:OV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LV={kernelName:Zc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i,dimRoundingMode:a}=t;return{x:()=>FV(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n,e,t,s,r){const o=_(n,"dy","avgPoolGrad"),i=_(e,"input","avgPoolGrad");D(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let a=i,l=o,c=!1;i.rank===3&&(c=!0,a=j(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=j(o,[1,o.shape[0],o.shape[1],o.shape[2]])),D(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),D(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const h={dy:l,input:a},p={filterSize:t,strides:s,pad:r},f=B.runKernel(Yf,h,p);return c?j(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const zV=V({avgPoolGrad_:PV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV={kernelName:Qc,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i}=t;return{x:()=>zV(n,s,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BV={kernelName:Jc,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:i}=t;return!o&&!i?{a:()=>qe(n,r,!1,!0),b:()=>qe(s,n,!0,!1)}:!o&&i?{a:()=>qe(n,r,!1,!1),b:()=>qe(n,s,!0,!1)}:o&&!i?{a:()=>qe(r,n,!1,!0),b:()=>qe(s,n,!1,!1)}:{a:()=>qe(r,n,!0,!0),b:()=>qe(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VV={kernelName:ed,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>uh(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV={kernelName:e$,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,i=Array.from(o);for(let l=r.length-1;l>=0;l--)if(r[l]===o[l])i[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>Ee(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UV={kernelName:Tl,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GV={kernelName:El,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV={kernelName:Rl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>xn(yr(vo(s,r),mi(s,o)),n,tt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV={kernelName:nd,inputsToSave:["x"],gradFunc:ST.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qV={kernelName:sd,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:r}=t,o=Xe(r,e[0].shape)[0],i=s.map(l=>l[o]);return Yn(n,i,o).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KV={kernelName:rd,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:i,pad:a,dataFormat:l}=t;return D(si(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>tw(s.shape,n,r,i,a,l),filter:()=>Pw(s,n,r.shape,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XV={kernelName:od,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:i,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>fo(n,r,o,i,a,1,l),filter:()=>Pw(n,s,r.shape,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n,e,t,s,r){let o=n;n.rank===4&&(o=j(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=j(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),D(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),D(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),D(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),D(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),D(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:o,dy:i},l={strides:s,pad:r,filterShape:t};return B.runKernel(nm,a,l)}const QV=V({conv3DBackpropFilter_:YV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV={kernelName:id,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;D(si(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,a]=e;return{x:()=>O$(i.shape,n,a,r,o),filter:()=>QV(i,n,a.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JV={kernelName:Al,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(vt(bg(ve(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e4={kernelName:Dl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(vg(ve(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t4={kernelName:ad,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:i}=t;return{x:()=>{const a=Ot([r],s.rank);let l=ig(n,r,o,!i);return a!=null&&(l=Je(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4={kernelName:ld,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=t,a=s??[1,1];D(si(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=e;return D(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),D(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),D(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),D(vn(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),Un("depthwiseConv2d",o,i),{x:()=>NI(l.shape,n,c,r,o,a,i),filter:()=>kI(l,n,c.shape,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s4={kernelName:ud,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>B.runKernel(xf,o,t),filter:()=>B.runKernel(wf,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r4={kernelName:Ol,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>B.runKernel(pm,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o4={kernelName:Fl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=G(es(vt(ft(t))),2/Math.sqrt(Math.PI));return{x:()=>G(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i4={kernelName:Ll,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a4={kernelName:dd,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>j(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l4={kernelName:Pl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,es(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u4={kernelName:zl,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c4={kernelName:Ml,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ge(t.shape,s.shape);return{a:()=>{const a=_e(n,ve(s,"float32")),l=Xt(t.shape,r);return l.length>0?j(Ee(a,l),t.shape):a},b:()=>{let a=G(n,ve(t,"float32"));const l=Xt(s.shape,r);l.length>0&&(a=j(Ee(a,l),s.shape));const c=ft(s);return vt(_e(a,ve(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d4={kernelName:hd,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,i,a]=e,l=a??Pe(1),c=Xt(o.shape,r.shape),h=[];if(o.rank===1){for(let N=0;N<r.shape.length-1;++N)h.push(r.shape[N]);h.push(1)}const p=$e(r,o),f=G(n,l),g=yg(pe(i,Pe(s))),y=G(G(G(g,g),g),Pe(-.5));return{x:()=>o.rank===1?j(G(G(n,Ts(j(g,[1,1,1,o.shape[0]]),h)),l),r.shape):j(G(G(n,g),l),r.shape),mean:()=>{let N=G(G(g,Pe(-1)),f);return o.rank===1&&(N=Ee(N,c)),j(N,o.shape)},variance:()=>{let N=G(G(y,p),f);return o.rank===1&&(N=Ee(N,c)),j(N,o.shape)},scale:()=>{const N=G(p,g);let T=G(n,N);return o.rank===1&&(T=Ee(T,c)),j(T,o.shape)},offset:()=>{let N=n;return o.rank===1&&(N=Ee(N,c)),j(N,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h4={kernelName:pd,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o,batchDims:i}=t,a=Xe(o,s.shape)[0],l=(c,h,p)=>()=>{const f=c.shape,g=h.size,y=f.slice(0,a),b=y.length,w=f.slice(o,f.length).slice(1),v=w.length,S=$N(0,b),$=$N(b+1,b+1+v),N=IN([y,[g],w]),T=j(p,N),R=j(h,[g]),L=IN([[b],S,$]),P=Je(T,L);let O=Ig(P,R,c.shape[a]);const F=fi(L);return O=Je(O,F),O};if(i===1){const c=s.shape[0],h=s.split(c,0);return{x:()=>ts(h.map((g,y)=>l(g,r.slice(y,1),n.slice(y,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function $N(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function IN(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p4={kernelName:Bl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>tt(t),b:()=>tt(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f4={kernelName:Vl,gradFunc:n=>({x:()=>ve(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m4={kernelName:Wl,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4={kernelName:Ul,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y4={kernelName:Gl,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4={kernelName:md,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=ss(s,0);return{x:()=>xn(o,n,G(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4={kernelName:jl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_e(n,pe(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b4={kernelName:Hl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_e(n,ve(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4={kernelName:t$,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const i=es(s);return $e(n,G(Ee(n,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,e,t,s=5,r=1,o=1,i=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:r,alpha:o,beta:i};return B.runKernel(vm,a,l)}const k4=V({localResponseNormalizationBackprop_:S4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N4={kernelName:vd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:i,alpha:a,beta:l}=t;return{x:()=>k4(s,r,n,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(n,e,t,s){return e.rank<t.rank&&(e=j(e,Bt(e.shape,s))),n.rank<t.rank&&(n=j(n,Bt(n.shape,s))),{x:()=>G(n,ve(Ys(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TN={kernelName:Sd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],i=e[1],a=Xe(r,o.shape),l=kT(n,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4={kernelName:ql,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>G(n,ve(vo(t,s),"float32")),b:()=>G(n,ve(cl(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $4(n,e,t,s,r,o,i){const a=_(n,"dy","maxPool3dGrad"),l=_(e,"input","maxPool3dGrad"),c=_(t,"output","maxPool3dGrad");let h=a,p=l,f=c,g=!1;l.rank===4&&(g=!0,h=j(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=j(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=j(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),D(h.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${h.rank}.`),D(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),D(f.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`),Un("maxPool3dGrad",o,i);const y={dy:h,input:p,output:f},b={filterSize:s,strides:r,pad:o,dimRoundingMode:i},w=B.runKernel(km,y,b);return g?j(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}const I4=V({maxPool3dGrad_:$4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T4={kernelName:Nd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=t;return{x:()=>I4(n,s,r,o,i,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E4(n,e,t,s,r,o,i){const a=_(n,"dy","maxPoolGrad"),l=_(e,"input","maxPoolGrad"),c=_(t,"output","maxPoolGrad");D(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),D(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),D(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Un("maxPoolGrad",o,i);const h={dy:a,input:l,output:c},p={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return B.runKernel(Sm,h,p)}const R4=V({maxPoolGrad_:E4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4={kernelName:kd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:a}=t;return{x:()=>R4(n,s,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4={kernelName:Cd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=Xe(r,s.shape),a=hn(s.shape,o)[1],l=le(a);return{x:()=>{const h=s.shape.slice();o.forEach(g=>{h[g]=1});const p=j(n,h);return _e(G(p,Xn(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4={kernelName:$d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,i]=e,a=Xe(r,o.shape),l=kT(n,i,o,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4={kernelName:Kl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>G(n,ve(mi(t,s),"float32")),b:()=>G(n,ve(ss(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4={kernelName:Id,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>et(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4={kernelName:Xl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ge(t.shape,s.shape);return{a:()=>{const a=Xt(t.shape,r);return a.length>0?j(Ee(n,a),t.shape):n},b:()=>{const a=G(n,vt(bu(_e(t,s)))),l=Xt(s.shape,r);return l.length>0?j(Ee(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4={kernelName:Yl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ge(t.shape,s.shape);return{a:()=>{const a=G(n,ve(s,"float32")),l=Xt(t.shape,r);return l.length>0?j(Ee(a,l),t.shape):a},b:()=>{const a=G(n,ve(t,"float32")),l=Xt(s.shape,r);return l.length>0?j(Ee(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4={kernelName:Td,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4={kernelName:Ad,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>qt(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4={kernelName:Rd,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V4={kernelName:Dd,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return _s(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EN={kernelName:_d,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>et(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4={kernelName:Ql,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,i=s,a=Ge(o.shape,i.shape);return{a:()=>{const h=ve(i,"float32");let p=G(n,G(h,Wr(o,$e(h,Pe(1)))));const f=Xt(o.shape,a);return f.length>0&&(p=Ee(p,f)),j(p,o.shape)},b:()=>{const h=ss(o,0),p=xn(h,ms(o),tt(o));let f=G(n,G(r,p));const g=Xt(i.shape,a);return g.length>0&&(f=Ee(f,g)),j(f,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U4={kernelName:Od,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=ss(t,0);return{x:()=>xn(r,n,G(n,s)),alpha:()=>{let o=xn(r,tt(n),G(n,t));const i=Xt(s.shape,n.shape);return i.length>0&&(o=Ee(o,i)),j(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G4(n,e,t){const s=n.shape.slice();s[t]=1;const r=j(e,s),o=zc(n,t,!0,!1),i=zc(n,t,!0,!0),a=G(o,i);return G(r,a)}function H4(n,e,t){const s=n.shape.length,r=s-t.length,o=Ot(t,s);let i=n;o!=null&&(i=Je(n,o));const a=i.shape.slice(),c=a.splice(s-t.length,t.length).reduce((f,g)=>f*g,1);a.push(c);const h=i.reshape(a);let p=G4(h,e,r);if(p=p.reshape(i.shape),o!=null){const f=fi(o);p=Je(p,f)}return p}const j4={kernelName:Fd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let o=[];return r==null?o=s.shape.map((i,a)=>a):typeof r=="number"?o=[r]:o=r,{x:()=>H4(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4={kernelName:_l,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ge(t.shape,s.shape);return{a:()=>{const a=_e(n,ve(s,"float32")),l=Xt(t.shape,r);return l.length>0?j(Ee(a,l),t.shape):a},b:()=>{let a=G(n,ve(t,"float32"));const l=Xt(s.shape,r);l.length>0&&(a=j(Ee(a,l),s.shape));const c=ft(s);return vt(_e(a,ve(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K4={kernelName:Zl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_e(n,vt(ft(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4={kernelName:eu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=G(mi(t,6),ba(t));return{x:()=>G(n,ve(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y4={kernelName:Jl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,ve(ba(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q4={kernelName:Ld,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>j(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z4={kernelName:zd,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>B.runKernel(Fm,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4={kernelName:Pd,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>B.runKernel(Om,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW={kernelName:Md,gradFunc:(n,e,t)=>{const{dims:s}=t,r=Xe(s,n.shape);return{x:()=>Ds(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW={kernelName:tu,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nW={kernelName:nu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>vt(_e(n,G(Wr(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW={kernelName:Bd,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>ve(tt(t),"float32"),t:()=>G(n,ve(t,n.dtype)),e:()=>G(n,ve(ih(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW={kernelName:su,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=ss(t,Pe(0)),r=Pe(Vg),o=Pe(Wg),i=G(n,o),a=G(G(n,r),es(ve(t,"float32")));return xn(s,i,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oW={kernelName:au,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,G(t,$e(Pe(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iW={kernelName:iu,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aW={kernelName:ru,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(th(ve(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lW={kernelName:ou,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(og(ve(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW={kernelName:Vd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,i=s.shape,[a,l]=Mg(s,r,o),c=[];for(let h=0;h<n.rank;h++)c.push([a[h],i[h]-a[h]-l[h]]);return{x:()=>So(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cW={kernelName:Hd,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,i=G(n,s);return{logits:()=>$e(i,G(Ee(i,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dW={kernelName:lu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,mr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RN={kernelName:Ud,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>eh(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AN={kernelName:Gd,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>Mt(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW={kernelName:uu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_e(n,G(cn(ve(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pW={kernelName:Gm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,G(ve(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW={kernelName:cu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Pe(2);return{a:()=>G(n,G(r,$e(t,s))),b:()=>G(n,G(r,$e(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW={kernelName:mu,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gW={kernelName:du,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ge(t.shape,s.shape);return{a:()=>{let a=n;const l=Xt(t.shape,r);return l.length>0&&(a=Ee(a,l)),j(a,t.shape)},b:()=>{let a=n;const l=Xt(s.shape,r);return l.length>0&&(a=Ee(a,l)),j(vt(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yW={kernelName:Wd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;Xe(o,s.shape).forEach(c=>{r[c]=1});const a=j(n,r),l=G(a,Xn(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xW={kernelName:hu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_e(n,ft(th(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW={kernelName:pu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G($e(Pe(1),ft(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bW={kernelName:fu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let i=tt(s);if(s.rank===1)for(let a=0;a<r[0];++a)i=pe(i,et(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)i=pe(i,et(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)i=pe(i,et(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let h=0;h<r[3];++h)i=pe(i,et(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2],h*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW={kernelName:Xi,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=fi(r);return{x:()=>Je(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SW={kernelName:qd,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>ts(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW={kernelName:Kd,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>NW(n,t)}}};function NW(n,e){const t=jr(e,tt(e)),s=vu(n,t);let r=vo(e,Pe(0,"int32"));const o=s.rank-r.rank;for(let a=0;a<o;++a)r=En(r,a+1);r=yr(r,Xn(s.shape,"bool"));const i=tt(s);return xn(r,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW={kernelName:Xd,gradFunc:n=>({x:()=>tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W=[ST,kV,NV,CV,$V,IV,TV,EV,RV,AV,DV,_V,LV,MV,BV,VV,WV,UV,GV,HV,jV,qV,XV,KV,ZV,JV,e4,t4,n4,s4,q4,r4,o4,i4,a4,l4,c4,u4,d4,h4,p4,f4,m4,g4,y4,x4,w4,b4,v4,N4,TN,TN,C4,T4,A4,D4,_4,O4,F4,L4,P4,z4,M4,B4,V4,EN,EN,W4,U4,j4,K4,X4,Y4,Q4,Z4,J4,eW,tW,nW,sW,rW,oW,iW,aW,lW,uW,cW,dW,RN,RN,AN,AN,hW,fW,pW,mW,gW,yW,xW,wW,bW,vW,SW,kW,CW];for(const n of $W)n$(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.abs=function(){return this.throwIfDisposed(),jt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.acos=function(){return this.throwIfDisposed(),L1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.acosh=function(){return this.throwIfDisposed(),P1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.add=function(n){return this.throwIfDisposed(),pe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.all=function(n,e){return this.throwIfDisposed(),ng(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.any=function(n,e){return this.throwIfDisposed(),Fc(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.argMax=function(n){return this.throwIfDisposed(),sa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.argMin=function(n){return this.throwIfDisposed(),z1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.asScalar=function(){return this.throwIfDisposed(),D(this.size===1,()=>"The array must have only 1 element."),j(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.asType=function(n){return this.throwIfDisposed(),ve(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.as1D=function(){return this.throwIfDisposed(),j(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.as2D=function(n,e){return this.throwIfDisposed(),j(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),j(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),j(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),j(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.asin=function(){return this.throwIfDisposed(),M1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.asinh=function(){return this.throwIfDisposed(),B1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.atan=function(){return this.throwIfDisposed(),V1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.atan2=function(n){return this.throwIfDisposed(),W1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.atanh=function(){return this.throwIfDisposed(),U1(this)};ce().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),Jd(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),eh(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),gu(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Yi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.cast=function(n){return this.throwIfDisposed(),ve(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.ceil=function(){return this.throwIfDisposed(),Y1(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Jn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof ut&&(n=[n]),Mt([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),sg(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),rg(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),fo(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.cos=function(){return this.throwIfDisposed(),th(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.cosh=function(){return this.throwIfDisposed(),og(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),zc(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),ig(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),rw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),yu(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),ow(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.divNoNan=function(n){return this.throwIfDisposed(),iw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.div=function(n){return this.throwIfDisposed(),_e(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.dot=function(n){return this.throwIfDisposed(),aw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.elu=function(){return this.throwIfDisposed(),xu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.equal=function(n){return this.throwIfDisposed(),Ys(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.erf=function(){return this.throwIfDisposed(),ag(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),uw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.exp=function(){return this.throwIfDisposed(),es(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.expandDims=function(n){return this.throwIfDisposed(),En(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.expm1=function(){return this.throwIfDisposed(),cw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.fft=function(){return this.throwIfDisposed(),fh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.flatten=function(){return this.throwIfDisposed(),j(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.floor=function(){return this.throwIfDisposed(),bu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.floorDiv=function(n){return this.throwIfDisposed(),tg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.gather=function(n,e,t){return this.throwIfDisposed(),vu(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.greaterEqual=function(n){return this.throwIfDisposed(),vo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.greater=function(n){return this.throwIfDisposed(),ss(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.ifft=function(){return this.throwIfDisposed(),fl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.irfft=function(){return this.throwIfDisposed(),kg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.isFinite=function(){return this.throwIfDisposed(),dw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.isInf=function(){return this.throwIfDisposed(),hw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.isNaN=function(){return this.throwIfDisposed(),pw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.leakyRelu=function(n){return this.throwIfDisposed(),sh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.lessEqual=function(n){return this.throwIfDisposed(),mi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.less=function(n){return this.throwIfDisposed(),cl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),fw(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.logSigmoid=function(){return this.throwIfDisposed(),mw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.logSoftmax=function(n){return this.throwIfDisposed(),cg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),oh(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.log=function(){return this.throwIfDisposed(),ms(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.log1p=function(){return this.throwIfDisposed(),rh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.logicalAnd=function(n){return this.throwIfDisposed(),yr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.logicalNot=function(){return this.throwIfDisposed(),ih(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.logicalOr=function(n){return this.throwIfDisposed(),dg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.logicalXor=function(n){return this.throwIfDisposed(),gw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),qe(this,n,e,t)};ce().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),ah(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.max=function(n,e){return this.throwIfDisposed(),As(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.maximum=function(n){return this.throwIfDisposed(),jr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.mean=function(n,e){return this.throwIfDisposed(),At(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.min=function(n,e){return this.throwIfDisposed(),ul(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.minimum=function(n){return this.throwIfDisposed(),oi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),xw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.mod=function(n){return this.throwIfDisposed(),ww(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.mul=function(n){return this.throwIfDisposed(),G(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.neg=function(){return this.throwIfDisposed(),vt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.norm=function(n,e,t){return this.throwIfDisposed(),wu(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.notEqual=function(n){return this.throwIfDisposed(),ia(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),dl(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.onesLike=function(){return this.throwIfDisposed(),gs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.pad=function(n,e){return this.throwIfDisposed(),So(this,n,e)};ce().prototype.pool=function(n,e,t,s,r,o){return this.throwIfDisposed(),bw(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.pow=function(n){return this.throwIfDisposed(),Wr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.prelu=function(n){return this.throwIfDisposed(),ch(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.prod=function(n,e){return this.throwIfDisposed(),vw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.reciprocal=function(){return this.throwIfDisposed(),Cw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.relu=function(){return this.throwIfDisposed(),Sr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.relu6=function(){return this.throwIfDisposed(),mg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.reshapeAs=function(n){return this.throwIfDisposed(),j(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.reshape=function(n){return this.throwIfDisposed(),j(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),TI(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),EI(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.reverse=function(n){return this.throwIfDisposed(),Ds(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.rfft=function(){return this.throwIfDisposed(),mh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.round=function(){return this.throwIfDisposed(),gg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.rsqrt=function(){return this.throwIfDisposed(),yg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.selu=function(){return this.throwIfDisposed(),xg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),wg(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.sigmoid=function(){return this.throwIfDisposed(),mr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.sign=function(){return this.throwIfDisposed(),$w(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.sin=function(){return this.throwIfDisposed(),bg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.sinh=function(){return this.throwIfDisposed(),vg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.slice=function(n,e){return this.throwIfDisposed(),et(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.softmax=function(n){return this.throwIfDisposed(),ph(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.softplus=function(){return this.throwIfDisposed(),wa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),uh(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.split=function(n,e){return this.throwIfDisposed(),Yn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.sqrt=function(){return this.throwIfDisposed(),cn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.square=function(){return this.throwIfDisposed(),ft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Ng(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.squeeze=function(n){return this.throwIfDisposed(),yi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof ut?[this,n]:[this,...n];return ts(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.step=function(n){return this.throwIfDisposed(),ba(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.stridedSlice=function(n,e,t,s,r,o,i,a){return this.throwIfDisposed(),Iw(this,n,e,t,s,r,o,i,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.sub=function(n){return this.throwIfDisposed(),$e(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.sum=function(n,e){return this.throwIfDisposed(),Ee(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.tan=function(){return this.throwIfDisposed(),Tw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.tanh=function(){return this.throwIfDisposed(),ri(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.tile=function(n){return this.throwIfDisposed(),Ts(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.toBool=function(){return this.throwIfDisposed(),ve(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.toFloat=function(){return this.throwIfDisposed(),ve(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.toInt=function(){return this.throwIfDisposed(),ve(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.topk=function(n,e){return this.throwIfDisposed(),Aw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.transpose=function(n){return this.throwIfDisposed(),Je(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.unique=function(n){return this.throwIfDisposed(),Dw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Ig(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.unstack=function(n){return this.throwIfDisposed(),_s(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.where=function(n,e){return this.throwIfDisposed(),xn(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ce().prototype.zerosLike=function(){return this.throwIfDisposed(),tt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Rr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Rr.prototype)}}class qs extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qs.prototype)}}class K extends Error{constructor(e){super(e),Object.setPrototypeOf(this,K.prototype)}}class je extends Error{constructor(e){super(e),Object.setPrototypeOf(this,je.prototype)}}class bb extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bb.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class NT{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ua(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Ar(n,e){if(!n)throw new bb(e)}function DN(n,e){let t=0;for(const s of n)s===e&&t++;return t}function Kn(n){return n.length===1?n[0]:n}function dt(n){return Array.isArray(n)?n:[n]}function oo(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Ui(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Us={};function vb(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function U0(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>U0(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:U0(s))}}}function wh(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let i;if(o in t)i=t[o];else if(o in Us)i=Us[o];else if(i=e[o],i==null)throw new K(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=n;if(o.className==null||o.config==null)throw new K(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let a,l;if(i in t?[a,l]=t[i]:i in Us?[a,l]=Us.className:i in e&&([a,l]=e[i]),a==null)throw new K(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const g of Object.keys(Us))c[g]=Us[g];for(const g of Object.keys(t))c[g]=t[g];const h=o.config;h.customObjects=c;const p=Object.assign({},Us);for(const g of Object.keys(t))Us[g]=t[g];U0(o.config);const f=l(a,o.config,t,r);return Us=Object.assign({},p),f}else{const c=Object.assign({},Us);for(const p of Object.keys(t))Us[p]=t[p];const h=new a(o.config);return Us=Object.assign({},c),h}}}function IW(n,e){return n<e?-1:n>e?1:0}function Gp(n,e){return-1*IW(n,e)}function Qo(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function TW(n){if(n==null)throw new K(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Sa(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new K(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Sb(n,e,t=0,s=1/0){return Ar(t>=0),Ar(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function ln(n,e){Array.isArray(n)?(D(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>ln(t,`element ${s+1} of ${e}`))):D(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${CT(n)}.`)}function CT(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>CT(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function EW(n,e,t){let s=t!=null?t():Pn(),r;return(...i)=>{const a=t!=null?t():Pn();return a-s<e||(s=a,r=n(...i)),r}}function $T(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let RW=0;function IT(){return RW++}const Hp={};function Ug(n=""){return n in Hp||(Hp[n]=0),Hp[n]+=1,n+Hp[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const AW=["channelsFirst","channelsLast"],DW=["nearest","bilinear"],_W=["valid","same","causal"],OW=["max","avg"],FW=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Za=new Map;function Wt(n){Sa(AW,"DataFormat",n)}function LW(n){Sa(DW,"InterpolationFormat",n)}function Os(n){Sa(_W,"PaddingMode",n)}function TT(n){Sa(OW,"PoolMode",n)}const $c=[],_N="/";function Qi(n,e){$c.push(n);try{const t=e();return $c.pop(),t}catch(t){throw $c.pop(),t}}function PW(){return $c.length===0?"":$c.join(_N)+_N}function ET(n){if(!AT(n))throw new Error("Not a valid tensor name: '"+n+"'");return PW()+n}function RT(n){if(!AT(n))throw new Error("Not a valid tensor name: '"+n+"'");Za.has(n)||Za.set(n,0);const e=Za.get(n);if(Za.set(n,Za.get(n)+1),e>0){const t=`${n}_${e}`;return Za.set(t,1),t}else return n}const zW=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function AT(n){return!!n.match(zW)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MW(n){return n===parseInt(n.toString(),10)}function Zo(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function ml(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function ii(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function xr(n,e){if(e<n)throw new K(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let u0;function Zt(){return u0==null&&(u0=A1().epsilon()),u0}function wr(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zr(n,e){return ve(n,e)}function bh(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),j(n,t)}function BW(n,e){return ne(()=>{if(n.shape.length!==2)throw new K(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=bh(n,1);return G0(t,[1,e,1])})}function VW(n){const e=[Zo(n.shape)];return j(n,e)}function WW(n){if(n.rank<=1)throw new K(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Zo(n.shape,1)];return j(n,e)}function Zi(n,e,t){return ne(()=>{switch(n.rank){case 1:return dh(n,e,t);case 2:return Sg(n,[e,0],[t,n.shape[1]]);case 3:return hh(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return pl(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return et(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return et(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new K(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function c0(n,e,t){return ne(()=>{switch(n.rank){case 1:return dh(n,e,t);case 2:return Sg(n,[0,e],[n.shape[0],t]);case 3:return hh(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return pl(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function jp(n,e,t,s){return ne(()=>{switch(n.rank){case 1:return dh(n,e,t);case 2:switch(s){case 1:return Zi(n,e,t);case 2:return c0(n,e,t);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Zi(n,e,t);case 2:return hh(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return c0(n,e,t);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Zi(n,e,t);case 2:return pl(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return pl(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return c0(n,e,t);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function kb(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),Mt(n,e)}function ON(n,e){switch(n.rank){case 1:return Q1([n,e]);case 2:return Z1([n,e],0);case 3:return J1([n,e],0);case 4:return ew([n,e],0);default:throw new K(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function G0(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new K(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Ts(n,e)}function Gg(n,e=0,t=1,s,r){return fg(n,e,t,s,r)}function Mr(n,e,t,s){if(n.rank<2||e.rank<2)throw new je(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new je(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return z0({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?H0(n.rank,s,wr()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=j(n,[-1,o]);const i=e.shape.slice(),a=i.pop(),l=i.pop(),c=[...i,a],h=Array.from({length:e.rank},(y,b)=>b===0?e.rank-2:b<=e.rank-2?b-1:b);e=j(Je(e,h),[l,-1]);const p=[...r,...c];return j(z0({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?H0(n.rank,s,wr()):null,activation:t}),p)}}function DT(n,e,t){return ne(()=>(Array.isArray(e)?e=Rn(e,"int32"):e=ve(e,"int32"),vu(n,e,t)))}function vh(n){return G(n,n)}function H0(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new K(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?j(e,[1,s[0],1,1,1]):j(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?j(e,[1,1,1,1,s[0]]):j(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?j(e,[1,s[0],1,1]):j(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?j(e,[1,1,1,s[0]]):j(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?j(e,[1,s[0],1]):j(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?j(e,[1,1,s[0]]):j(e,[1].concat(s))}else if(n<3)return e;throw new K(`Unsupported input rank by biasAdd: ${e.rank}`)}function kr(n,e,t){return ne(()=>(t==null&&(t=wr()),Wt(t),pe(n,H0(n.rank,e,t))))}function UW(n,e=1){if(e!==1)throw new je(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return xu(n)}function GW(n){return ne(()=>_e(n,pe(jt(n),1)))}function _T(n,e,t,s){return ne(()=>Fw(n,e,t,s))}function HW(n){return ne(()=>{const e=pe(.5,G(.2,n));return Jn(e,0,1)})}function Sh(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const jW=["fanIn","fanOut","fanAvg"],qW=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KW(n){Sa(jW,"FanMode",n)}function XW(n){Sa(qW,"Distribution",n)}class Zs extends va{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class OT extends Zs{apply(e,t){return qt(e,t)}}OT.className="Zeros";fe(OT);class Nb extends Zs{apply(e,t){return Xn(e,t)}}Nb.className="Ones";fe(Nb);class FT extends Zs{constructor(e){if(super(),typeof e!="object")throw new K(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new K(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ne(()=>G(Pe(this.value),Xn(e,t)))}getConfig(){return{value:this.value}}}FT.className="Constant";fe(FT);class LT extends Zs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return gi(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}LT.className="RandomUniform";fe(LT);class PT extends Zs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new je(`randomNormal does not support dType ${t}.`);return Gg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}PT.className="RandomNormal";fe(PT);class zT extends Zs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new je(`truncatedNormal does not support dType ${t}.`);return $g(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}zT.className="TruncatedNormal";fe(zT);class MT extends Zs{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return ne(()=>{if(e.length!==2||e[0]!==e[1])throw new K("Identity matrix initializer can only be used for 2D square matrices.");return G(this.gain,lg(e[0]))})}getConfig(){return{gain:this.gain}}}MT.className="Identity";fe(MT);function YW(n,e="channelsLast"){let t,s;if(Wt(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Zo(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Zo(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Zo(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class ys extends Zs{constructor(e){if(super(),e.scale<0)throw new K(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,KW(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,XW(this.distribution),this.seed=e.seed}apply(e,t){const s=YW(e),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const a=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new je(`${this.getClassName()} does not support dType ${t}.`);return $g(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*i);return gi(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ys.className="VarianceScaling";fe(ys);class Cb extends ys{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ys.className}}Cb.className="GlorotUniform";fe(Cb);class $b extends ys{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ys.className}}$b.className="GlorotNormal";fe($b);class Ib extends ys{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ys.className}}Ib.className="HeNormal";fe(Ib);class Tb extends ys{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ys.className}}Tb.className="HeUniform";fe(Tb);class Eb extends ys{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ys.className}}Eb.className="LeCunNormal";fe(Eb);class Rb extends ys{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ys.className}}Rb.className="LeCunUniform";fe(Rb);class BT extends Zs{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ne(()=>{if(e.length<2)throw new je("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=le(e.slice(0,-1)),r=e[e.length-1],o=s*r;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const i=[Math.max(r,s),Math.min(r,s)],a=Gg(i,0,1,t,this.seed),l=Mw.qr(a,!1);let c=l[0];const p=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return c=G(c,p.sign()),s<r&&(c=c.transpose()),G(Pe(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}BT.className="Orthogonal";fe(BT);const FN={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function LN(n,e={}){return wh(n,Is.getMap().classNameMap,e,"initializer")}function Dt(n){return vb(n)}function $t(n){if(typeof n=="string"){const e=n in FN?FN[n]:n;if(e==="GlorotNormal")return new $b;if(e==="GlorotUniform")return new Cb;if(e==="HeNormal")return new Ib;if(e==="HeUniform")return new Tb;if(e==="LeCunNormal")return new Eb;if(e==="LeCunUniform")return new Rb;{const t={};return t.className=e,t.config={},LN(t)}}else return n instanceof Zs?n:LN(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function j0(n){return Array.isArray(n)&&Array.isArray(n[0])}function Cf(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ve(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new K(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function st(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new K(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $f(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const PN="Variable";class QW{constructor(e,t="float32",s=PN,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=IT(),s=s??PN,this.originalName=ET(s),this.name=RT(this.originalName),this.trainable_=r,this.constraint=o,this.val=_w(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),ZW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ZW(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function q0(n){return n.map(e=>e.read())}function Ab(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Jt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Gr{constructor(e,t,s,r,o,i,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=a,this.id=IT(),i!=null&&(this.originalName=ET(i),this.name=RT(this.originalName)),this.rank=t.length}}let JW=0;class Hg{constructor(e,t){this.callArgs=t,this.id=JW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let eU=0;class Ye extends va{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=eU++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=oo(s)+"_"+Ug(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new qs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new K(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Kn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Kn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Rr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Rr(`Layer ${this.name} is not connected, no input to return.`);return Kn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Rr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Rr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Kn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=dt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=dt(this.inputSpec);if(t.length!==s.length)throw new K(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const o=t[r],i=s[r];if(i==null)continue;const a=o.rank;if(i.ndim!=null&&a!==i.ndim)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&o.dtype!==i.dtype)throw new K(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${o.dtype}.`);if(i.axes){const l=o.shape;for(const c in i.axes){const h=Number(c),p=i.axes[c],f=h>=0?l[h]:l[l.length+h];if(p!=null&&[p,null].indexOf(f)===-1)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected axis ${h} of input shape to have value ${p} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){const c=i.shape[l],h=o.shape[l];if(c!=null&&h!=null&&c!==h)throw new K(`Input ${r} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=dt(e),r=sU(e),o=rU(e);if(r===o)throw new K("Arguments to apply() must be all SymbolicTensors or all Tensors");return Qi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const a of dt(e))i.push(a.shape);this.build(Kn(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let i=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,i);const a=dt(i),l=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(i=Kn(l),this.activityRegularizer!=null)throw new je("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=tU(e),a=this.computeOutputShape(i);let l;const c=nU(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((h,p)=>new Gr(c,h,this,dt(e),t,this.name,p)):l=new Gr(c,a,this,dt(e),t,this.name),this.addInboundNode(e,l,null,null,i,a,t),this._refCount++,this.activityRegularizer!=null)throw new je("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Rr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Rr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new qs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return $f(this.weights)}build(e){this.built=!0}getWeights(e=!1){return q0(e?this.trainableWeights:this.weights)}setWeights(e){ne(()=>{const t=this.weights;if(t.length!==e.length)throw new K(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=q0(t);for(let o=0;o<r.length;++o){const i=r[o],a=t[o],l=e[o];if(!Qe(i.shape,l.shape))throw new K(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}Ab(s)})}addWeight(e,t,s,r,o,i,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new K(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():$t("zeros"));const c=r.apply(t,s),h=new QW(c,s,e,i,a);return c.dispose(),o!=null&&this.addLoss(()=>o.apply(h.read())),i==null&&(i=!0),i?this._trainableWeights.push(h):this._nonTrainableWeights.push(h),h}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=dt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),o=dt(t),i=dt(r);if(o.length!==i.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let a=0;a<o.length;a++)o[a].kerasMask=i[a]}addInboundNode(e,t,s,r,o,i,a=null){const l=dt(e);t=dt(t),s=dt(s),r=dt(r),o=Cf(o),i=Cf(i);const c=[],h=[],p=[];for(const f of l)c.push(f.sourceLayer),h.push(f.nodeIndex),p.push(f.tensorIndex);new Hg({outboundLayer:this,inboundLayers:c,nodeIndices:h,tensorIndices:p,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},a);for(let f=0;f<t.length;f++)t[f].sourceLayer=this,t[f].nodeIndex=this.inboundNodes.length-1,t[f].tensorIndex=f}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function tU(n){n=dt(n);const e=[];for(const t of n)e.push(t.shape);return Kn(e)}function nU(n){return"float32"}function VT(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],a=s.inboundLayers[o],l=s.nodeIndices[o],c=VT(i,a,l);for(const h of c)r.indexOf(h)===-1&&r.push(h)}return r}}}function sU(n){let e=!0;for(const t of dt(n))if(!(t instanceof Gr)){e=!1;break}return e}function rU(n){let e=!0;for(const t of dt(n))if(t instanceof Gr){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class kh extends Ye{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Ug("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new K("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new K("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new K("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Gr(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new K(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}kh.className="InputLayer";fe(kh);function oU(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new K("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new kh({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iU(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return ve(e,n.dtype)}catch{throw new K(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Ko{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ko)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=iU(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new K(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Gr){if(this.id2Value[e.id]==null)throw new K(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new K(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Gr){if(this.id2Value[e.id]==null)throw new K(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new K(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ke(this.id2Mask)}}const If=new NT,Tf=new NT;function aU(n){If!=null&&If.setMaxEntries(n),Tf!=null&&Tf.setMaxEntries(n)}function vc(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),i=o?n:[n],a=i.map(y=>y.name),l=[],c=e.names();for(const y of a)c.indexOf(y)!==-1?l.push(e.getValue(y)):l.push(null);const h=a.join(",")+"|"+e.names().sort().join(",");let p=If.get(h),f;if(p==null){const y=lU(i,e);p=y.sorted,f=y.recipientCounts,If.put(h,p),Tf.put(h,f)}f={},r||Object.assign(f,Tf.get(h));const g=new Ko(e);for(let y=0;y<p.length;++y){const b=p[y],w=b.sourceLayer;if(w instanceof kh)continue;const v=[],S=[],$=[];let N=!1;for(const O of b.inputs){const F=g.getValue(O),E=g.getMask(O);v.push(F),S.push(E),E!=null&&(N=!0),r||(f[O.name]--,f[O.name]===0&&!e.hasKey(O)&&a.indexOf(O.name)===-1&&!F.isDisposed&&O.sourceLayer.stateful!==!0&&$.push(F))}N&&(t=t||{},t.mask=S[0]);const T=dt(w.apply(v,t));let R=null;w.supportsMasking&&(R=w.computeMask(v,S));const L=cU(b),P=Array.isArray(L)?L:[L];for(let O=0;O<P.length;++O){g.hasKey(P[O])||g.add(P[O],T[O],Array.isArray(R)?R[0]:R);const F=a.indexOf(P[O].name);F!==-1&&(l[F]=T[O])}r||Ke($)}return g.disposeMasks(),o?l:l[0]}function lU(n,e){D(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=zN(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:a}=zN(o,e);for(const l of i)r.has(l.name)||(t.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:t,recipientCounts:uU(s)}}function uU(n){const e={};for(const t in n)e[t]=n[t].size;return e}function zN(n,e){const t=new Set,s=[],r={};for(const a of e.names())t.add(a);const o=[],i=[];for(o.push(n);o.length>0;){const a=o[o.length-1];if(t.has(a.name)){o.pop();continue}const l=i[i.length-1]===o.length-1;if(a.inputs.length===0||l)o.pop(),s.push(a),t.add(a.name),l&&i.pop();else{i.push(o.length-1);for(const c of a.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(a.name),!t.has(c.name)&&o.push(c)}}return{sorted:s,recipientMap:r}}function cU(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dU=se();dU.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,aU);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Db(n,e){return ne(()=>cn(Ee(G(n,n),e,!0)))}class Nh extends va{getConfig(){return{}}}class WT extends Nh{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ne(()=>{const t=Db(e,this.axis),s=Jn(t,0,this.maxValue);return G(e,_e(s,pe(Zt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}WT.className="MaxNorm";fe(WT);class UT extends Nh{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ne(()=>_e(e,pe(Zt(),Db(e,this.axis))))}getConfig(){return{axis:this.axis}}}UT.className="UnitNorm";fe(UT);class GT extends Nh{apply(e){return Sr(e)}}GT.className="NonNeg";fe(GT);class HT extends Nh{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ne(()=>{const t=Db(e,this.axis),s=pe(G(this.rate,Jn(t,this.minValue,this.maxValue)),G(1-this.rate,t));return G(e,_e(s,pe(Zt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}HT.className="MinMaxNorm";fe(HT);const MN={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function en(n){return vb(n)}function BN(n,e={}){return wh(n,Is.getMap().classNameMap,e,"constraint")}function tn(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in MN?MN[n]:n,config:{}};return BN(t)}else return n instanceof Nh?n:BN(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Pi(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const i=o;e.push(i.data()),t.push(r),s.push(i)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];Ke(s)}}function jT(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var VN;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(VN||(VN={}));const hU=125;class Mc{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class pU{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class fU extends Mc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const a=ne(()=>pe(this.totals[r],G(o,s)));this.totals[r]=a,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:ne(()=>{const r=G(_e(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),Qt(t[s])}))}}class mU extends Mc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const i=this.history[o];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){const l=i[a];e.push(l.data()),t.push(o),s.push(a)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class gU extends Mc{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||eb,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=hU),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");gf(this.yieldEvery)&&(this.maybeWait=EW(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await Pi(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Pi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Pi(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Pi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Pi(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):gf(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Pi(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Pi(e),await this.trainEnd(e))}}function qT(n,e){return n==null&&(n={}),n instanceof Mc?[n]:Array.isArray(n)&&n[0]instanceof Mc?n:dt(n).map(s=>new gU(s,e))}class Hs{constructor(){}static registerCallbackConstructor(e,t){D(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Hs.checkForDuplicate(t),Hs.constructors[e]==null&&(Hs.constructors[e]=[]),Hs.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Hs.constructors)Hs.constructors[+t].forEach(r=>{if(r===e)throw new K("Duplicate callback constructor.")})}static clear(){Hs.constructors={}}static createCallbacks(e){const t=[];for(const s in Hs.constructors){const r=+s;e>=r&&t.push(...Hs.constructors[r])}return t.map(s=>new s)}}Hs.constructors={};function KT(n,e,t,s,r,o,i,a,l){const c=new mU,h=[new fU,...Hs.createCallbacks(e)];n!=null&&h.push(...n),h.push(c);const p=new pU(h);return p.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:e,doValidation:a,metrics:l}),{callbackList:p,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function co(n,e={},t=!1){return wh(n,Is.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ef(n,e){return ne(()=>{n.dtype!=="float32"&&(n=ve(n,"float32"));const t=Ee(vh(n),e,!0),s=xa(t.shape,Zt()),r=cn(jr(t,s));return _e(n,r)})}function jg(n,e){return ne(()=>At(vh($e(e,n)),-1))}function _b(n,e){return ne(()=>At(jt($e(e,n)),-1))}function Ob(n,e){return ne(()=>{const t=$e(n,e),s=Jn(jt(n),Zt(),Number.MAX_VALUE),r=jt(_e(t,s));return G(100,At(r,-1))})}function yU(n,e){return ne(()=>{const t=Jn(e,Zt(),Number.MAX_VALUE),s=ms(pe(1,t)),r=Jn(n,Zt(),Number.MAX_VALUE),o=ms(pe(1,r));return At(vh($e(s,o)),-1)})}function xU(n,e){return ne(()=>{const t=jr(0,$e(1,G(n,e)));return At(vh(t),-1)})}function wU(n,e){return ne(()=>{const t=jr(0,$e(1,G(n,e)));return At(t,-1)})}function bU(n,e){return ne(()=>{const t=Ee(G(n,e),-1),s=As(G($e(1,n),e),-1);return jr(0,pe(1,$e(s,t)))})}function vU(n,e){return ne(()=>{const t=Math.log(2),s=$e(e,n),r=$e(pe(s,wa(G(-2,s))),t);return At(r,-1)})}function Bc(n,e,t=!1){return ne(()=>{if(t)e=ph(e);else{const s=Ee(e,e.shape.length-1,!0);e=_e(e,s)}return e=Jn(e,Zt(),1-Zt()),vt(Ee(G(ve(n,"float32"),ms(e)),e.shape.length-1))})}function Rf(n,e,t=!1){return ne(()=>{const s=ve(bu(VW(n)),"int32");e=Jn(e,Zt(),1-Zt());const r=e.shape,o=j(dl(s,r[r.length-1]),r);return Bc(o,e,t)})}function SU(n,e){if(!Qe(n.shape,e.shape))throw new K(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return ne(()=>{const t=Sr(e),s=vt(jt(e));return pe($e(t,G(e,n)),rh(es(s)))})}function qg(n,e){return ne(()=>{let t;return t=Jn(e,Zt(),1-Zt()),t=ms(_e(t,$e(1,t))),At(SU(n,t),-1)})}function kU(n,e){return ne(()=>{const t=Jn(n,Zt(),1),s=Jn(e,Zt(),1);return Ee(G(n,ms(_e(t,s))),-1)})}function NU(n,e){return ne(()=>{const t=ms(pe(Zt(),e));return At($e(e,G(n,t)),-1)})}function XT(n,e){return ne(()=>{const t=Ef(n,-1),s=Ef(e,-1),r=G(t,s);return vt(Ee(r,-1))})}const Af={meanSquaredError:jg,meanAbsoluteError:_b,meanAbsolutePercentageError:Ob,meanSquaredLogarithmicError:yU,squaredHinge:xU,hinge:wU,categoricalHinge:bU,logcosh:vU,categoricalCrossentropy:Bc,sparseCategoricalCrossentropy:Rf,binaryCrossentropy:qg,kullbackLeiblerDivergence:kU,poisson:NU,cosineProximity:XT};function d0(n){if(typeof n=="string"){if(n in Af)return Af[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new K(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YT(n,e){return ne(()=>{const t=G(.5,gs(e)),s=zr(ss(e,t),n.dtype);return At(Ys(n,s),-1)})}function QT(n,e){return ne(()=>zr(Ys(sa(n,-1),sa(e,-1)),"float32"))}function CU(n,e){return ne(()=>ve(Ee(yr(Ys(n,1),Ys(e,1))),"float32"))}function $U(n,e){return ne(()=>ve(Ee(yr(Ys(n,0),Ys(e,1))),"float32"))}function IU(n,e){return ne(()=>{const t=CU(n,e),s=$U(n,e),r=pe(t,s);return ve(xn(ss(r,0),_e(t,r),0),"float32")})}function TU(n,e){return qg(n,e)}function EU(n,e){return n.rank===e.rank&&(n=yi(n,[n.rank-1])),e=sa(e,-1),e.dtype!==n.dtype&&(e=ve(e,n.dtype)),ve(Ys(n,e),"float32")}const RU=jg,AU=jg,DU=_b,_U=_b,OU=Ob,FU=Ob,ZT=Bc,LU=XT,JT=Rf,Df={binaryAccuracy:YT,categoricalAccuracy:QT,precision:IU,categoricalCrossentropy:ZT,sparseCategoricalCrossentropy:JT,mse:RU,MSE:AU,mae:DU,MAE:_U,mape:OU,MAPE:FU,cosine:LU};function PU(n){if(typeof n=="string"&&n in Df)return Df[n];if(typeof n!="string"&&n!=null)return n;throw new K(`Unknown metric ${n}`)}function qp(n){if(Ar(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(Af))if(Af[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(Df))if(Df[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zU(n){const e={Adagrad:()=>Bi.adagrad(.01),Adadelta:()=>Bi.adadelta(1,.95,Zt()),Adam:()=>Bi.adam(.001,.9,.999,Zt()),Adamax:()=>Bi.adamax(.002,.9,.999,Zt(),0),RMSProp:()=>Bi.rmsprop(.001,.9,0,Zt()),SGD:()=>Bi.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new K(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const WN=1*1024*1024;function UN(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!K0(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>WN&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${WN}.`)}}function K0(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!K0(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!K0(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function MU(n,e,t,s=console.log){const r=VU(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(h=>Math.floor(e*h)));let i;if(!r){o.push("Receives inputs"),i=[];for(const h in n.nodesByDepth)i.push(...n.nodesByDepth[h])}s("_".repeat(e)),_f(o,t,s),s("=".repeat(e));const a=n.layers;for(let h=0;h<a.length;++h)r?WU(a[h],t,s):UU(a[h],t,i,s),s((h===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=BU(n),c=$f(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function BU(n){let e;return n.collectedTrainableWeights!=null?e=$f(n.collectedTrainableWeights):e=$f(n.trainableWeights),e}function VU(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function _f(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function WU(n,e,t){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,i=n.getClassName(),a=[`${o} (${i})`,r,s,n.countParams().toString()];_f(a,e,t)}function UU(n,e,t,s){let r,o;try{o=n.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=[];for(const p of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(p)===-1))for(let f=0;f<p.inboundLayers.length;++f){const g=p.inboundLayers[f].name,y=p.nodeIndices[f],b=p.tensorIndices[f];i.push(`${g}[${y}][${b}]`)}const a=n.name,l=n.getClassName(),c=i.length===0?"":i[0],h=[`${a} (${l})`,o,r,n.countParams().toString(),c];_f(h,e,s);for(let p=1;p<i.length;++p)_f(["","","","",i[p]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function e2(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function X0(n,e){if(n===null)return null;if(typeof n=="string")return Ui(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];e2(e,r,o)?t.push(o):t.push(X0(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=Ui(s);t[o]=X0(r,o)}}return t}}function Y0(n,e){if(n==null)return null;if(typeof n=="string")return oo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];e2(e,r,o)?t.push(o):t.push(Y0(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=oo(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=Y0(r,s)}return t}}/** @license See the LICENSE file. */const t2="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const GU=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class ur extends Ye{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const S=this.getClassName().toLowerCase();this.name=Ug(S)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Qo(this.inputs).length!==this.inputs.length)throw new K(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(S=>S.name)}`);Qo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(S=>S.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const S of this.outputs){const $=S.sourceLayer,N=S.nodeIndex,T=S.tensorIndex;this.outputLayers.push($),this.outputLayersNodeIndices.push(N),this.outputLayersTensorIndices.push(T)}for(const S of this.inputs){const $=S.sourceLayer,N=S.nodeIndex,T=S.tensorIndex;Ar(N===0,"input layer has >1 nodes"),Ar(T===0,"input layer has >1 tensors"),this.inputLayers.push($),this.inputLayersNodeIndices.push(N),this.inputLayersTensorIndices.push(T)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let S=0;S<this.inputLayers.length;S++){const $=this.inputLayers[S];if(!($ instanceof kh))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${S} (0-based) originates from layer type ${$.getClassName()}.`);this.inputNames.push($.name),this.feedInputShapes.push($.batchInputShape),this.feedInputNames.push($.name)}for(const S of this.outputLayers)this.outputNames.push(S.name);this.internalInputShapes=this.inputs.map(S=>S.shape),this.internalOutputShapes=this.outputs.map(S=>S.shape);const t={},s={},r={},o={},i={},a=[],l=(S,$,N,T,R,L)=>{(T==null||R==null||L==null)&&(T=S.sourceLayer,R=S.nodeIndex,L=S.tensorIndex);const P=T.inboundNodes[R];if(N.indexOf(P)!==-1)throw new qs(`The tensor ${S.name} at layer "${T.name}" is part of a cycle.`);if($.indexOf(P)!==-1)return;this.containerNodes.add(ur.nodeKey(T,R)),T.id in i||(i[T.id]=Object.keys(i).length),N.indexOf(P)===-1&&N.push(P);const O=P.inboundLayers.length;for(let F=0;F<O;F++){const E=P.inputTensors[F],W=P.inboundLayers[F],X=P.nodeIndices[F],ee=P.tensorIndices[F];l(E,$,N,W,X,ee)}for($.push(P);N.indexOf(P)>=0;)N.splice(N.indexOf(P),1);a.push(P)},c=[],h=[];for(const S of this.outputs)l(S,c,h);const p=a.slice().reverse();for(const S of p){s[S.id]=S,S.id in t||(t[S.id]=0);let $=t[S.id];const N=r[S.outboundLayer.id]==null?0:r[S.outboundLayer.id];$=Math.max($,N),r[S.outboundLayer.id]=$,o[S.outboundLayer.id]=S.outboundLayer,t[S.id]=$;for(let T=0;T<S.inboundLayers.length;T++){const R=S.inboundLayers[T],L=S.nodeIndices[T],P=R.inboundNodes[L],O=t[P.id]==null?0:t[P.id];t[P.id]=Math.max($+1,O),s[P.id]=P}}const f={};for(const S in t){const $=t[S];$ in f||(f[$]=[]),f[$].push(s[S])}const g={};for(const S in r){const $=r[S];$ in g||(g[$]=[]),g[$].push(o[S])}let y=Object.keys(g).map(S=>parseInt(S,10)).sort(Gp);this.layers=[];for(const S of y){const $=g[S];$.sort((N,T)=>{const R=i[N.id],L=i[T.id];return R<L?-1:R>L?1:0});for(const N of $)N instanceof ur&&this.internalContainerRefs.push(N),this.layers.push(N)}this.layersByDepth=g,y=Object.keys(f).map(S=>parseInt(S,10)).sort(Gp);const b=this.inputs.slice(),w=[];for(const S of y)for(const $ of f[S]){const N=$.outboundLayer;if(N!=null){for(const T of $.inputTensors)if(b.indexOf(T)===-1)throw new qs(`Graph disconnected: cannot obtain value for tensor ${T} at layer "${N.name}". The following previous layers were accessed without issue: ${w}`);for(const T of $.outputTensors)b.push(T);w.push(N.name)}}this.nodesByDepth=f;const v=this.layers.map(S=>S.name);for(const S of v){const $=v.filter(N=>N===S).length;if($!==1)throw new qs(`The name "${S}" is used ${$} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(v))}this.outboundNodes=[],this.inboundNodes=[],new Hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(S=>null),outputMasks:this.outputs.map(S=>null),inputShapes:this.inputs.map(S=>S.shape),outputShapes:this.outputs.map(S=>S.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new K("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const o=GU(e);o&&this.parseWeights(e);for(const a of this.layers)for(const[l,c]of a.weights.entries()){const h=o?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(s[h]!=null)throw new K(`Duplicate weight name: ${h}`);s[h]=c,r++}const i=[];for(const a in e){let l=a;if(s[a]==null){const c=a.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[l]!=null)i.push([s[l],e[a]]);else if(t)throw new K(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new K(`${a.length} of ${r} weights are not set: ${a}`)}Ab(i)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],o=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!r.includes(i)).join("/");o!==t&&(e[o]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${t2}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Y0(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return ne(()=>{e=dt(e);const s=new Ko;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return vc(this.outputs,s,t)})}computeMask(e,t){return ne(()=>{e=dt(e);let s;return t==null?s=ua(null,e.length):s=dt(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=Cf(e);if(t.length!==this.inputLayers.length)throw new K(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],c=t[a],h=l.name+"_0_0";s[h]=c}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Gp);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const c of l){const h=c.outboundLayer;if(this.inputLayers.map(b=>b.id).indexOf(h.id)!==-1)continue;const p=[];for(let b=0;b<c.inboundLayers.length;b++){const w=c.inboundLayers[b],v=c.nodeIndices[b],S=c.tensorIndices[b],$=`${w.name}_${v}_${S}`,N=s[$];p.push(N)}const f=h.computeOutputShape(Kn(p)),g=Cf(f),y=h.inboundNodes.indexOf(c);for(let b=0;b<g.length;b++){const w=`${h.name}_${y}_${b}`;s[w]=g[b]}}}const o=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],h=this.outputLayersTensorIndices[a],p=`${l.name}_${c}_${h}`;i.push(p)}for(let a=0;a<i.length;a++){const l=i[a];Ar(l in s),o.push(s[l])}return Kn(o)}runInternalGraph(e,t){t==null&&(t=ua(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],h=e[l],p=t[l];s[c.id]=[h,p]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Gp);for(const l of r){const c=this.nodesByDepth[l];for(const h of c){const p=h.outboundLayer,f=h.inputTensors,g=h.outputTensors,y=new Array;for(const b of f)b.id in s&&y.push(s[b.id]);if(y.length===f.length){let b={},w,v,S,$;if(h.callArgs!=null&&(b=h.callArgs),y.length===1){const[N,T]=y[0];b.mask==null&&(b.mask=T),S=dt(p.call(N,b)),$=dt(p.computeMask(N,T)),w=[N],v=[T]}else w=y.map(N=>N[0]),v=y.map(N=>N[1]),b.mask==null&&(b.mask=v),S=dt(p.call(w,b)),$=dt(p.computeMask(w,v));if(p.activityRegularizer)throw new je("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let N=0;N<g.length;++N){const T=g[N],R=S[N],L=$[N];s[T.id]=[R,L]}}}}const o=[],i=[],a=[];for(const l of this.outputs){Ar(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,h]=s[l.id];a.push(c.shape),o.push(c),i.push(h)}return[o,i,a]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof ur?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=ur.nodeKey(r,o);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new K("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new K(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new K(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ne(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=ur.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const a=i.getClassName(),l=i.getConfig(),c=[];for(let p=0;p<i.inboundNodes.length;p++){const f=i.inboundNodes[p],g=ur.nodeKey(i,p);let y={};if(this.containerNodes.has(g)){if(f.callArgs)try{JSON.stringify(f.callArgs),y=f.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${f.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),y={}}if(f.inboundLayers.length>0){const b=[];for(let w=0;w<f.inboundLayers.length;w++){const v=f.inboundLayers[w],S=f.nodeIndices[w],$=f.tensorIndices[w],N=ur.nodeKey(v,S);let T=t[N];T==null&&(T=0),b.push([v.name,T,$,y])}c.push(b)}}}const h={};h.name=i.name,h.className=a,h.config=l,h.inboundNodes=c,s.push(h)}e.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],c=ur.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let h=t[c];h==null&&(h=0);const p=this.inputLayersTensorIndices[i];r.push([a.name,h,p])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],c=ur.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let h=t[c];h==null&&(h=0);const p=this.outputLayersTensorIndices[i];o.push([a.name,h,p])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},i={};function a(w,v){w.name in i?i[w.name].push(v):i[w.name]=[v]}function l(w,v){const S=[];let $;for(const N of v){const T=N[0],R=N[1],L=N[2];if($=N[3]==null?{}:N[3],!(T in o)){a(w,v);return}const P=o[T];if(P.inboundNodes.length<=R){a(w,v);return}const O=P.inboundNodes[R];S.push(O.outputTensors[L])}S.length>0&&w.apply(Kn(S),$)}function c(w){const v=w.name,S=co(w,t.customObjects!=null?t.customObjects:{});S.setFastWeightInitDuringBuild(r),o[v]=S,w.inboundNodes.forEach(N=>{if(!(N instanceof Array))throw new K(`Corrupted configuration, expected array for nodeData: ${N}`);a(S,N)})}const h=t.name,p=t.layers;for(const w of p)c(w);for(;!TW(i);)for(const w of p){const v=o[w.name];if(v.name in i){const S=i[v.name];delete i[v.name];for(const $ of S)l(v,$)}}const f=[],g=[],y=t.inputLayers;for(const w of y){const v=w[0],S=w[1],$=w[2];Ar(v in o);const T=o[v].inboundNodes[S].outputTensors;f.push(T[$])}const b=t.outputLayers;for(const w of b){const v=w[0],S=w[1],$=w[2];Ar(v in o);const T=o[v].inboundNodes[S].outputTensors;g.push(T[$])}return new e({inputs:f,outputs:g,name:h})}get stateful(){if(this._stateful)throw new K("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ne(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function HU(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function n2(n,e){return HU(n,e,"classWeight")}async function s2(n,e,t,s){if(t!=null){const r=ne(()=>{if(n.shape.length===1)return Lr(n);if(n.shape.length===2){if(n.shape[1]>1)return sa(n,1);if(n.shape[1]===1)return j(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());Ke(r);const i=[];return o.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(t[a])}),Rn(i,"float32")}else return null}function jU(n,e){return G(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const qU=32;function r2(n,e){let t,s;const r=e;t=r.xs,s=r.ys,D(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=GN("input",n.inputNames,t),i=GN("output",n.outputNames,s),a=o[0].shape[0];D(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),D(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<o.length;l++)D(o[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<i.length;l++)D(i[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}function GN(n,e,t){if(t instanceof ut)return[t];if(Array.isArray(t))return D(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new K(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function KU(n){if(n.length===3)throw new je("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function XU(n,e,t){const s=t.batchesPerEpoch!=null;if(D(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),D(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),D(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),D(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),D(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,i;if(r)if(HN(t.validationData))D(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const w=KU(t.validationData);o=w.xs,i=w.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;r?c=l.slice().concat(l.map(w=>"val_"+w)):c=l.slice();const h=qT(t.callbacks,t.yieldEvery),p=t.verbose==null?1:t.verbose,{callbackList:f,history:g}=KT(h,p,t.epochs,null,null,YU(e,t),null,r,c);f.setModel(n),n.history=g,await f.onTrainBegin(),n.stopTraining_=!1;let y=t.initialEpoch==null?0:t.initialEpoch,b=await e.iterator();for(;y<t.epochs;){const w={};await f.onEpochBegin(y);let v=0,S=0;for(s||(b=await e.iterator());!s||v<t.batchesPerEpoch;){const $=await b.next();if(s&&$.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${v} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if($.value!=null){const{xs:N,ys:T}=r2(n,$.value),R={};R.batch=S,R.size=N[0].shape[0],await f.onBatchBegin(S,R);const L=[];if(t.classWeight!=null){const F=n2(t.classWeight,n.outputNames);for(let E=0;E<F.length;++E)L.push(await s2(T[E],null,F[E]))}const P=N.concat(T).concat(L),O=a(P);Ke(P);for(let F=0;F<l.length;++F){const E=l[F],W=O[F];R[E]=W,Qt(W)}await f.onBatchEnd(S,R),jT(R),S++,v++}if(s?v>=t.batchesPerEpoch:$.done){if(r){let N;HN(t.validationData)?N=dt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):N=dt(n.evaluate(o,i,{batchSize:t.validationBatchSize==null?qU:t.validationBatchSize,verbose:0}));for(let T=0;T<n.metricsNames.length;++T)w[`val_${n.metricsNames[T]}`]=N[T]}break}if(n.stopTraining_)break}if(await f.onEpochEnd(y,w),y++,n.stopTraining_)break}return await f.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function YU(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function HN(n){return typeof n.iterator=="function"}function QU(n){return typeof n.next=="function"}async function ZU(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new je("Verbose mode is not implemented yet.");D(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=QU(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const c=await i.next();if(o=ne(()=>{if(c.value){const{xs:h,ys:p}=r2(n,c.value),f=h.concat(p),g=ne(()=>r(f));if(Ke(f),l===0)for(let b=0;b<g.length;++b)o.push(Pe(0));const y=f[0].shape[0];for(let b=0;b<g.length;++b){const w=g[b],v=o[b];o[b]=ne(()=>pe(o[b],G(y,w))),l>0&&Ke(v)}Ke(g),a+=y,++l}return o}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const h=o[c];o[c]=_e(o[c],a),Ke(h)}return Kn(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function h0(n){D(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function gc(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>Zi(s,e,t-e)):Zi(n,e,t-e)}function Q0(n,e){return ne(()=>n==null?null:Array.isArray(n)?n.map(t=>Q0(t,e)):DT(n,e.dtype==="int32"?e:ve(e,"int32")))}function p0(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function o2(n){const e=[];n instanceof ut&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(bh(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function lr(n,e){if(n==null)return;const t=[];if(e instanceof ut)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof ut)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JU(n){return n instanceof ut}function Z0(n){return Array.isArray(n)}function jN(n){return!JU(n)&&!Z0(n)}function qN(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(Z0(n)&&n.length>0)i=!0;else if(jN(n)){for(const a in n)if(n.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new K(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let o;if(jN(n)){n=n,o=[];for(const i of e){if(n[i]==null)throw new K(`No data provided for "${i}". Need data for each key in: ${e}`);o.push(n[i])}}else if(Z0(n)){if(n=n,n.length!==e.length)throw new K(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new K(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=o2(o),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new K(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const c=a.shape[l],h=t[i][l];if(h!=null&&h>=0&&c!==h)throw new K(`${r} expected a batch of elements where each example has shape [${t[i].slice(1,t[i].length)}] (i.e.,tensor shape [*,${t[i].slice(1,t[i].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return o}function eG(n,e,t){const s=Qo(n.map(o=>o.shape[0]));s.sort();const r=Qo(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new K(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new K(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!Qe(s,r))throw new K(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function tG(n,e,t){const s=[jg,qg,Bc];for(let r=0;r<n.length;++r){const o=n[r],i=e[r],a=t[r];if(i!=null){if(i===Bc&&o.shape[o.shape.length-1]===1)throw new K(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const l=o.shape.slice(1),c=a.slice(1);for(let h=0;h<l.length;++h){const p=l[h],f=c[h];if(f!=null&&p!==f)throw new K(`A target Tensor with shape ${o.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function KN(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new K(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new K(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const a=o[i];if(a.shape.length!==t[i].length)throw new K(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[i].length;++l){if(l===0&&!s)continue;const c=a.shape[l],h=t[i][l];if(h!=null&&h!==c)throw new K(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function nG(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const sG="layers-model";class ol extends ur{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new K("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");MU(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=zU(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof No))throw new K("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new K(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(d0(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new K(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>d0(a))}else{const i=d0(e.loss);this.outputs.forEach(a=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const a=this.internalOutputShapes[i],l=this.outputNames[i];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Qi("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([a,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=nG(e.metrics,this.outputNames),o=(i,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[i]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,i])};Qi("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const a=r[i];(c=>{const h="";let p,f,g;for(const y of c){if(typeof y=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(y)!==-1){const w=this.internalOutputShapes[i];w[w.length-1]===1||this.lossFunctions[i]===qg?["accuracy","acc"].indexOf(y)!==-1?f=YT:["crossentropy","ce"].indexOf(y)!==-1&&(f=TU):this.lossFunctions[i]===Rf?["accuracy","acc"].indexOf(y)!==-1?f=EU:["crossentropy","ce"].indexOf(y)!==-1&&(f=JT):["accuracy","acc"].indexOf(y)!==-1?f=QT:["crossentropy","ce"].indexOf(y)!==-1&&(f=ZT);let v;["accuracy","acc"].indexOf(y)!==-1?v="acc":["crossentropy","ce"].indexOf(y)!==-1&&(v="ce"),g=f,p=h+v}else g=PU(y),p=h+qp(y);let b;Qi(p,()=>{b=g}),o(i,p,b)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;h0(r);const i=this.standardizeUserDataXY(e,t,!0,r);try{const a=i[0].concat(i[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,r,s.verbose,s.steps);return Kn(c)}finally{lr(i[0],e),lr(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),ZU(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new K(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new K(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new K("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),i=new Ko;if(e instanceof ut&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new K(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)i.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new K(`No value is provided for the model's input ${l.name}`);i.add(l,c)}const a=vc(o,i);return s?a:a[0]}retrieveSymbolicTensors(e){const t=ua(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(a=>a.name);for(let a=0;a<e.length;++a){const l=i.indexOf(e[a]);if(l!==-1&&(t[a]=o[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,i)=>{o==null&&r.push(e[i])}),new K(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return ne(()=>{const r=this.checkNumSamples(e);if(s)throw new je("Verbose predictLoop() is not implemented yet.");const o=p0(r,t),i=this.outputs.map(a=>[]);for(let a=0;a<o.length;++a)ne(()=>{const c=o[a][0],h=o[a][1],p=gc(e,c,h),f=[];if(Array.isArray(p))for(let y=0;y<p.length;++y)f.push({key:this.inputs[y],value:p[y]});else f.push({key:this.inputs[0],value:p});const g=new Ko(f);return vc(this.outputs,g)}).forEach((c,h)=>i[h].push(c));return Kn(i.map(a=>Mt(a,0)))})}predict(e,t={}){const s=o2(e);KN(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return h0(r),this.predictLoop(s,r)}finally{lr(s,e)}}predictOnBatch(e){KN(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new qs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const a=this.feedOutputShapes[i];this.feedLossFns[i]===Rf?o.push(a.slice(0,a.length-1).concat([1])):o.push(a)}if(e=qN(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=qN(t,this.feedOutputNames,o,!1,"target"),eG(e,t),tG(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new K(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,i){const[a,l]=this.standardizeUserDataXY(e,t,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const h=n2(r,this.outputNames);c=[];for(let p=0;p<h.length;++p)c.push(await s2(l[p],null,h[p]))}return[a,l,c]}testLoop(e,t,s,r=0,o){return ne(()=>{const i=this.checkNumSamples(t,s,o,"steps"),a=[];if(r>0)throw new je("Verbose mode is not implemented yet.");if(o!=null)throw new je("steps mode in testLoop() is not implemented yet");{const l=p0(i,s),c=Rn(xr(0,i));for(let h=0;h<l.length;++h){const p=l[h][0],f=l[h][1],g=Zi(c,p,f-p),y=Q0(t,g),b=e(y);if(h===0)for(let w=0;w<b.length;++w)a.push(Pe(0));for(let w=0;w<b.length;++w){const v=b[w];a[w]=pe(a[w],G(f-p,v))}}for(let h=0;h<a.length;++h)a[h]=_e(a[h],i)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(DN(e,r)>1){const i=DN(e.slice(0,s),r);o+=`_${i}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],a=()=>{const p=[];for(let b=0;b<this.inputs.length;++b)p.push({key:this.inputs[b],value:s[b]});const f=new Ko(p),g=vc(this.outputs,f,{training:!0});let y;for(let b=0;b<this.lossFunctions.length;++b){const w=this.lossFunctions[b];let v=w(r[b],g[b]);o[b]!=null&&(v=jU(v,o[b]));const S=At(v);t.push(S),b===0?y=v:y=pe(y,v)}for(let b=0;b<this.metricsTensors.length;++b){let w;if(this.outputs.length>1&&b<this.outputs.length)w=t[b];else{const v=this.metricsTensors[b][0],S=this.metricsTensors[b][1];w=At(v(r[S],g[S]))}Qt(w),i.push(w)}return y=At(y),this.calculateLosses().forEach(b=>{y=pe(y,b)}),y},l=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(a,!0,l)].concat(i)}}makeTestFunction(){this.testFunction=e=>ne(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:r[c]});const a=new Ko(i),l=vc(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const h=this.lossFunctions[c],p=At(h(o[c],l[c]));c===0?s=p:s=pe(s,p),t.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const h=this.metricsTensors[c][0],p=this.metricsTensors[c][1],f=At(h(o[p],l[p]));t.push(f)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,i,a,l,c,h,p,f;try{const g=s.batchSize==null?32:s.batchSize;h0(g);const b=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,g);r=b[0],o=b[1],f=b[2];let w=!1,v;if(s.validationData!=null&&s.validationData.length>0){if(w=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new je("validationData including sample weights is not supported yet."):new K(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const F=await this.standardizeUserData(l,c,null,null,!0,g);h=F[0],p=F[1],v=h.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){w=!0;const O=Math.floor(r[0].shape[0]*(1-s.validationSplit)),F=r[0].shape[0];h=gc(r,O,F),i=r,r=gc(r,0,O),p=gc(o,O,F),a=o,o=gc(o,0,O),v=h.concat(p)}else s.validationSteps!=null&&(w=!0);const S=r.concat(o).concat(f);this.checkTrainableWeightsConsistency();const $=this.makeTrainFunction(),N=this.getDedupedMetricsNames();let T,R;w?(this.makeTestFunction(),T=this.testFunction,R=N.slice().concat(N.map(O=>"val_"+O))):(T=null,v=[],R=N.slice());const L=qT(s.callbacks,s.yieldEvery);return await this.fitLoop($,S,N,g,s.epochs,s.verbose,L,T,v,s.shuffle,R,s.initialEpoch,null,null)}finally{this.isTraining=!1,lr(r,e),lr(o,t),lr(i,e),lr(a,t),lr(h,l),lr(p,c),f!=null&&Ke(f)}}async fitLoop(e,t,s,r,o,i,a,l,c,h,p,f,g,y){r==null&&(r=32),o==null&&(o=1),h==null&&(h=!0),f==null&&(f=0);let b=!1;if(l!=null&&c!=null&&(b=!0),y!=null&&(b=!0,g==null))throw new K("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const w=this.checkNumSamples(t,r,g,"steps_per_epoch");let v;w!=null&&(v=xr(0,w)),i==null&&(i=1);const{callbackList:S,history:$}=KT(a,i,o,f,w,g,r,b,p);S.setModel(this),this.history=$,await S.onTrainBegin(),this.stopTraining_=!1;for(let N=f;N<o;++N){await S.onEpochBegin(N);const T={};if(g!=null)throw new je("stepsPerEpoch mode is not implemented yet.");{if(h==="batch")throw new je("batch shuffling is not implemneted yet");h&&w1(v);const R=Rn(v),L=p0(w,r);for(let P=0;P<L.length;++P){const O={};if(await S.onBatchBegin(P,O),ne(()=>{const F=L[P][0],E=L[P][1],W=Zi(R,F,E-F);O.batch=P,O.size=E-F;const X=Q0(t,W),ee=e(X);for(let Q=0;Q<s.length;++Q){const te=s[Q],oe=ee[Q];O[te]=oe,Qt(oe)}if(P===L.length-1&&b){const Q=this.testLoop(l,c,r);for(let te=0;te<s.length;++te){const oe=s[te],U=Q[te];Qt(U),T["val_"+oe]=U}}}),await S.onBatchEnd(P,O),jT(O),this.stopTraining_)break}R.dispose()}if(await S.onEpochEnd(N,T),this.stopTraining_)break}return await S.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return XU(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],a=this.makeTrainFunction()(r.concat(o)),l=[];for(const c of a){const h=await c.data();l.push(h[0])}return Ke(a),lr(s[0],e),lr(s[1],t),Kn(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=A0().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-A0().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=oo(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>oo(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=oo(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[oo(qp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>oo(qp(e)));{const e={};for(const t in this.metrics)e[t]=oo(qp(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=X0(e.optimizer_config),s=co(t);let r;if(typeof e.loss=="string")r=Ui(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(i=>Ui(i));else if(e.loss!=null){r={};for(const i in e.loss)r[i]=Ui(e.loss[i])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(i=>Ui(i));else if(e.metrics!=null){o={};for(const i in e.metrics)o[i]=Ui(e.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const c=S$(e);if(c.length===0)throw new K(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new K(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new K("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await D0(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:sG,generatedBy:`TensorFlow.js tfjs-layers v${t2}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:h,specs:p}=await D0(await this.optimizer.getWeights(),c);s.specs.push(...p),s.data=b$([s.data,h])}return this.userDefinedMetadata!=null&&(UN(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){UN(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ol.className="Model";fe(ol);class i2 extends ol{}i2.className="Functional";fe(i2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Vc extends ol{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Ug("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new K(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Vc||e instanceof ol;let s;if(t){if(s=e,s.outputs.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new K("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new K("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=oU({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new K(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=VT(this.outputs[0])}this.inboundNodes=[],new Hg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ua(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(st(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ol({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new qs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new qs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new qs("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new qs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new K("Legacy serialization format not supported yet.");o=t}else D(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,i=t;const a=new e(i);if(!(a instanceof Vc))throw new je(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of o){const h=co(l,void 0,r);r&&h.setFastWeightInitDuringBuild(!0),a.add(h)}return a}set stopTraining(e){if(this.model==null)throw new K("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new K("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Vc.className="Sequential";fe(Vc);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let An=class extends va{getConfig(){return{}}};class a2 extends An{apply(e,t=1){return UW(e,t)}}a2.className="elu";fe(a2);class l2 extends An{apply(e){return xg(e)}}l2.className="selu";fe(l2);class u2 extends An{apply(e){return Sr(e)}}u2.className="relu";fe(u2);class c2 extends An{apply(e){return ne(()=>oi(6,Sr(e)))}}c2.className="relu6";fe(c2);class d2 extends An{apply(e){return e}}d2.className="linear";fe(d2);class h2 extends An{apply(e){return mr(e)}}h2.className="sigmoid";fe(h2);class p2 extends An{apply(e){return HW(e)}}p2.className="hardSigmoid";fe(p2);class f2 extends An{apply(e){return wa(e)}}f2.className="softplus";fe(f2);class m2 extends An{apply(e){return GW(e)}}m2.className="softsign";fe(m2);class g2 extends An{apply(e){return ri(e)}}g2.className="tanh";fe(g2);let Fb=class extends An{apply(e,t=-1){return ph(e,t)}};Fb.className="softmax";fe(Fb);class y2 extends An{apply(e,t=-1){return cg(e,t)}}y2.className="logSoftmax";fe(y2);class x2 extends An{apply(e){return ne(()=>ne(()=>{const t=Math.sqrt(2),s=G(.5,pe(1,ag(_e(e,t))));return G(e,s)}))}}x2.className="gelu";fe(x2);class w2 extends An{apply(e){return ne(()=>G(.5,G(e,pe(1,ri(G(cn(_e(2,Math.PI)),pe(e,G(.044715,Wr(e,3)))))))))}}w2.className="gelu_new";fe(w2);class b2 extends An{apply(e){return ne(()=>G(e,ri(wa(e))))}}b2.className="mish";fe(b2);class v2 extends An{apply(e,t=1){return ne(()=>G(mr(G(e,t)),e))}}v2.className="swish";fe(v2);function ai(n){return n.getClassName()}function f0(n,e={}){return wh(n,Is.getMap().classNameMap,e,"activation")}function li(n){if(n==null){const e={};return e.className="linear",e.config={},f0(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},f0(e)}else return n instanceof An?n:f0(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rG(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class S2 extends va{}class k2 extends S2{constructor(e){super(),rG(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return ne(()=>{let t=qt([1]);return this.hasL1&&(t=pe(t,Ee(G(this.l1,jt(e))))),this.hasL2&&(t=pe(t,Ee(G(this.l2,vh(e))))),j(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}k2.className="L1L2";fe(k2);const XN={l1l2:"L1L2"};function xt(n){return vb(n)}function YN(n,e={}){return wh(n,Is.getMap().classNameMap,e,"regularizer")}function It(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in XN?XN[n]:n,config:{}};return YN(t)}else return n instanceof S2?n:YN(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class N2 extends Ye{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ve(e);let s=Sr(e);return this.maxValue!=null&&(s=Jn(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}N2.className="ReLU";fe(N2);class C2 extends Ye{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ve(e);return sh(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}C2.className="LeakyReLU";fe(C2);class $2 extends Ye{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=$t(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=It(e.alphaRegularizer),this.alphaConstraint=tn(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new K(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=st(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Jt({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Ve(e),ch(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Dt(this.alphaInitializer),alphaRegularizer:xt(this.alphaRegularizer),alphaConstraint:en(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}$2.className="PReLU";fe($2);let I2=class extends Ye{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new je(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ve(e);return xu(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};I2.className="ELU";fe(I2);class T2 extends Ye{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Ve(e);return G(s,ve(ss(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}T2.className="ThresholdedReLU";fe(T2);class E2 extends Ye{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Fb().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return ne(()=>{let s=Ve(e);const r=t.mask;if(r!=null){const o=G($e(Xn(s.shape),ve(r,s.dtype)),Pe(-1e9));s=pe(s,o)}return this.axis instanceof Array?this.axis.length>1?es($e(s,oh(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}E2.className="Softmax";fe(E2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function il(n,e,t){if(typeof n=="number")return ua(n,e);if(n.length!==e)throw new K(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!MW(r))throw new K(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function gr(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let i;return t==="same"?i=n:i=n-o+1,Math.floor((i+s-1)/s)}function Dr(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+ii([t-e,0]);else if(s==="same")n=n*e;else throw new K(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Lb(n,e){return ne(()=>(Wt(e),e==="channelsFirst"?Je(n,[0,2,3,1]):n))}function R2(n,e){return ne(()=>(Wt(e),e==="channelsFirst"?Je(n,[0,2,3,4,1]):n))}function oG(n,e,t,s=1,r="valid",o,i=1){return ne(()=>{if(o==null&&(o=wr()),Wt(o),n.shape.length!==3)throw new K(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new K(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new K(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=Je(n,[0,2,1])),r==="causal")throw new je("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=sg(n,e,s,r==="same"?"same":"valid","NWC",i);return t!=null&&(a=kr(a,t)),a})}function QN(n,e,t,s=[1,1],r="valid",o,i,a=null){return ne(()=>{if(o==null&&(o=wr()),Wt(o),n.rank!==3&&n.rank!==4)throw new K(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new K(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=Lb(n,o);if(r==="causal")throw new je("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=SI({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:a}),o==="channelsFirst"&&(l=Je(l,[0,3,1,2])),l})}function iG(n,e,t,s=[1,1,1],r="valid",o,i){return ne(()=>{if(o==null&&(o=wr()),Wt(o),n.rank!==4&&n.rank!==5)throw new K(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new K(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=R2(n,o);if(r==="causal")throw new je("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=nw(a,e,s,r==="same"?"same":"valid","NDHWC",i),t!=null&&(a=kr(a,t)),o==="channelsFirst"&&(a=Je(a,[0,4,1,2,3])),a})}class Kg extends Ye{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Kg.verifyArgs(t),this.rank=e,ln(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new je(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=il(t.kernelSize,e,"kernelSize"),this.strides=il(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Os(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Wt(this.dataFormat),this.activation=li(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=$t(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=tn(t.biasConstraint),this.biasRegularizer=It(t.biasRegularizer),this.activityRegularizer=It(t.activityRegularizer),this.dilationRate=il(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new K(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new K(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new K(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ar("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Sb(e.kernelSize,"number",1,3))throw new K(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ai(this.activation),useBias:this.useBias,biasInitializer:Dt(this.biasInitializer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),biasConstraint:en(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class ku extends Kg{constructor(e,t){super(e,t),this.kernel=null,ku.verifyArgs(t),this.filters=t.filters,ln(this.filters,"filters"),this.kernelInitializer=$t(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=tn(t.kernelConstraint),this.kernelRegularizer=It(t.kernelRegularizer)}build(e){e=st(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return ne(()=>{e=Ve(e);let s;const r=this.bias==null?null:this.bias.read(),o=$T(this.activation.getClassName());if(o!=null&&this.rank===2)s=QN(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=oG(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=QN(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=iG(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new je("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=st(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const i=gr(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(i)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Dt(this.kernelInitializer),kernelRegularizer:xt(this.kernelRegularizer),kernelConstraint:en(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new K(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ch extends ku{constructor(e){super(2,e),Ch.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Sb(e.kernelSize,"number",1,2))throw new K(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ch.className="Conv2D";fe(Ch);class $h extends ku{constructor(e){super(3,e),$h.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new K(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}$h.className="Conv3D";fe($h);class A2 extends Ch{constructor(e){if(super(e),this.inputSpec=[new Jt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=st(e),e.length!==4)throw new K("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jt({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return ne(()=>{let s=Ve(e);if(s.shape.length!==4)throw new K(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a;this.dataFormat==="channelsFirst"?(i=2,a=3):(i=1,a=2);const l=r[i],c=r[a],h=this.kernelSize[0],p=this.kernelSize[1],f=this.strides[0],g=this.strides[1],y=Dr(l,f,h,this.padding),b=Dr(c,g,p,this.padding),w=[o,y,b,this.filters];this.dataFormat!=="channelsLast"&&(s=Je(s,[0,2,3,1]));let v=rg(s,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=Je(v,[0,3,1,2])),this.bias!=null&&(v=kr(v,this.bias.read(),this.dataFormat)),this.activation!=null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=st(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return t[s]=this.filters,t[r]=Dr(t[r],l,i,this.padding),t[o]=Dr(t[o],c,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}A2.className="Conv2DTranspose";fe(A2);class D2 extends $h{constructor(e){if(super(e),this.inputSpec=[new Jt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=st(e),e.length!==5)throw new K("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Jt({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return ne(()=>{let s=Ve(e);if(s.shape.length!==5)throw new K(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,a,l;this.dataFormat==="channelsFirst"?(l=2,i=3,a=4):(l=1,i=2,a=3);const c=r[l],h=r[i],p=r[a],f=this.kernelSize[0],g=this.kernelSize[1],y=this.kernelSize[2],b=this.strides[0],w=this.strides[1],v=this.strides[2],S=Dr(c,b,f,this.padding),$=Dr(h,w,g,this.padding),N=Dr(p,v,y,this.padding),T=[o,S,$,N,this.filters];this.dataFormat!=="channelsLast"&&(s=Je(s,[0,2,3,4,1]));let R=sw(s,this.kernel.read(),T,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(R=Je(R,[0,4,1,2,3])),this.bias!==null&&(R=kr(R,this.bias.read(),this.dataFormat)),this.activation!==null&&(R=this.activation.apply(R)),R})}computeOutputShape(e){e=st(e);const t=e.slice();let s,r,o,i;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,i=4):(s=4,r=1,o=2,i=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],h=this.strides[0],p=this.strides[1],f=this.strides[2];return t[s]=this.filters,t[r]=Dr(t[r],h,a,this.padding),t[o]=Dr(t[o],p,l,this.padding),t[i]=Dr(t[i],f,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}D2.className="Conv3DTranspose";fe(D2);class _2 extends ku{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new K("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new K("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new K(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=$t(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=It(t.depthwiseRegularizer),this.depthwiseConstraint=tn(t.depthwiseConstraint),this.pointwiseInitializer=$t(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=It(t.pointwiseRegularizer),this.pointwiseConstraint=tn(t.pointwiseConstraint)}build(e){if(e=st(e),e.length<this.rank+2)throw new K(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new K(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let a=0;a<this.rank;++a)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new Jt({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return ne(()=>{e=Ve(e);let s;if(this.rank===1)throw new je("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Je(e,[0,2,3,1])),s=wg(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=kr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Je(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Dt(this.depthwiseInitializer),e.pointwiseInitializer=Dt(this.pointwiseInitializer),e.depthwiseRegularizer=xt(this.depthwiseRegularizer),e.pointwiseRegularizer=xt(this.pointwiseRegularizer),e.depthwiseConstraint=en(this.depthwiseConstraint),e.pointwiseConstraint=en(this.pointwiseConstraint),e}}_2.className="SeparableConv";class O2 extends _2{constructor(e){super(2,e)}}O2.className="SeparableConv2D";fe(O2);class Xg extends ku{constructor(e){super(1,e),Xg.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Sb(e.kernelSize,"number",1,1))throw new K(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Xg.className="Conv1D";fe(Xg);class F2 extends Ye{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ne(()=>{if(e=Ve(e),this.dataFormat==="channelsLast"){const s=jp(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return jp(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=jp(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return jp(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}F2.className="Cropping2D";fe(F2);class L2 extends Ye{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,LW(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return ne(()=>{let s=Ve(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Je(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],a=this.interpolation==="nearest"?pr.resizeNearestNeighbor(s,[o,i]):pr.resizeBilinear(s,[o,i]);return Je(a,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?pr.resizeNearestNeighbor(s,[o,i]):pr.resizeBilinear(s,[o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}L2.className="UpSampling2D";fe(L2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aG(n,e,t=[1,1],s="valid",r,o){return ne(()=>{r==null&&(r=wr()),Wt(r);let i=Lb(n,r);if(n.rank!==4)throw new K(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new K(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=yu(i,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=Je(i,[0,3,1,2])),i})}class P2 extends Kg{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=$t(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=tn(e.depthwiseConstraint),this.depthwiseRegularizer=It(e.depthwiseRegularizer)}build(e){if(e=st(e),e.length<4)throw new K(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new K(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ne(()=>{e=Ve(e);let s=aG(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=kr(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=st(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=gr(t,this.kernelSize[0],this.padding,this.strides[0]),i=gr(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,i]:[e[0],o,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Dt(this.depthwiseInitializer),e.depthwiseRegularizer=xt(this.depthwiseRegularizer),e.depthwiseConstraint=en(this.depthwiseRegularizer),e}}P2.className="DepthwiseConv2D";fe(P2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function z2(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new K("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function M2(n,e,t,s=!1,r,o,i=!1,a=!1){return ne(()=>{const l=e.shape.length;if(l<3)throw new K(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(xr(2,l));e=Je(e,c),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=ve(ve(r,"bool"),"float32"),r.rank===l-1&&(r=En(r,-1)),r=Je(r,c)),s&&(e=Ds(e,0),r!=null&&(r=Ds(r,0)));const h=[];let p,f=t;const g=e.shape[0],y=_s(e);let b;r!=null&&(b=_s(r));for(let v=0;v<g;++v){const S=y[v],$=ne(()=>n(S,f));if(r==null)p=$[0],f=$[1];else{const N=ne(()=>{const T=b[v],R=$e(gs(T),T),L=pe(G($[0],T),G(f[0],R)),P=f.map((O,F)=>pe(G($[1][F],T),G(O,R)));return{output:L,newStates:P}});p=N.output,f=N.newStates}a&&h.push(p)}let w;return a&&(w=ts(h,1)),[p,w,f]})}class wi extends Ye{constructor(e){super(e);let t;if(e.cell==null)throw new K("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Mb({cells:e.cell}):t=e.cell,t.stateSize==null)throw new K("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Jt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return xr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){j0(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const i of t)o.push([e[0],i]);return[r].concat(o)}else return r}computeMask(e,t){return ne(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new je("Constants support is not implemented in RNN yet.");j0(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Jt({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Qe(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new K(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new Jt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){ne(()=>{if(!this.stateful)throw new Rr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>qt([s,r])):this.states_=[qt([s,this.cell.stateSize])];else if(e==null)Ke(this.states_),this.keptStates!=null&&(Ke(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>qt([s,r])):this.states_[0]=qt([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ke(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,i];if(!Qe(o.shape,a))throw new K(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Qt(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=z2(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let i=[],a=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new Jt({shape:c.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof Gr){const c=[e].concat(i),h=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=h;const f=super.apply(c,t);return this.inputSpec=p,f}else return super.apply(e,t)}call(e,t){return ne(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=Ve(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new K(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},c=M2((y,b)=>{const w=this.cell.call([y].concat(b),a);return[w[0],w.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),h=c[0],p=c[1],f=c[2];this.stateful&&this.resetStates(f,r);const g=this.returnSequences?p:h;return this.returnState?[g].concat(f):g})}getInitialState(e){return ne(()=>{let t=qt(e.shape);return t=Ee(t,[1,2]),t=bh(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?G0(t,[1,s]):t):this.cell.stateSize>1?[G0(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===wi.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,o=co(r,s);return new e(Object.assign(t,{cell:o}))}}wi.className="RNN";fe(wi);class Yg extends Ye{}class Pb extends Yg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ln(this.units,"units"),this.activation=li(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=ml([1,ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ml([1,ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=st(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ne(()=>{if(e=e,e.length!==2)throw new K(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ui({ones:()=>gs(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ui({ones:()=>gs(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const i=this.dropoutMask,a=this.recurrentDropoutMask;i!=null?o=Mr(G(e,i),this.kernel.read()):o=Mr(e,this.kernel.read()),this.bias!=null&&(o=kr(o,this.bias.read())),a!=null&&(s=G(s,a));let l=pe(o,Mr(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ai(this.activation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Pb.className="SimpleRNNCell";fe(Pb);class B2 extends wi{constructor(e){e.cell=new Pb(e),super(e)}call(e,t){return ne(()=>{this.cell.dropoutMask!=null&&(Ke(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ke(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}B2.className="SimpleRNN";fe(B2);class zb extends Yg{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new K("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ln(this.units,"units"),this.activation=li(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=li(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=ml([1,ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ml([1,ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=st(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ne(()=>{if(e=e,e.length!==2)throw new K(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ui({ones:()=>gs(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ui({ones:()=>gs(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(e=G(e,o[0]));let h=Mr(e,this.kernel.read());this.useBias&&(h=kr(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=G(r,i[0]));const p=this.recurrentKernel.read(),[f,g]=Yn(p,[2*this.units,this.units],p.rank-1),y=Mr(r,f),[b,w,v]=Yn(h,3,h.rank-1),[S,$]=Yn(y,2,y.rank-1);a=this.recurrentActivation.apply(pe(b,S)),l=this.recurrentActivation.apply(pe(w,$));const N=Mr(G(l,r),g);c=this.activation.apply(pe(v,N));const T=pe(G(a,r),G(pe(1,vt(a)),c));return[T,T]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ai(this.activation),recurrentActivation:ai(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}zb.className="GRUCell";fe(zb);class V2 extends wi{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new zb(e),super(e)}call(e,t){return ne(()=>{this.cell.dropoutMask!=null&&(Ke(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ke(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}V2.className="GRU";fe(V2);class Qg extends Yg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ln(this.units,"units"),this.activation=li(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=li(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=$t(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=tn(e.kernelConstraint),this.recurrentConstraint=tn(e.recurrentConstraint),this.biasConstraint=tn(e.biasConstraint),this.dropout=ml([1,ii([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ml([1,ii([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=st(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(t=class extends Zs{apply(l,c){const h=o.apply([i]),p=new Nb().apply([i]),f=o.apply([i*2]);return ON(ON(h,p),f)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ne(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new K(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ui({ones:()=>gs(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ui({ones:()=>gs(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,h,p;0<this.dropout&&this.dropout<1&&(e=G(e,i[0]));let f=Mr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=G(r,a[0])),f=pe(f,Mr(r,this.recurrentKernel.read())),this.useBias&&(f=kr(f,this.bias.read()));const[g,y,b,w]=Yn(f,4,f.rank-1);l=this.recurrentActivation.apply(g),c=this.recurrentActivation.apply(y),h=pe(G(c,o),G(l,this.activation.apply(b))),p=this.recurrentActivation.apply(w);const v=G(p,this.activation.apply(h));return[v,v,h]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ai(this.activation),recurrentActivation:ai(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),recurrentInitializer:Dt(this.recurrentInitializer),biasInitializer:Dt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:xt(this.kernelRegularizer),recurrentRegularizer:xt(this.recurrentRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),recurrentConstraint:en(this.recurrentConstraint),biasConstraint:en(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Qg.className="LSTMCell";fe(Qg);class W2 extends wi{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Qg(e),super(e)}call(e,t){return ne(()=>{this.cell.dropoutMask!=null&&(Ke(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ke(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}W2.className="LSTM";fe(W2);class Mb extends Yg{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ne(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=l.call(i,t),o.push(i.slice(1))}s=[];for(const a of o.slice().reverse())s.push(...a);return[i[0]].concat(s)})}build(e){j0(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{Qi(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(co(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return q0(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],o[i]])}Ab(t)}}Mb.className="StackedRNNCells";fe(Mb);function ui(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:o}=n,i=()=>o!=null?o(e(),t):_T(e(),t),a=()=>Sh(i,e,s);return!r||r<=1?Qt(a().clone()):Array(r).fill(void 0).map(a).map(c=>Qt(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var lG=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class U2 extends wi{constructor(e){if(e.unroll)throw new je("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new je("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Jt({ndim:5})]}call(e,t){return ne(()=>{if(this.cell.dropoutMask!=null&&(Ke(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ke(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new K("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ne(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=qt(o);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){ne(()=>{if(!this.stateful)throw new Rr("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>qt(o)):this.states_=[qt(o)];else if(e==null)Ke(this.states_),this.keptStates!=null&&(Ke(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>qt(o)):this.states_[0]=qt(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ke(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],c=o;if(!Qe(l.shape,c))throw new K(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Qt(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:a}=this.cell,l=t==="channelsFirst",c=e[l?3:2],h=e[l?4:3],p=gr(c,r[0],o,i[0],a[0]),f=gr(h,r[1],o,i[1],a[1]);return[...e.slice(0,2),...l?[s,p,f]:[p,f,s]]}}U2.className="ConvRNN2D";class Bb extends Qg{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,ln(this.filters,"filters"),this.kernelSize=il(s,2,"kernelSize"),this.kernelSize.forEach(l=>ln(l,"kernelSize")),this.strides=il(r||1,2,"strides"),this.strides.forEach(l=>ln(l,"strides")),this.padding=o||"valid",Os(this.padding),this.dataFormat=i||"channelsLast",Wt(this.dataFormat),this.dilationRate=il(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>ln(l,"dilationRate"))}build(e){var t;e=st(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new K(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,h=this.filters;l=new(t=class extends Zs{apply(f,g){const y=c.apply([h]),b=Xn([h]),w=c.apply([h*2]);return kb([y,b,w])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ne(()=>{if(e.length!==3)throw new K(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ui({ones:()=>gs(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(J,z,q)=>!z||!z[q]?J:G(z[q],J);let h=c(r,l,0),p=c(r,l,1),f=c(r,l,2),g=c(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ui({ones:()=>gs(o),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const y=this.recurrentDropoutMask;let b=c(o,y,0),w=c(o,y,1),v=c(o,y,2),S=c(o,y,3);const $=3,[N,T,R,L]=Yn(this.kernel.read(),a,$),[P,O,F,E]=this.useBias?Yn(this.bias.read(),a):[null,null,null,null];h=this.inputConv(h,N,P,this.padding),p=this.inputConv(p,T,O,this.padding),f=this.inputConv(f,R,F,this.padding),g=this.inputConv(g,L,E,this.padding);const[W,X,ee,Q]=Yn(this.recurrentKernel.read(),a,$);b=this.recurrentConv(b,W),w=this.recurrentConv(w,X),v=this.recurrentConv(v,ee),S=this.recurrentConv(S,Q);const te=this.recurrentActivation.apply(pe(h,b)),oe=this.recurrentActivation.apply(pe(p,w)),U=pe(G(oe,i),G(te,this.activation.apply(pe(f,v)))),Z=G(this.recurrentActivation.apply(pe(g,S)),this.activation.apply(U));return[Z,Z,U]})}getConfig(){const e=super.getConfig(),t=lG(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,r){const o=fo(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?kr(o,s,this.dataFormat):o}recurrentConv(e,t){return fo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Bb.className="ConvLSTM2DCell";fe(Bb);class G2 extends U2{constructor(e){const t=new Bb(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}G2.className="ConvLSTM2D";fe(G2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Vb extends Ye{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return ne(()=>{this.invokeCallHook(e,t);const s=Ve(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return Sh(()=>_T(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Vb.className="Dropout";fe(Vb);class H2 extends Vb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}H2.className="SpatialDropout1D";fe(H2);class j2 extends Ye{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ln(this.units,"units"),this.activation=li(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=$t(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=$t(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=tn(e.kernelConstraint),this.biasConstraint=tn(e.biasConstraint),this.kernelRegularizer=It(e.kernelRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.activityRegularizer=It(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=st(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=st(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return ne(()=>{this.invokeCallHook(e,t);const s=Ve(e),r=$T(this.activation.getClassName());let o;return r!=null?o=Mr(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=Mr(s,this.kernel.read()),this.bias!=null&&(o=kr(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:ai(this.activation),useBias:this.useBias,kernelInitializer:Dt(this.kernelInitializer),biasInitializer:Dt(this.biasInitializer),kernelRegularizer:xt(this.kernelRegularizer),biasRegularizer:xt(this.biasRegularizer),activityRegularizer:xt(this.activityRegularizer),kernelConstraint:en(this.kernelConstraint),biasConstraint:en(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}j2.className="Dense";fe(j2);class q2 extends Ye{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=st(e);for(const t of e.slice(1))if(t==null)throw new K(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Zo(e,1)]}call(e,t){return ne(()=>{this.invokeCallHook(e,t);let s=Ve(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=Je(s,r)}return WW(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}q2.className="Flatten";fe(q2);class K2 extends Ye{constructor(e){super(e),this.supportsMasking=!0,this.activation=li(e.activation)}call(e,t){return ne(()=>{this.invokeCallHook(e,t);const s=Ve(e);return this.activation.apply(s)})}getConfig(){const e={activation:ai(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}K2.className="Activation";fe(K2);class X2 extends Ye{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ne(()=>(e=Ve(e),BW(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}X2.className="RepeatVector";fe(X2);class Y2 extends Ye{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,i=null;for(let l=0;l<r.length;++l){const c=r[l];if(this.isUnknown(c))if(i===null)i=l;else throw new K("Can only specifiy one unknown dimension.");else o*=c}const a=Zo(e);if(i!==null){if(o===0||a%o!==0)throw new K(s);r[i]=a/o}else if(a!==o)throw new K(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ne(()=>{this.invokeCallHook(e,t);const s=Ve(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return j(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Y2.className="Reshape";fe(Y2);class Q2 extends Ye{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=xr(1,e.dims.length+1);if(!Qe(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Jt({ndim:this.dims.length+1})]}computeOutputShape(e){e=st(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return Je(Ve(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Q2.className="Permute";fe(Q2);class Z2 extends Ye{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Ve(e);return Fc(ia(s,this.maskValue),-1)}call(e,t){return ne(()=>{this.invokeCallHook(e,t);const s=Ve(e),i=Fc(ia(s,this.maskValue),-1,!0);return G(s,ve(i,s.dtype))})}}Z2.className="Masking";fe(Z2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class J2 extends Ye{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(dt(e.inputLength))}this.inputDim=e.inputDim,ln(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ln(this.outputDim,"outputDim"),this.embeddingsInitializer=$t(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=It(e.embeddingsRegularizer),this.activityRegularizer=It(e.activityRegularizer),this.embeddingsConstraint=tn(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ne(()=>this.maskZero?(e=Ve(e),ia(e,tt(e))):null)}computeOutputShape(e){if(e=st(e),this.inputLength==null)return[...e,this.outputDim];const t=dt(this.inputLength);if(t.length!==e.length-1)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],i=e[r+1];if(o!=null&&i!=null&&o!==i)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return ne(()=>{this.invokeCallHook(e,t);let s=Ve(e);s.dtype!=="int32"&&(s=zr(s,"int32"));const r=DT(this.embeddings.read(),j(s,[s.size]));return j(r,st(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Dt(this.embeddingsInitializer),embeddingsRegularizer:xt(this.embeddingsRegularizer),activityRegularizer:xt(this.activityRegularizer),embeddingsConstraint:en(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}J2.className="Embedding";fe(J2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ka extends Ye{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new je}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],i=t[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new K("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[st(e)]),e=e,e.length<2)throw new K(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=Qo(t),t.length>1)throw new K(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&Qo(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ne(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=ii(r);for(let i of e){const a=i.rank;for(let l=0;l<o-a;++l)i=bh(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const l of e){const c=l.rank;if(c==null){const h=l.shape,p=h[0],f=h.slice(1).concat([p]);let g=j(l,[p].concat(Zo(h.slice(1))));g=Je(g,[1,0]),g=j(g,f),s.push(g),o=!0}else if(c>1){const h=xr(1,c).concat([0]);s.push(Je(l,h)),o=!0}else s.push(l)}let i=this.mergeFunction(s);const a=i.rank;if(o){if(a==null){const l=i.shape,c=l.length,h=l[c-1],p=[h].concat(l.slice(0,l.length-1));i=j(Je(j(i,[-1,h]),[1,0]),p)}else if(a>1){const l=[a-1].concat(xr(0,a-1));i=Je(i,l)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Qo(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return ne(()=>{if(t==null)return null;if(!Array.isArray(t))throw new K("`mask` should be an Array");if(!Array.isArray(e))throw new K("`inputs` should be an Array");if(t.length!==e.length)throw new K(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:En(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=yr(s,t[r]);return s})}}class eE extends ka{constructor(e){super(e)}mergeFunction(e){return ne(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=pe(t,e[s]);return t})}}eE.className="Add";fe(eE);class tE extends ka{constructor(e){super(e)}mergeFunction(e){return ne(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=G(t,e[s]);return t})}}tE.className="Multiply";fe(tE);class nE extends ka{constructor(e){super(e)}mergeFunction(e){return ne(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=pe(t,e[s]);return G(1/e.length,t)})}}nE.className="Average";fe(nE);class sE extends ka{constructor(e){super(e)}mergeFunction(e){return ne(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=jr(t,e[s]);return t})}}sE.className="Maximum";fe(sE);class rE extends ka{constructor(e){super(e)}mergeFunction(e){return ne(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=oi(t,e[s]);return t})}}rE.className="Minimum";fe(rE);class oE extends ka{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new K("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let i=!1;for(const a of s)if(Qe(a,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new K("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ne(()=>kb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new K("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new K("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new K("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new K(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ne(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<e.length;++i)t[i]==null?r.push(ve(gs(e[i]),"bool")):t[i].rank<e[i].rank?r.push(En(t[i],-1)):r.push(t[i]);const o=Mt(r,this.axis);return ng(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}oE.className="Concatenate";fe(oE);function yc(n,e){for(;n<0;)n+=e;return n}function uG(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new je("batchDot is not implemented for tensors of 4D or higher rank yet");if(D(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),D(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new je("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return ne(()=>{let i;if(s>r){i=s-r;const l=[];for(let c=0;c<i;++c)l.push(1);e=j(e,e.shape.concat(l))}else if(r>s){i=r-s;const l=[];for(let c=0;c<i;++c)l.push(1);n=j(n,n.shape.concat(l))}else i=0;let a;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?a=Ee(G(n,e),o[0]):a=Ee(G(Je(n,[1,0]),e),o[1]);else{const l=o[0]!==n.shape.length-1,c=o[1]===e.shape.length-1;a=qe(n,e,l,c)}if(i>0){let l;s>r?l=s+r-3:l=s-1;const c=[];for(let h=l;h<l+i;++h)c.push(h);a=yi(a,c)}return a.shape.length===1&&(a=En(a,1)),a})}class iE extends ka{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){D(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new je("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new K(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new K(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>yc(o,e[i].shape.length)):r=[yc(this.axes,t.shape.length),yc(this.axes,s.shape.length)],this.normalize&&(t=Ef(t,r[0]),s=Ef(s,r[1])),uG(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[yc(this.axes,e.length),yc(this.axes,t.length)],s}computeOutputShape(e){D(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new je("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}iE.className="Dot";fe(iE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aE extends Ye{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ne(()=>{this.invokeCallHook(e,t);const s=Ve(e);return Sh(()=>pe(Gg(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}aE.className="GaussianNoise";fe(aE);class lE extends Ye{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ne(()=>{this.invokeCallHook(e,t);const s=Ve(e);return this.rate>0&&this.rate<1?Sh(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return G(s,Gg(s.shape,1,o))},()=>s,t.training||!1):s})}}lE.className="GaussianDropout";fe(lE);class uE extends Ye{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ve(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ne(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Sh(()=>{const o=Ve(e),a=-1.6732632423543772*1.0507009873554805;let l=vo(gi(s),this.rate);l=zr(l,"float32");const c=((1-this.rate)*(1+this.rate*a**2))**-.5,h=-c*a*this.rate,p=pe(G(o,l),G(pe(l,-1),a));return pe(G(p,c),h)},()=>Ve(e),t.training||!1)}return e})}}uE.className="AlphaDropout";fe(uE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wc(n,e,t,s,r,o=.001){let i;if(n.rank===2)i=j1(n,e,t,s,r,o);else if(n.rank===3)i=q1(n,e,t,s,r,o);else if(n.rank===4)i=K1(n,e,t,s,r,o);else throw new je(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function cG(n,e,t,s,r=.001){return ne(()=>{const o=lh(n,s),i=o.mean,a=o.variance;return[Wc(n,i,a,t,e,r),i,a]})}function dG(n,e,t,s,r=.001){return ne(()=>{const o=lh(n,s),i=o.mean,a=o.variance,l=[];for(const y of xr(0,n.rank))s.indexOf(y)!==-1?l.push(1):l.push(n.shape[y]);const c=j(i,l),h=j(a,l),p=e==null?null:j(e,l),f=t==null?null:j(t,l);return[Wc(n,c,h,f,p,r),i,a]})}function hG(n,e,t,s,r=.001){return Qe(s.slice().sort(),xr(0,n.rank-1))?cG(n,e,t,s,r):dG(n,e,t,s,r)}class cE extends Ye{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=$t(e.betaInitializer||"zeros"),this.gammaInitializer=$t(e.gammaInitializer||"ones"),this.movingMeanInitializer=$t(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=$t(e.movingVarianceInitializer||"ones"),this.betaConstraint=tn(e.betaConstraint),this.gammaConstraint=tn(e.gammaConstraint),this.betaRegularizer=It(e.betaRegularizer),this.gammaRegularizer=It(e.gammaRegularizer)}build(e){e=st(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new K(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Jt({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ne(()=>{const s=t.training==null?!1:t.training,r=Ve(e),o=r.shape,i=o.length,a=xr(0,i),l=this.axis>=0?this.axis:this.axis+i;a.splice(l,1);const c=ua(1,i);c[l]=o[l];const h=a.slice();h.sort();const p=!Qe(h,xr(0,i).slice(0,i-1)),f=()=>{if(p){const S=j(this.movingMean.read(),c),$=j(this.movingVariance.read(),c),N=this.center?j(this.beta.read(),c):null,T=this.scale?j(this.gamma.read(),c):null;return Wc(r,S,$,N,T,this.epsilon)}else return Wc(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return f();const[g,y,b]=hG(r,this.gamma.read(),this.beta.read(),a,this.epsilon),w=(S,$,N)=>{ne(()=>{const T=1-N,R=S.read(),L=G($e(R,$),T);S.write($e(R,L))})};return(()=>{w(this.movingMean,y,this.momentum),w(this.movingVariance,b,this.momentum)})(),g})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dt(this.betaInitializer),gammaInitializer:Dt(this.gammaInitializer),movingMeanInitializer:Dt(this.movingMeanInitializer),movingVarianceInitializer:Dt(this.movingVarianceInitializer),betaRegularizer:xt(this.betaRegularizer),gammaRegularizer:xt(this.gammaRegularizer),betaConstraint:en(this.betaConstraint),gammaConstraint:en(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}cE.className="BatchNormalization";fe(cE);class dE extends Ye{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=$t(e.betaInitializer||"zeros"),this.gammaInitializer=$t(e.gammaInitializer||"ones"),this.betaRegularizer=It(e.betaRegularizer),this.gammaRegularizer=It(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=st(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Qo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=Ve(e),r=s.shape,o=r.length;return ne(()=>{let{mean:a,variance:l}=lh(s,this.axis,!0);const c=ua(1,o);for(const b of this.axis)c[b]=r[b];const h=b=>b!=null&&b.shape.length!==o?j(b,c):b;let p=this.scale?h(this.gamma.read()):null,f=this.center?h(this.beta.read()):null;const g=[],y=[];for(let b=0;b<o;++b)this.axis.indexOf(b)!==-1?(g.push(r[b]),y.push(1)):(g.push(1),y.push(r[b]));return a=Ts(a,g),l=Ts(l,g),p!=null&&(p=Ts(p,y)),f!=null&&(f=Ts(f,y)),Wc(s,a,l,f,p,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Dt(this.betaInitializer),gammaInitializer:Dt(this.gammaInitializer),betaRegularizer:xt(this.betaRegularizer),gammaRegularizer:xt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}dE.className="LayerNormalization";fe(dE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pG(n,e,t){return ne(()=>{if(n.rank!==4)throw new K(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new K("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=wr()),t!=="channelsLast"&&t!=="channelsFirst")throw new K(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],So(n,s)})}class hE extends Ye{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?wr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new K(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new K(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new K(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){e=st(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return ne(()=>pG(Ve(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}hE.className="ZeroPadding2D";fe(hE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zg(n,e,t,s,r,o){return ne(()=>{Wt(r),TT(o),Os(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=wr()),o==null&&(o="max"),n=Lb(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=ah(n,e,t,a):i=Jd(n,e,t,a),r==="channelsFirst"&&(i=Je(i,[0,3,1,2])),i})}function pE(n,e,t,s,r,o){return ne(()=>{Wt(r),TT(o),Os(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=wr()),o==null&&(o="max"),n=R2(n,r);let i;const a=s==="same"?"same":"valid";return o==="max"?i=yw(n,e,t,a):i=H1(n,e,t,a),r==="channelsFirst"&&(i=Je(i,[0,4,1,2,3])),i})}class fE extends Ye{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new K(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(ln(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new K(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);ln(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Os(this.padding),this.inputSpec=[new Jt({ndim:3})]}computeOutputShape(e){e=st(e);const t=gr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ne(()=>{this.invokeCallHook(e,t),e=bh(Ve(e),2);const s=this.poolingFunction(Ve(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return yi(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class mE extends fE{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Wt(o),Os(r),Zg(e,t,s,r,o,"max")}}mE.className="MaxPooling1D";fe(mE);class gE extends fE{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Wt(o),Os(r),Zg(e,t,s,r,o,"avg")}}gE.className="AveragePooling1D";fe(gE);class yE extends Ye{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new K(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ln(this.poolSize,"poolSize"),ln(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),Os(this.padding),this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){e=st(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=gr(t,this.poolSize[0],this.padding,this.strides[0]),s=gr(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return ne(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class xE extends yE{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Wt(o),Os(r),Zg(e,t,s,r,o,"max")}}xE.className="MaxPooling2D";fe(xE);class wE extends yE{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Wt(o),Os(r),Zg(e,t,s,r,o,"avg")}}wE.className="AveragePooling2D";fe(wE);class bE extends Ye{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new K(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ln(this.poolSize,"poolSize"),ln(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),Os(this.padding),this.inputSpec=[new Jt({ndim:5})]}computeOutputShape(e){e=st(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=gr(t,this.poolSize[0],this.padding,this.strides[0]),s=gr(s,this.poolSize[1],this.padding,this.strides[1]),r=gr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return ne(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ve(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class vE extends bE{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Wt(o),Os(r),pE(e,t,s,r,o,"max")}}vE.className="MaxPooling3D";fe(vE);class SE extends bE{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Wt(o),Os(r),pE(e,t,s,r,o,"avg")}}SE.className="AveragePooling3D";fe(SE);class kE extends Ye{constructor(e){super(e),this.inputSpec=[new Jt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new je}}class NE extends kE{constructor(e){super(e||{})}call(e,t){return ne(()=>{const s=Ve(e);return At(s,1)})}}NE.className="GlobalAveragePooling1D";fe(NE);class CE extends kE{constructor(e){super(e||{})}call(e,t){return ne(()=>{const s=Ve(e);return As(s,1)})}}CE.className="GlobalMaxPooling1D";fe(CE);class $E extends Ye{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Wt(this.dataFormat),this.inputSpec=[new Jt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new je}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class IE extends $E{call(e,t){return ne(()=>{const s=Ve(e);return this.dataFormat==="channelsLast"?At(s,[1,2]):At(s,[2,3])})}}IE.className="GlobalAveragePooling2D";fe(IE);class TE extends $E{call(e,t){return ne(()=>{const s=Ve(e);return this.dataFormat==="channelsLast"?As(s,[1,2]):As(s,[2,3])})}}TE.className="GlobalMaxPooling2D";fe(TE);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class EE extends Ye{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=co(r,s);delete t.layer;const i={layer:o};return Object.assign(i,t),new e(i)}}class RE extends EE{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=st(e),e.length<3)throw new K(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=st(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return ne(()=>(e=Ve(e),M2((i,a)=>[Ve(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}RE.className="TimeDistributed";fe(RE);function fG(n){Sa(FW,"BidirectionalMergeMode",n)}const mG="concat";class AE extends EE{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=co(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=co(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?mG:e.mergeMode,fG(this.mergeMode),e.weights)throw new je("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):Kn(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=z2(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const i=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new K("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const h=s.map(p=>new Jt({shape:p.shape}));this.forwardLayer.stateSpec=h.slice(0,c/2),this.backwardLayer.stateSpec=h.slice(c/2),a.push(...h)}if(r!=null)throw new je("Support for constants in Bidirectional layers is not implemented yet.");const l=i[0]instanceof Gr;for(const c of i)if(c instanceof Gr!==l)throw new K("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(i),h=this.inputSpec.concat(a),p=this.inputSpec;this.inputSpec=h;const f=super.apply(c,t);return this.inputSpec=p,f}else return super.apply(e,t)}call(e,t){return ne(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=Ds(o,1));let a;return this.mergeMode==="concat"?a=kb([r,o]):this.mergeMode==="sum"?a=pe(r,o):this.mergeMode==="ave"?a=G(.5,pe(r,o)):this.mergeMode==="mul"?a=G(r,o):this.mergeMode==null&&(a=[r,o]),this.returnState?this.mergeMode==null?a.concat(i):[a].concat(i):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Qi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Qi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=co(t.layer);if(delete t.layer,t.numConstants!=null)throw new je("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}AE.className="Bidirectional";fe(AE);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class DE extends Ye{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ne(()=>(e=Ve(e),e.dtype!=="float32"&&(e=zr(e,"float32")),pe(G(e,this.scale),this.offset)))}}DE.className="Rescaling";fe(DE);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:gG,cropAndResize:yG}=pr;class _E extends Ye{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,o,i,a,l){return ne(()=>{let c,h=!1;const p=t/i,f=s/a,g=(r+t)/i,y=(o+s)/a,b=[p,f,g,y],w=[];e.rank===3?(h=!0,c=ts([e])):c=e;for(let T=0;T<c.shape[0];T++)w.push(b);const v=Xs(w,[w.length,4]),S=aa(0,w.length,1,"int32"),N=yG(c,v,S,[r,o],"nearest");return zr(h?Ve(_s(N)):N,l)})}upsize(e,t,s,r){return ne(()=>{const o=gG(e,[t,s]);return zr(o,r)})}call(e,t){return ne(()=>{const s=Ve(e),r=s.dtype,o=s.shape,i=o[o.length-3],a=o[o.length-2];let l=0;i!==this.height&&(l=Math.floor((i-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,i,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=st(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}_E.className="CenterCrop";fe(_E);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xG(n,e,t,s){let r=Ve(n);if(r.dtype!=="int32"&&(r=zr(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=En(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=En(r,-1)),r.rank>2)throw new K(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const i=["multiHot","oneHot"].includes(e),a=r;let l;if(typeof s<"u"&&e==="count"?l=kf(a,s,t,i):l=kf(a,[],t,i),e!=="tfIdf")return l;if(s)return G(l,s);throw new K("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class OE extends Ye{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=st(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ne(()=>{e=Ve(e),e.dtype!=="int32"&&(e=zr(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new K(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=Ve(t.countWeights)}const r=As(e),o=ul(e),i=ss(this.numTokens,r).bufferSync().get(0),a=vo(o,0).bufferSync().get(0);if(!(i&&a))throw new K(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return xG(e,this.outputMode,this.numTokens,s)})}}OE.className="CategoryEncoding";fe(OE);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const wG=["bilinear","nearest"],ZN=new Set(wG);class FE extends Ye{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(ZN.has(e.interpolation))this.interpolation=e.interpolation;else throw new K(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=st(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ne(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return pr.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return pr.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...ZN]} are supported`)})}}FE.className="Resizing";fe(FE);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class LE{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}LE.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class PE extends Ye{constructor(e){super(e),this.randomGenerator=new LE(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}PE.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const bG=["bilinear","nearest"],JN=new Set(bG);class zE extends PE{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new K(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new K(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new K(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(JN.has(s))this.interpolation=s;else throw new K(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=st(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return ne(()=>{const s=Ve(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=gi([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*r;o=Math.round(o);const i=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return pr.resizeBilinear(e,i);case"nearest":return pr.resizeNearestNeighbor(e,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...JN]} are supported`)}})}}zE.className="RandomWidth";fe(zE);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vG=se();vG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var hs;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(hs||(hs={}));var eC;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(eC||(eC={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wb={};function SG(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};Wb[n]=t}function ME(n){return Wb[n]}function kG(n){delete Wb[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,l=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd,c=a<0?e.inputNames.length+a:a;if(o.type==="tensor")return gn(e.inputNames[c],t,s,r);if(o.type==="tensors"){const f=e.inputs.slice(a,l);return e.inputNames.slice(a,l).filter((y,b)=>{var w;return((w=f[b])===null||w===void 0?void 0:w.op)!=="NoOp"}).map(y=>gn(y,t,s,r))}const h=gn(e.inputNames[c],t,s,r),p=h.dataSync();return o.type==="number"?p[0]:Rs(h.shape,p)}const i=e.attrParams[n];return i&&i.value}function gn(n,e,t,s){const[r,o]=ps(n,t);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const i=t.currentContextIds.find(a=>!!e[Of(r,a)]);return i!==void 0?e[Of(r,i)][o]:void 0}function tC(n,e,t){return e[Of(n,t.currentContextId)]}function io(n,e){const[t,s,r]=ps(n,e);return[Of(t,e&&e.currentContextId),s,r]}function Of(n,e){return e?`${n}-${e}`:n}function ps(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const o=s[0],i=s.length===3?s[1]:void 0,a=Number(s[s.length-1]);r=[o,a,i]}return t&&e.parseNodeNameCache.set(n,r),r}function pf(n,e,t){let s=I("pad",n,e,t);if(s==="explicit"){s=I("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function ao(n){return n.kept?n:Lr(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],CG=Object.freeze(Object.defineProperty({__proto__:null,json:NG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $G=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],IG=Object.freeze(Object.defineProperty({__proto__:null,json:$G},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],EG=Object.freeze(Object.defineProperty({__proto__:null,json:TG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],AG=Object.freeze(Object.defineProperty({__proto__:null,json:RG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],_G=Object.freeze(Object.defineProperty({__proto__:null,json:DG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FG=Object.freeze(Object.defineProperty({__proto__:null,json:OG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LG=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],PG=Object.freeze(Object.defineProperty({__proto__:null,json:LG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],MG=Object.freeze(Object.defineProperty({__proto__:null,json:zG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],VG=Object.freeze(Object.defineProperty({__proto__:null,json:BG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],UG=Object.freeze(Object.defineProperty({__proto__:null,json:WG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],HG=Object.freeze(Object.defineProperty({__proto__:null,json:GG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],qG=Object.freeze(Object.defineProperty({__proto__:null,json:jG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],XG=Object.freeze(Object.defineProperty({__proto__:null,json:KG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YG=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],QG=Object.freeze(Object.defineProperty({__proto__:null,json:YG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],JG=Object.freeze(Object.defineProperty({__proto__:null,json:ZG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eH=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],tH=Object.freeze(Object.defineProperty({__proto__:null,json:eH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nH=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],sH=Object.freeze(Object.defineProperty({__proto__:null,json:nH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rH=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],oH=Object.freeze(Object.defineProperty({__proto__:null,json:rH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],aH=Object.freeze(Object.defineProperty({__proto__:null,json:iH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nC{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[CG,IG,EG,AG,_G,FG,PG,MG,VG,UG,HG,qG,XG,QG,JG,tH,sH,oH,aH],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],i=[],a=s.reduce((b,w)=>(b[w.name]=this.mapNode(w),w.op.startsWith("Placeholder")?r.push(b[w.name]):w.op==="Const"?o.push(b[w.name]):(w.input==null||w.input.length===0)&&i.push(b[w.name]),b),{});let l=[];const c=[];let h={},p={};t!=null&&(h=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));const f=Object.keys(a);f.forEach(b=>{const w=a[b];w.inputNames.forEach((v,S)=>{const[$,,N]=io(v),T=a[$];if(T.outputs!=null){const R=T.outputs.indexOf(N);if(R!==-1){const L=`${$}:${R}`;w.inputNames[S]=L}}w.inputs.push(T),T.children.push(w)})}),Object.keys(p).length===0?f.forEach(b=>{const w=a[b];w.children.length===0&&c.push(w)}):Object.keys(p).forEach(b=>{const[w]=io(b),v=a[w];v!=null&&(v.signatureKey=p[b],c.push(v))}),Object.keys(h).length>0?Object.keys(h).forEach(b=>{const[w]=io(b),v=a[w];v&&(v.signatureKey=h[b],l.push(v))}):l=r;let g={};e.library!=null&&e.library.function!=null&&(g=e.library.function.reduce((b,w)=>(b[w.signature.name]=this.mapFunction(w),b),{}));const y={nodes:a,inputs:l,outputs:c,weights:o,placeholders:r,signature:t,functions:g};return i.length>0&&(y.initNodes=i),y}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=ME(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const i=o.type;let a;switch(o.type){case"string":a=J0(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=J0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=i1(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=i1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=t1(e.attr,o.tfName,o.defaultValue||0),a===void 0&&o.tfDeprecatedName&&(a=t1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=o1(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=o1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=e1(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=e1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=l1(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=l1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=r1(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=r1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=a1(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=a1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=n1(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=n1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=s1(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=s1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=sC(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=sC(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:a,type:i},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((p,f)=>(p[f.name]=this.mapNode(f),f.op==="Const"&&r.push(p[f.name]),p),{}));const i=[],a=[];e.signature.inputArg.forEach(p=>{const[f]=io(p.name),g={name:f,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ub(p.type),type:"dtype"}},children:[]};g.signatureKey=p.name,i.push(g),o[f]=g}),Object.keys(o).forEach(p=>{const f=o[p];f.inputNames.forEach((g,y)=>{const[b,,w]=io(g),v=o[b];if(v.outputs!=null){const S=v.outputs.indexOf(w);if(S!==-1){const $=`${b}:${S}`;f.inputNames[y]=$}}f.inputs.push(v),v.children.push(f)})});const c=e.ret;e.signature.outputArg.forEach(p=>{const[f,g]=io(c[p.name]),y=o[f];y!=null&&(y.defaultOutput=g,a.push(y))});const h=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:r,placeholders:s,signature:h}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function lH(n){const e=se().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function BE(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):lH(n);return e?t:t.toLowerCase()}function J0(n,e,t,s=!1){const r=n[e];return r!=null?BE(r.s,s):t}function e1(n,e,t){const s=n[e];return s?s.b:t}function t1(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function Ub(n){switch(typeof n=="string"&&(n=hs[n]),n){case hs.DT_FLOAT:case hs.DT_HALF:return"float32";case hs.DT_INT32:case hs.DT_INT64:case hs.DT_INT8:case hs.DT_UINT8:return"int32";case hs.DT_BOOL:return"bool";case hs.DT_DOUBLE:return"float32";case hs.DT_STRING:return"string";case hs.DT_COMPLEX64:case hs.DT_COMPLEX128:return"complex64";default:return null}}function sC(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function n1(n,e,t){const s=n[e];return s&&s.type?Ub(s.type):t}function s1(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>Ub(r)):t}function VE(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function r1(n,e,t){const s=n[e];return s&&s.shape?VE(s.shape):t}function o1(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function i1(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>BE(o,s)):t}function a1(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>VE(r)):t}function l1(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uH{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return gn(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return gn(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return t1(this.node.rawAttrs,e,t);if(s.s!=null)return J0(this.node.rawAttrs,e,t);if(s.b!=null)return e1(this.node.rawAttrs,e,t);if(s.shape!=null)return r1(this.node.rawAttrs,e,t);if(s.type!=null)return n1(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return o1(this.node.rawAttrs,e,t);if(s.list.s!=null)return i1(this.node.rawAttrs,e,t);if(s.list.shape!=null)return a1(this.node.rawAttrs,e,t);if(s.list.b!=null)return l1(this.node.rawAttrs,e,t);if(s.list.type!=null)return s1(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kn=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:E1,abs:jt,acos:L1,acosh:P1,add:pe,addN:R$,all:ng,any:Fc,argMax:sa,argMin:z1,asin:M1,asinh:B1,atan:V1,atan2:W1,atanh:U1,avgPool:Jd,avgPool3d:H1,basicLSTMCell:A$,batchNorm:gu,batchNorm2d:j1,batchNorm3d:q1,batchNorm4d:K1,batchToSpaceND:eh,bincount:X1,bitwiseAnd:D$,booleanMaskAsync:gI,broadcastArgs:_$,broadcastTo:Yi,buffer:He,cast:ve,ceil:Y1,clipByValue:Jn,clone:Lr,complex:po,concat:Mt,concat1d:Q1,concat2d:Z1,concat3d:J1,concat4d:ew,conv1d:sg,conv2d:fo,conv2dTranspose:rg,conv3d:nw,conv3dTranspose:sw,cos:th,cosh:og,cosineWindow:Eg,cumprod:zc,cumsum:ig,denseBincount:kf,depthToSpace:rw,depthwiseConv2d:yu,diag:F$,dilation2d:ow,div:_e,divNoNan:iw,dot:aw,dropout:Fw,einsum:Wi,elu:xu,enclosingPowerOfTwo:Lw,ensureShape:L$,equal:Ys,erf:ag,euclideanNorm:uw,exp:es,expandDims:En,expm1:cw,eye:lg,fft:fh,fill:xa,floor:bu,floorDiv:tg,fused:CI,gather:vu,gatherND:bI,greater:ss,greaterEqual:vo,ifft:fl,imag:nh,image:pr,inTopKAsync:vI,irfft:kg,isFinite:dw,isInf:hw,isNaN:pw,leakyRelu:sh,less:cl,lessEqual:mi,linalg:Mw,linspace:M$,localResponseNormalization:fw,log:ms,log1p:rh,logSigmoid:mw,logSoftmax:cg,logSumExp:oh,logicalAnd:yr,logicalNot:ih,logicalOr:dg,logicalXor:gw,losses:DI,lowerBound:V$,matMul:qe,max:As,maxPool:ah,maxPool3d:yw,maxPoolWithArgmax:W$,maximum:jr,mean:At,meshgrid:U$,min:ul,minimum:oi,mirrorPad:xw,mod:ww,moments:lh,movingAverage:yI,mul:G,multiRNNCell:G$,multinomial:H$,neg:vt,norm:wu,notEqual:ia,oneHot:dl,ones:Xn,onesLike:gs,op:V,outerProduct:j$,pad:So,pad1d:q$,pad2d:K$,pad3d:X$,pad4d:Y$,pool:bw,pow:Wr,prelu:ch,print:F1,prod:vw,raggedGather:Q$,raggedRange:Z$,raggedTensorToTensor:J$,rand:eI,randomGamma:sI,randomNormal:fg,randomStandardNormal:rI,randomUniform:gi,randomUniformInt:oI,range:aa,real:hl,reciprocal:Cw,relu:Sr,relu6:mg,reshape:j,reverse:Ds,reverse1d:iI,reverse2d:aI,reverse3d:lI,reverse4d:uI,rfft:mh,round:gg,rsqrt:yg,scalar:Pe,scatterND:xI,searchSorted:hg,selu:xg,separableConv2d:wg,setdiff1dAsync:cI,sigmoid:mr,sign:$w,signal:AI,sin:bg,sinh:vg,slice:et,slice1d:dh,slice2d:Sg,slice3d:hh,slice4d:pl,softmax:ph,softplus:wa,spaceToBatchND:uh,sparse:_I,sparseToDense:wI,spectral:RI,split:Yn,sqrt:cn,square:ft,squaredDifference:Ng,squeeze:yi,stack:ts,step:ba,stridedSlice:Iw,string:OI,sub:$e,sum:Ee,tan:Tw,tanh:ri,tensor:Xs,tensor1d:Rn,tensor2d:rl,tensor3d:Ew,tensor4d:dI,tensor5d:hI,tensor6d:pI,tensorScatterUpdate:fI,tile:Ts,topk:Aw,transpose:Je,truncatedNormal:$g,unique:Dw,unsortedSegmentSum:Ig,unstack:_s,upperBound:mI,variable:_w,where:xn,whereAsync:Ow,zeros:qt,zerosLike:tt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cH=(n,e,t,s=kn)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(I("a",n,e,t),I("b",n,e,t))];case"AddN":return[s.addN(I("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(I("a",n,e,t),I("b",n,e,t))];case"Mul":return[s.mul(I("a",n,e,t),I("b",n,e,t))];case"RealDiv":case"Div":return[s.div(I("a",n,e,t),I("b",n,e,t))];case"DivNoNan":return[s.divNoNan(I("a",n,e,t),I("b",n,e,t))];case"FloorDiv":return[s.floorDiv(I("a",n,e,t),I("b",n,e,t))];case"Sub":return[s.sub(I("a",n,e,t),I("b",n,e,t))];case"Minimum":return[s.minimum(I("a",n,e,t),I("b",n,e,t))];case"Maximum":return[s.maximum(I("a",n,e,t),I("b",n,e,t))];case"Pow":return[s.pow(I("a",n,e,t),I("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dH=(n,e,t,s=kn)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(I("x",n,e,t))];case"Acos":return[s.acos(I("x",n,e,t))];case"Acosh":return[s.acosh(I("x",n,e,t))];case"Asin":return[s.asin(I("x",n,e,t))];case"Asinh":return[s.asinh(I("x",n,e,t))];case"Atan":return[s.atan(I("x",n,e,t))];case"Atan2":return[s.atan2(I("x",n,e,t),I("y",n,e,t))];case"Atanh":return[s.atanh(I("x",n,e,t))];case"Ceil":return[s.ceil(I("x",n,e,t))];case"Complex":return[s.complex(I("real",n,e,t),I("imag",n,e,t))];case"Cos":return[s.cos(I("x",n,e,t))];case"Cosh":return[s.cosh(I("x",n,e,t))];case"Elu":return[s.elu(I("x",n,e,t))];case"Erf":return[s.erf(I("x",n,e,t))];case"Exp":return[s.exp(I("x",n,e,t))];case"Expm1":return[s.expm1(I("x",n,e,t))];case"Floor":return[s.floor(I("x",n,e,t))];case"Log":return[s.log(I("x",n,e,t))];case"Log1p":return[s.log1p(I("x",n,e,t))];case"Imag":return[s.imag(I("x",n,e,t))];case"Neg":return[s.neg(I("x",n,e,t))];case"Reciprocal":return[s.reciprocal(I("x",n,e,t))];case"Real":return[s.real(I("x",n,e,t))];case"Relu":return[s.relu(I("x",n,e,t))];case"Round":return[s.round(I("x",n,e,t))];case"Selu":return[s.selu(I("x",n,e,t))];case"Sigmoid":return[s.sigmoid(I("x",n,e,t))];case"Sin":return[s.sin(I("x",n,e,t))];case"Sign":return[s.sign(I("x",n,e,t))];case"Sinh":return[s.sinh(I("x",n,e,t))];case"Softplus":return[s.softplus(I("x",n,e,t))];case"Sqrt":return[s.sqrt(I("x",n,e,t))];case"Square":return[s.square(I("x",n,e,t))];case"Tanh":return[s.tanh(I("x",n,e,t))];case"Tan":return[s.tan(I("x",n,e,t))];case"ClipByValue":return[s.clipByValue(I("x",n,e,t),I("clipValueMin",n,e,t),I("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(I("x",n,e,t))];case"Rsqrt":return[s.rsqrt(gn(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(I("x",n,e,t),I("alpha",n,e,t))];case"Prelu":return[s.prelu(I("x",n,e,t),I("alpha",n,e,t))];case"IsNan":return[s.isNaN(gn(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(gn(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(gn(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function js(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){D(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],o=e[s];D(r<0||o<0||r===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function rC(n){return!(typeof n=="number"||n.some(e=>e<0))}function xc(n,e,t){let s=u1(n,t);const r=!rC(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(o=>{s=u1(o.shape,s)}),!rC(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function u1(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],o=e[s];if(r>=0&&o>=0&&r!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hH{constructor(e,t,s,r,o,i,a){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Pe(0),Qt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),js(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Qt(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Xs([],[0].concat(this.elementShape));const s=this.readMany(e);return js(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),ts(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Xs([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return js(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),Mt(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,_s(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,i=[];ne(()=>{t=j(t,[1,s,o]);for(let l=0;l<e.length;++l){const h=[0,l===0?0:r[l-1],0],p=[1,e[l],o];i[l]=j(et(t,h,p),this.elementShape)}return i});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ca{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);js(t,o.shape,"TensorList shape mismatch: "),Qt(o)}),this.idTensor=Pe(0),this.maxNumElements=r,Qt(this.idTensor)}copy(){return new ca([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);js(e,this.elementShape,"TensorList shape mismatch: ");const r=xc(this.elementShape,this.tensors,e);return ne(()=>{const o=this.tensors.map(i=>j(i,r));return ts(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=xc(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,js(r.shape,e,"TensorList shape mismatch: "),j(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(js(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Qt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new ca([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);js(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=xc(this.elementShape,this.tensors,t);return j(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);js(this.elementShape,t.shape,"TensorList shape mismatch: "),Qt(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);js(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=xc(this.elementShape,this.tensors,s);return e.length===0?Xs([],[0].concat(r)):ne(()=>{const o=e.map(i=>j(this.tensors[i],r));return ts(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);js(this.elementShape,t,"TensorList shape mismatch: ");const s=xc(this.elementShape,this.tensors,t);return this.size()===0?Xs([],[0].concat(s)):ne(()=>{const r=this.tensors.map(o=>j(o,s));return Mt(r,0)})}}function pH(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);js(r,e,"TensorList shape mismatch: ");const o=_s(n);return new ca(o,e,s)}function fH(n,e,t,s){return new ca([],n,e,s)}function mH(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new ca([],t,n.dtype,s),i=_s(n,0);return e.forEach((a,l)=>{o.setItem(a,i[l])}),o}function gH(n,e,t){let s=0;const r=e.map(h=>(s+=h,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),i=u1(o,t),a=s===0?0:n.size/s,l=ne(()=>{const h=[];n=j(n,[1,s,a]);for(let p=0;p<e.length;++p){const g=[0,p===0?0:r[p-1],0],y=[1,e[p],a];h[p]=j(et(n,g,y),i)}return n.dispose(),h}),c=new ca([],t,n.dtype,e.length);for(let h=0;h<l.length;h++)c.setItem(h,l[h]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=I("thenBranch",n,e,t),r=I("elseBranch",n,e,t),o=I("cond",n,e,t),i=I("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=I("body",n,e,t),r=I("cond",n,e,t),o=I("args",n,e,t),i=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),a=o.map(h=>h.id);let l=await i[0].data();i.forEach(h=>{!h.kept&&a.indexOf(h.id)===-1&&h.dispose()});let c=o;for(;l[0];){const h=c;c=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const p=c.map(g=>g.id);h.forEach(g=>{!g.kept&&a.indexOf(g.id)===-1&&p.indexOf(g.id)===-1&&g.dispose()});const f=await t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);l=await f[0].data(),f.forEach(g=>{!g.kept&&a.indexOf(g.id)===-1&&p.indexOf(g.id)===-1&&g.dispose()})}return c}case"LoopCond":{const s=I("pred",n,e,t);return[ao(s)]}case"Switch":{const s=I("pred",n,e,t);let r=I("data",n,e,t);return r.kept||(r=ao(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>gn(r,e,t)!==void 0);if(s){const r=gn(s,e,t);return[ao(r)]}return}case"Enter":{const s=I("frameName",n,e,t),r=I("tensor",n,e,t);return t.enterFrame(s),[ao(r)]}case"Exit":{const s=I("tensor",n,e,t);return t.exitFrame(),[ao(s)]}case"NextIteration":{const s=I("tensor",n,e,t);return t.nextIteration(),[ao(s)]}case"TensorArrayV3":{const s=I("size",n,e,t),r=I("dtype",n,e,t),o=I("elementShape",n,e,t),i=I("dynamicSize",n,e,t),a=I("clearAfterRead",n,e,t),l=I("identicalElementShapes",n,e,t),c=I("name",n,e,t),h=new hH(c,r,s,o,l,i,a);return t.addTensorArray(h),[h.idTensor,Pe(1)]}case"TensorArrayWriteV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t),o=I("tensor",n,e,t),i=t.getTensorArray(s.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const s=I("tensorArrayId",n,e,t),r=I("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),o=I("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=I("tensorArrayId",n,e,t),r=I("indices",n,e,t),o=I("tensor",n,e,t),i=t.getTensorArray(s.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=I("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=I("tensorArrayId",n,e,t),r=I("tensor",n,e,t),o=I("lengths",n,e,t),i=t.getTensorArray(s.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Pe(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=I("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),o=I("tensor",n,e,t),i=t.getTensorList(s.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const s=I("tensorListId",n,e,t),r=I("index",n,e,t),o=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=I("indices",n,e,t),r=I("tensor",n,e,t),o=I("elementShape",n,e,t),i=I("numElements",n,e,t),a=mH(r,s,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=I("elementShape",n,e,t),r=I("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=I(o,n,e,t),a=n.op==="TensorListReserve"?-1:i,l=fH(s,r,i,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=I("tensorListId",n,e,t),r=I("indices",n,e,t),o=I("elementShape",n,e,t),i=I("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,i,o)]}case"TensorListStack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t),i=I("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,i)]}case"TensorListFromTensor":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t),i=pH(s,r,o);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id),o=I("dtype",n,e,t),i=I("elementShape",n,e,t);return[r.concat(o,i)]}case"TensorListPushBack":{const s=I("tensorListId",n,e,t),r=I("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=I("tensorListId",n,e,t),r=I("elementShape",n,e,t),o=I("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=I("tensor",n,e,t),r=I("elementShape",n,e,t),o=I("lengths",n,e,t),i=gH(s,o,r);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=I("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Pe(r.size(),"int32")]}case"TensorListResize":{const s=I("tensorListId",n,e,t),r=I("size",n,e,t),i=t.getTensorList(s.id).resize(r);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n,e,t){const[s,r]=I("fusedOps",n,e,t),o=s==="biasadd",i=!o,a=r==="prelu",l=s==="fusedbatchnorm",c=I("numArgs",n,e,t);if(o){if(a&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const h=I("strides",n,e,t),p=pf(n,e,t),f=I("dataFormat",n,e,t).toUpperCase(),g=I("dilations",n,e,t);let[y,b]=I("args",n,e,t);i&&(b=y,y=void 0);const w=I("leakyreluAlpha",n,e,t);return{stride:h,pad:p,dataFormat:f,dilations:g,biasArg:y,preluArg:b,activationFunc:r,leakyreluAlpha:w}}const xH=(n,e,t,s=kn)=>{switch(n.op){case"Conv1D":{const r=I("stride",n,e,t),o=I("pad",n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilation",n,e,t);return[s.conv1d(I("x",n,e,t),I("filter",n,e,t),r,o,i,a)]}case"Conv2D":{const r=I("strides",n,e,t),o=pf(n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilations",n,e,t);return[s.conv2d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:c,activationFunc:h,leakyreluAlpha:p}=oC(n,e,t);return[s.fused.conv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:h,preluActivationWeights:c,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:i,dilations:a,biasArg:l,preluArg:c,activationFunc:h,leakyreluAlpha:p}=oC(n,e,t);return[s.fused.depthwiseConv2d({x:I("x",n,e,t),filter:I("filter",n,e,t),strides:[r[1],r[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:h,preluActivationWeights:c,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=I("outputShape",n,e,t),o=I("strides",n,e,t),i=pf(n,e,t);return[s.conv2dTranspose(I("x",n,e,t),I("filter",n,e,t),r,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=I("strides",n,e,t),o=pf(n,e,t),i=I("dilations",n,e,t),a=I("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(I("input",n,e,t),I("filter",n,e,t),[r[1],r[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("dataFormat",n,e,t).toUpperCase(),a=I("dilations",n,e,t);return[s.conv3d(I("x",n,e,t),I("filter",n,e,t),[r[1],r[2],r[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.avgPool(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.maxPool(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t),a=I("includeBatchInIndex",n,e,t),{result:l,indexes:c}=s.maxPoolWithArgmax(I("x",n,e,t),[i[1],i[2]],[r[1],r[2]],o,a);return[l,c]}case"AvgPool3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.avgPool3d(I("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("kernelSize",n,e,t);return[s.maxPool3d(I("x",n,e,t),[i[1],i[2],i[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=I("strides",n,e,t),o=I("pad",n,e,t),i=I("dilations",n,e,t),a=r[1],l=r[2],c=i[1],h=i[2];return[s.dilation2d(I("x",n,e,t),I("filter",n,e,t),[a,l],o,[c,h],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH=(n,e,t,s=kn)=>{switch(n.op){case"Fill":{const r=I("shape",n,e,t),o=I("dtype",n,e,t),i=I("value",n,e,t);return[s.fill(r,i,o)]}case"LinSpace":{const r=I("start",n,e,t),o=I("stop",n,e,t),i=I("num",n,e,t);return[s.linspace(r,o,i)]}case"Multinomial":{const r=I("logits",n,e,t),o=I("numSamples",n,e,t),i=I("seed",n,e,t);return[s.multinomial(r,o,i)]}case"OneHot":{const r=I("indices",n,e,t),o=I("depth",n,e,t),i=I("onValue",n,e,t),a=I("offValue",n,e,t),l=I("dtype",n,e,t);return[s.oneHot(r,o,i,a,l)]}case"Ones":return[s.ones(I("shape",n,e,t),I("dtype",n,e,t))];case"OnesLike":return[s.onesLike(I("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(I("shape",n,e,t),I("dtype",n,e,t),I("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(I("shape",n,e,t),I("minval",n,e,t),I("maxval",n,e,t),I("seed",n,e,t))];case"Range":{const r=I("start",n,e,t),o=I("stop",n,e,t),i=I("step",n,e,t);return[s.range(r,o,i,I("dtype",n,e,t))]}case"TruncatedNormal":{const r=I("shape",n,e,t),o=I("mean",n,e,t),i=I("stdDev",n,e,t),a=I("seed",n,e,t);return[s.truncatedNormal(r,o,i,I("dtype",n,e,t),a)]}case"Zeros":return[s.zeros(I("shape",n,e,t),I("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m0(n,e,t){const s=I("boxes",n,e,t),r=I("scores",n,e,t),o=I("maxOutputSize",n,e,t),i=I("iouThreshold",n,e,t),a=I("scoreThreshold",n,e,t),l=I("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}const bH=async(n,e,t,s,r=kn)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c,softNmsSigma:h}=m0(n,e,t),p=await r.image.nonMaxSuppressionWithScoreAsync(o,i,a,l,c,h);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c}=m0(n,e,t),h=I("padToMaxOutputSize",n,e,t),p=await r.image.nonMaxSuppressionPaddedAsync(o,i,a,l,c,h);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:l,scoreThreshold:c}=m0(n,e,t);return[await r.image.nonMaxSuppressionAsync(o,i,a,l,c)]}case"Where":{const o=r.cast(I("condition",n,e,t),"bool"),i=[await r.whereAsync(o)];return o.dispose(),i}case"ListDiff":return r.setdiff1dAsync(I("x",n,e,t),I("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vH=(n,e,t,s=kn)=>{switch(n.op){case"LowerBound":{const r=I("sortedSequence",n,e,t),o=I("values",n,e,t);return[s.lowerBound(r,o)]}case"TopKV2":{const r=I("x",n,e,t),o=I("k",n,e,t),i=I("sorted",n,e,t),a=s.topk(r,o,i);return[a.values,a.indices]}case"UpperBound":{const r=I("sortedSequence",n,e,t),o=I("values",n,e,t);return[s.upperBound(r,o)]}case"Unique":{const r=I("x",n,e,t),o=s.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=I("x",n,e,t),o=I("axis",n,e,t),i=s.unique(r,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH=(n,e,t,s=kn)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=I("default",n,e,t);return[gn(n.name,e,t)||r];case"Placeholder":return[gn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const h=I("x",n,e,t);return[ao(h)]}case"IdentityN":return I("x",n,e,t).map(h=>ao(h));case"Snapshot":const o=I("x",n,e,t);return[ao(o)];case"Shape":return[s.tensor1d(I("x",n,e,t).shape,"int32")];case"ShapeN":return I("x",n,e,t).map(h=>s.tensor1d(h.shape));case"Size":return[s.scalar(I("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(I("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=I("x",n,e,t),a=I("data",n,e,t),l=I("message",n,e,t),c=I("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let h=0;h<a.length;h++)console.log(Array.prototype.slice.call(a[h].dataSync()).slice(0,c));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kH{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Pe(0),this.tensorMap=new Map,Qt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Pe(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),ne(()=>{const r=_s(t),o=s.length,i=r.length;D(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const l=s[a],c=r[a];Qt(c),this.tensorMap.set(l,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return ne(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o],a=this.findWithDefault(i,t);r.push(a)}return ts(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const o=I("keyDType",n,e,t),i=I("valueDType",n,e,t),a=new kH(o,i);return s.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=I("tableHandle",n,e,t,s),o=I("keys",n,e,t),i=I("values",n,e,t);return[await s.getHashTableById(r.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=I("tableHandle",n,e,t,s),o=I("keys",n,e,t),i=I("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=I("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CH=(n,e,t,s=kn)=>{switch(n.op){case"ResizeBilinear":{const r=I("images",n,e,t),o=I("size",n,e,t),i=I("alignCorners",n,e,t),a=I("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const r=I("images",n,e,t),o=I("size",n,e,t),i=I("alignCorners",n,e,t),a=I("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[o[0],o[1]],i,a)]}case"CropAndResize":{const r=I("image",n,e,t),o=I("boxes",n,e,t),i=I("boxInd",n,e,t),a=I("cropSize",n,e,t),l=I("method",n,e,t),c=I("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,o,i,a,l,c)]}case"ImageProjectiveTransformV3":{const r=I("images",n,e,t),o=I("transforms",n,e,t),i=I("outputShape",n,e,t),a=I("fillValue",n,e,t),l=I("interpolation",n,e,t),c=I("fillMode",n,e,t);return[s.image.transform(r,o,l.toLowerCase(),c.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H=(n,e,t,s=kn)=>{switch(n.op){case"Equal":return[s.equal(I("a",n,e,t),I("b",n,e,t))];case"NotEqual":return[s.notEqual(I("a",n,e,t),I("b",n,e,t))];case"Greater":return[s.greater(I("a",n,e,t),I("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(I("a",n,e,t),I("b",n,e,t))];case"Less":return[s.less(I("a",n,e,t),I("b",n,e,t))];case"LessEqual":return[s.lessEqual(I("a",n,e,t),I("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(I("a",n,e,t),I("b",n,e,t))];case"LogicalNot":return[s.logicalNot(I("a",n,e,t))];case"LogicalOr":return[s.logicalOr(I("a",n,e,t),I("b",n,e,t))];case"Select":case"SelectV2":return[s.where(I("condition",n,e,t),I("a",n,e,t),I("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(I("a",n,e,t),I("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IH=(n,e,t,s=kn)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(I("a",n,e,t),I("b",n,e,t),I("transposeA",n,e,t),I("transposeB",n,e,t))];case"Einsum":return[s.einsum(I("equation",n,e,t),...I("tensors",n,e,t))];case"Transpose":return[s.transpose(I("x",n,e,t),I("perm",n,e,t))];case"_FusedMatMul":const[r,o]=I("fusedOps",n,e,t),i=r==="biasadd",a=o==="prelu",l=I("numArgs",n,e,t),c=I("leakyreluAlpha",n,e,t);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[h,p]=I("args",n,e,t);return[s.fused.matMul({a:I("a",n,e,t),b:I("b",n,e,t),transposeA:I("transposeA",n,e,t),transposeB:I("transposeB",n,e,t),bias:h,activation:o,preluActivationWeights:p,leakyreluAlpha:c})];case"MatrixBandPart":return[s.linalg.bandPart(I("a",n,e,t),I("numLower",n,e,t),I("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TH=(n,e,t,s=kn)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(I("x",n,e,t),I("axis",n,e,t),I("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(I("x",n,e,t),I("mean",n,e,t),I("variance",n,e,t),I("offset",n,e,t),I("scale",n,e,t),I("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(I("x",n,e,t),I("radius",n,e,t),I("bias",n,e,t),I("alpha",n,e,t),I("beta",n,e,t))];case"Softmax":return[s.softmax(I("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH=(n,e,t,s=kn)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=s.raggedGather(I("paramsNestedSplits",n,e,t),I("paramsDenseValues",n,e,t),I("indices",n,e,t),I("outputRaggedRank",n,e,t));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=s.raggedRange(I("starts",n,e,t),I("limits",n,e,t),I("splits",n,e,t));return[r,o]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(I("shape",n,e,t),I("values",n,e,t),I("defaultValue",n,e,t),I("rowPartitionTensors",n,e,t),I("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RH=(n,e,t,s=kn)=>{switch(n.op){case"Max":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.max(I("x",n,e,t),a,l)]}case"Mean":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.mean(I("x",n,e,t),a,l)]}case"Min":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.min(I("x",n,e,t),a,l)]}case"Sum":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.sum(I("x",n,e,t),a,l)]}case"All":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.all(I("x",n,e,t),a,l)]}case"Any":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.any(I("x",n,e,t),a,l)]}case"ArgMax":{const a=I("axis",n,e,t);return[s.argMax(I("x",n,e,t),a)]}case"ArgMin":{const a=I("axis",n,e,t);return[s.argMin(I("x",n,e,t),a)]}case"Prod":{const a=I("axis",n,e,t),l=I("keepDims",n,e,t);return[s.prod(I("x",n,e,t),a,l)]}case"Cumprod":{const a=I("axis",n,e,t),l=I("exclusive",n,e,t),c=I("reverse",n,e,t);return[s.cumprod(I("x",n,e,t),a,l,c)]}case"Cumsum":{const a=I("axis",n,e,t),l=I("exclusive",n,e,t),c=I("reverse",n,e,t);return[s.cumsum(I("x",n,e,t),a,l,c)]}case"Bincount":const r=I("x",n,e,t),o=I("weights",n,e,t),i=I("size",n,e,t);return[s.bincount(r,o,i)];case"DenseBincount":{const a=I("x",n,e,t),l=I("weights",n,e,t),c=I("size",n,e,t),h=I("binaryOutput",n,e,t);return[s.denseBincount(a,l,c,h)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH=(n,e,t,s=kn)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=I("n",n,e,t),o=I("axis",n,e,t);let i=I("tensors",n,e,t);return i=i.slice(0,r),[s.concat(i,o)]}case"Gather":{const r=I("x",n,e,t),o=I("indices",n,e,t);return[s.gather(r,s.cast(o,"int32"),0)]}case"GatherV2":{const r=I("axis",n,e,t),o=I("batchDims",n,e,t),i=I("x",n,e,t),a=I("indices",n,e,t);return[s.gather(i,s.cast(a,"int32"),r,o)]}case"Reverse":{const r=I("dims",n,e,t),o=[];for(let a=0;a<r.length;a++)r[a]&&o.push(a);const i=I("x",n,e,t);return[s.reverse(i,o)]}case"ReverseV2":{const r=I("axis",n,e,t),o=I("x",n,e,t);return[s.reverse(o,r)]}case"Slice":{const r=I("begin",n,e,t),o=I("size",n,e,t);return[s.slice(I("x",n,e,t),r,o)]}case"StridedSlice":{const r=I("begin",n,e,t),o=I("end",n,e,t),i=I("strides",n,e,t),a=I("beginMask",n,e,t),l=I("endMask",n,e,t),c=I("ellipsisMask",n,e,t),h=I("newAxisMask",n,e,t),p=I("shrinkAxisMask",n,e,t),f=I("x",n,e,t);return[s.stridedSlice(f,r,o,i,a,l,c,h,p)]}case"Pack":return ne(()=>{const r=I("axis",n,e,t),o=I("tensors",n,e,t),i=o[0].shape,a=s.squeeze(o[0]).shape,l=o.map(c=>{const h=Qe(c.shape,i);if(!h&&!Qe(s.squeeze(c).shape,a))throw new Error("the input tensors shape does not match");return h?c:s.reshape(c,i)});return[s.stack(l,r)]});case"Unpack":{const r=I("axis",n,e,t),o=I("tensor",n,e,t);return s.unstack(o,r)}case"Tile":{const r=I("reps",n,e,t);return[s.tile(I("x",n,e,t),r)]}case"Split":case"SplitV":{const r=I("axis",n,e,t),o=I("numOrSizeSplits",n,e,t),i=I("x",n,e,t);return s.split(i,o,r)}case"ScatterNd":{const r=I("indices",n,e,t),o=I("values",n,e,t),i=I("shape",n,e,t);return[s.scatterND(r,o,i)]}case"GatherNd":{const r=I("x",n,e,t),o=I("indices",n,e,t);return[s.gatherND(r,o)]}case"SparseToDense":{const r=I("sparseIndices",n,e,t),o=I("outputShape",n,e,t),i=I("sparseValues",n,e,t),a=I("defaultValue",n,e,t);return[s.sparseToDense(r,i,o,i.dtype===a.dtype?a:s.cast(a,i.dtype))]}case"TensorScatterUpdate":{const r=I("indices",n,e,t),o=I("values",n,e,t),i=I("tensor",n,e,t);return[s.tensorScatterUpdate(i,r,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DH=(n,e,t,s=kn)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(I("indices",n,e,t),I("values",n,e,t),I("denseShape",n,e,t),I("defaultValue",n,e,t));return[r,o,i,a]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=s.sparse.sparseReshape(I("inputIndices",n,e,t),I("inputShape",n,e,t),I("newShape",n,e,t));return[r,o]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(I("data",n,e,t),I("indices",n,e,t),I("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _H=(n,e,t,s=kn)=>{switch(n.op){case"FFT":return[s.fft(I("x",n,e,t))];case"IFFT":return[s.ifft(I("x",n,e,t))];case"RFFT":return[s.rfft(I("x",n,e,t))];case"IRFFT":return[s.irfft(I("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OH=(n,e,t,s=kn)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(I("input",n,e,t),I("pattern",n,e,t),I("rewrite",n,e,t),I("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=s.string.stringNGrams(I("data",n,e,t),I("dataSplits",n,e,t),I("separator",n,e,t),I("nGramWidths",n,e,t),I("leftPad",n,e,t),I("rightPad",n,e,t),I("padWidth",n,e,t),I("preserveShortSequences",n,e,t));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:i}=s.string.stringSplit(I("input",n,e,t),I("delimiter",n,e,t),I("skipEmpty",n,e,t));return[r,o,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(I("input",n,e,t),I("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH=(n,e,t,s=kn)=>{switch(n.op){case"Cast":return[s.cast(I("x",n,e,t),I("dtype",n,e,t))];case"ExpandDims":{const r=I("axis",n,e,t);return[s.expandDims(I("x",n,e,t),r)]}case"Squeeze":{const r=I("axis",n,e,t);return[s.squeeze(I("x",n,e,t),r)]}case"Reshape":return[s.reshape(I("x",n,e,t),I("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(I("x",n,e,t),I("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(I("x",n,e,t),I("padding",n,e,t),I("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(I("x",n,e,t),I("padding",n,e,t),I("constantValue",n,e,t))];case"SpaceToBatchND":{const r=I("blockShape",n,e,t),o=I("paddings",n,e,t);return[s.spaceToBatchND(I("x",n,e,t),r,o)]}case"BatchToSpaceND":{const r=I("blockShape",n,e,t),o=I("crops",n,e,t);return[s.batchToSpaceND(I("x",n,e,t),r,o)]}case"DepthToSpace":{const r=I("blockSize",n,e,t),o=I("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(I("x",n,e,t),r,o)]}case"BroadcastTo":return[s.broadcastTo(I("x",n,e,t),I("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(I("s0",n,e,t),I("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(n,e,t,s,r=ne){const o=((i,a,l)=>{switch(i.category){case"arithmetic":return r(()=>cH(i,a,l));case"basic_math":return r(()=>dH(i,a,l));case"control":return yH(i,a,l);case"convolution":return r(()=>xH(i,a,l));case"creation":return r(()=>wH(i,a,l));case"dynamic":return bH(i,a,l);case"evaluation":return r(()=>vH(i,a,l));case"image":return r(()=>CH(i,a,l));case"graph":return r(()=>SH(i,a,l));case"logical":return r(()=>$H(i,a,l));case"matrices":return r(()=>IH(i,a,l));case"normalization":return r(()=>TH(i,a,l));case"ragged":return r(()=>EH(i,a,l));case"reduction":return r(()=>RH(i,a,l));case"slice_join":return r(()=>AH(i,a,l));case"sparse":return r(()=>DH(i,a,l));case"spectral":return r(()=>_H(i,a,l));case"string":return r(()=>OH(i,a,l));case"transformation":return r(()=>FH(i,a,l));case"hash_table":return NH(i,a,l,s);case"custom":const c=ME(i.op);if(c&&c.customExecutor)return c.customExecutor(new uH(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return ti(o)?o.then(i=>[].concat(i)):[].concat(o)}class aC{constructor(e={},t={},s={},r={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(n,e,t,s){const r=new Set,o=[];let i=null,a=null;const l=new Set,c=new Set(Object.keys(n).map(f=>ps(f)[0]));s=s||[];const h=new Set(s.map(f=>ps(f.name)[0])),p=[...e];for(;p.length>0;){const f=p.pop();if((Gi(f)||UH(f)||GH(f))&&i==null&&(i=f,a=i.children.map(g=>g.name).filter(g=>r.has(g))),r.add(f.name),t[f.name]==null&&!c.has(f.name)&&!h.has(f.name)){if(f.inputs.length===0){o.push(f.name);continue}f.inputs.forEach(g=>{l.has(g.name)||(l.add(g.name),p.push(g))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:a}}function LH(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(w=>ps(w)[0]).map(w=>n.nodes[w]),o=n.initNodes||[],i=w=>t.has(typeof w=="string"?w:w.name);function a(w){return[...new Map(w.map(v=>[v.name,v])).values()]}const l=a([...r,...n.weights,...o]).filter(i),c=a([...l,...Object.values(n.nodes)]).filter(i),h=new Map(c.map(w=>[w.name,w])),p={};for(const w of c){p[w.name]=p[w.name]||0;for(const v of w.children)i(v)||(p[v.name]=Number.POSITIVE_INFINITY),p[v.name]=(p[v.name]||0)+1}const f=Object.entries(p).filter(([,w])=>w===0).map(([w])=>w),g=[...f];for(;f.length>0;){const w=f.pop(),v=h.get(w);for(const S of v.children.filter(i))--p[S.name]===0&&(g.push(S.name),f.push(S.name))}const y=g.map(w=>h.get(w)),b=PH(y,l);return zH(b,l),b}function PH(n,e){const t=new Map(n.map(i=>[i.name,i])),s=e.map(i=>i.name),r=new Set(s);for(;s.length>0;){const i=s.pop(),a=t.get(i);for(const l of a.children)!t.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(i=>r.has(i.name))}class Kp extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function zH(n,e){const t=new Map(n.map((a,l)=>[a.name,l])),s=new Set(e.map(a=>a.name)),r=a=>s.has(typeof a=="string"?a:a.name),o=new Set(n.map(a=>a.name)),i=a=>o.has(typeof a=="string"?a:a.name);for(const a of n){for(const l of a.children.filter(i)){if(!t.has(l.name))throw new Kp(`Child ${l.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(l.name))throw new Kp(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!r(a))for(const l of a.inputs){if(!t.has(l.name))throw new Kp(`Input ${l.name} of node ${a.name} is unreachable.`);if(t.get(l.name)>t.get(a.name))throw new Kp(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function MH(n){const e=new Map(n.map((a,l)=>[a.name,l])),t=Number.MAX_SAFE_INTEGER,s=n.map((a,l)=>Gi(a)?t:l),r=a=>{const l=s[e.get(a.name)];return l??-1},o=n.map((a,l)=>a.children.map(r).reduce((c,h)=>Math.max(c,h),s[l])),i=new Map;for(let a=0;a<n.length;++a){const l=o[a];if(l===t)continue;const c=n[a],h=n[l];i.has(h.name)||i.set(h.name,[]),i.get(h.name).push(c)}return i}const BH=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),VH=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),WH=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Gi(n){return BH.has(n.op)}function UH(n){return VH.has(n.op)}function GH(n){return WH.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ff{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Ff(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=lC(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const c=t.map(p=>p.name),h=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${h}]. Missing the following inputs: [${r}]`)}const a=LH(this.graph,s),l=MH(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Qt(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(f=>this.graph.nodes[ps(f)[0]]),o=t.map(f=>ps(f)[0]),i=new Set(o);let a=o.map(f=>this.graph.nodes[f]);a.length===0&&(a=this._outputs);const l=this.getCompilationKey(r,a);let c=this.compiledMap.get(l);c==null&&(c=this.compile(e,a),this.compiledMap.set(l,c));try{this.keepIntermediateTensors=se().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}const h={},p={};return ne(()=>{const f=new aC(this.weightMap,h,p,this.functionExecutorMap,this.parseNodeNameCache),g=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(v=>{const[S,$]=ps(v,f),N=[];N[$]=e[v],g[S]=N,this.keepIntermediateTensors&&(this.clonedTensorsMap[S]=this.cloneTensorList(N))});const y=this.getFrozenTensorIds(g),{orderedNodes:b,nodeLiveUntilMap:w}=c;for(const v of b){if(g[v.name])continue;const S=iC(v,g,f,this._resourceManager);if(ti(S))throw new Error(`The execution of the op '${v.op}' returned a promise. Please use model.executeAsync() instead.`);g[v.name]=S,this.keepIntermediateTensors&&(this.clonedTensorsMap[v.name]=this.cloneTensorList(S)),this.checkTensorForDisposalWithNodeLiveUntilInfo(v,g,f,y,i,w.get(v.name))}return this.parent==null&&f.dispose(y),t.map(v=>gn(v,g,f))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,i,a){if(!(Gi(t)||i.has(e))){for(const l of s[e])l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length);for(const l of t.inputs){if(Gi(l))continue;const c=tC(l.name,s,r);if(c!=null)for(const h of c){if(!h||h.kept||o.has(h.id))continue;const p=a[h.id];p===1?(h.dispose(),delete a[h.id]):p!=null&&a[h.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,o,i){function a(l){return Gi(l)||o.has(l.name)}if(!(Gi(e)||i==null))for(const l of i){if(a(l))continue;const c=tC(l.name,t,s);for(const h of c)!h||h.kept||r.has(h.id)||h.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},o={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=se().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}const i=new aC(this.weightMap,r,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,t,s),l=t.map(f=>gn(f,a,i)),c=l.map(f=>f.id),h=Object.keys(e).map(f=>e[f].id),p=new Set([...c,...h,...this.weightIds]);return Object.values(a).forEach(f=>{f.forEach(g=>{g&&!g.isDisposed&&!p.has(g.id)&&g.dispose()})}),this.parent==null&&i.dispose(p),l}async executeFunctionAsync(e,t,s){const r=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),i=o.map(N=>this.graph.nodes[ps(N)[0]]),a=s.map(N=>ps(N)[0]),l=new Set(a);let c=a.map(N=>this.graph.nodes[N]);c.length===0&&(c=this._outputs);const{usedNodes:h,missingInputs:p,dynamicNode:f,syncInputs:g}=lC(e,c,this.weightMap,this._initNodes),y=[...i,...this.graph.weights,...this._initNodes||[]].map(N=>({node:N,contexts:t.currentContext})),b=Object.assign({},this.weightMap);Object.keys(e).forEach(N=>{const[T,R]=ps(N),L=[];L[R]=e[N],b[T]=L});const w={},v=this.getFrozenTensorIds(b),S={};for(;y.length>0;){const N=this.processStack(i,y,t,b,S,v,l,w,h);await Promise.all(N)}f==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const $=c.filter(N=>!Gi(N)&&!gn(N.name,b,t)).map(N=>N.name);if($.length>0){let N="";throw f!=null&&(N=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${g}]`),new Error(`Cannot compute the outputs [${$}] from the provided inputs [${o}]. Consider providing the following inputs: [${p}]. ${N}`)}return b}processStack(e,t,s,r,o,i,a,l,c){const h=[];for(;t.length>0;){const p=t.pop();s.currentContext=p.contexts;let f="";if(p.node.op==="Enter"&&I("isConstant",p.node,r,s)&&([f]=io(p.node.name,s)),r[p.node.name]==null){const g=iC(p.node,r,s,this._resourceManager);f||([f]=io(p.node.name,s));const y=s.currentContext;ti(g)?h.push(g.then(b=>(r[f]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[f]=this.cloneTensorList(b)),s.currentContext=y,this.checkTensorForDisposal(f,p.node,r,s,i,a,l),this.processChildNodes(p.node,t,s,r,o,c),b))):(r[f]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[f]=this.cloneTensorList(g)),this.checkTensorForDisposal(f,p.node,r,s,i,a,l),this.processChildNodes(p.node,t,s,r,o,c))}else this.processChildNodes(p.node,t,s,r,o,c)}return h}processChildNodes(e,t,s,r,o,i){e.children.forEach(a=>{const[l]=io(a.name,s);o[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(c=>!!gn(c,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})):a.inputNames.every(c=>!!gn(c,r,s))&&(o[l]=!0,t.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=ps(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===s.shape.length&&s.shape.every((l,c)=>i[c]===-1||i[c]===l);D(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&D(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const o in e){const i=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[o];i!=null?r[i.name]=e[o]:r[o]=e[o]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=ps(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const o=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=ps(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class HH{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH="?tfjs-format=file",qH="model.json";class Gb{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=Kw){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new HH}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return ti(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await w$(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(r=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Ff(nC.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=nC.Instance.transformGraph(e.modelInitializer);this.initializer=new Ff(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof ut?[e]:e,s={};return t.forEach((r,o)=>s[this.structuredOutputKeys[o]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof ut)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((o,i)=>{var a,l,c;const h=(c=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[i])===null||c===void 0?void 0:c.resourceId;return h!=null?o[i]=this.resourceIdToCapturedInput[h]:o[i]=e[r++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const o=s[r],i=t[o];this.resourceIdToCapturedInput[i.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ke(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function KH(n,e={},t=Kw){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=YH(n));const s=new Gb(n,e,t);return await s.load(),s}function XH(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[s,r]=n;if(!s)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in s))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in s))throw new Error("Model JSON is missing 'weightsManifest'");const o=Sf(s.weightsManifest),i=_1(s,o,r);e=Nf(i)}else if("load"in n)e=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)e=Nf(n);else throw new Error("Unknown model format");const t=new Gb(e);return t.load(),t}function YH(n){return n.endsWith("/")||(n=n+"/"),`${n}${qH}${jH}`}/** @license See the LICENSE file. */const QH="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH=Object.freeze(Object.defineProperty({__proto__:null,GraphModel:Gb,deregisterOp:kG,loadGraphModel:KH,loadGraphModelSync:XH,registerOp:SG,version_converter:QH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var uC;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(uC||(uC={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Re(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&D(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH=Tg;class Jg extends Hf{nextDataId(){return Jg.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new x1(this,cr())}write(e,t,s){this.firstUse&&(this.firstUse=!1,se().get("IS_NODE")&&$s(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&_r(s[0])){const o=s.map(i=>Fr(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return mo(r,o)}return QC(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>ho(r));return He(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return He(e.shape,e.dtype,t)}makeOutput(e,t,s){return cr().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Pn();return e(),{kernelMs:Pn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Re([e],"where");const t=this.readSync(e.dataId);return JH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Jg.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const ej=n=>{const{x:e}=n.inputs,t=n.backend;Re(e,"abs");let s=new Float32Array(le(e.shape));const r=t.data.get(e.dataId).values;return s=WE(r),t.makeOutput(s,e.shape,e.dtype)},tj={kernelName:qc,backendName:"cpu",kernelFunc:ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(n){return(e,t,s,r,o)=>{const i=Ge(e,t),a=i.length,l=Le(i),c=le(i),h=un(o,c),p=e.length,f=t.length,g=Le(e),y=Le(t),b=oa(e,i),w=oa(t,i);if(b.length+w.length===0)for(let v=0;v<h.length;++v)h[v]=n(s[v%s.length],r[v%r.length]);else for(let v=0;v<h.length;++v){const S=ga(v,a,l),$=S.slice(-p);b.forEach(L=>$[L]=0);const N=fr($,p,g),T=S.slice(-f);w.forEach(L=>T[L]=0);const R=fr(T,f,y);h[v]=n(s[N],r[R])}return[h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fs(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",i)},a}const nj={kernelName:em,backendName:"cpu",kernelFunc:fs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(n,e,t="float32"){if(t==="complex64"){const r=Lf(n,e,"float32"),o=Lf(n,e,"float32");return fs({inputs:{real:r,imag:o},backend:n})}const s=wn(le(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hr(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const sj={kernelName:Vl,backendName:"cpu",kernelFunc:Hr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const rj={kernelName:_m,backendName:"cpu",kernelFunc:da};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=di([0],t),[o,i]=Ut((a,l)=>a!==l?1:0)(e,[],n,r,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function ci(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Hr({inputs:{x:r},backend:t});const h=Lf(t,r.shape,r.dtype),p=ci({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),f=fs({inputs:{real:p,imag:h},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}if(r.dtype==="complex64"){const h=da({inputs:{input:r},backend:t}),p=ci({inputs:{x:h},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(h),p}if(!v1(r.dtype,o)){const h=Hr({inputs:{x:r},backend:t});return{dataId:h.dataId,shape:h.shape,dtype:o}}const i=t.data.get(r.dataId).values,[a,l,c]=UE(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,c)}const oj={kernelName:Tl,backendName:"cpu",kernelFunc:ci};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;Re([i,a],n);const c=l.data.get(i.dataId).values,h=l.data.get(a.dataId).values,p=i.dtype==="string"?go(c):c,f=i.dtype==="string"?go(h):h,g=s||i.dtype,[y,b]=e(i.shape,a.shape,p,f,g);return l.makeTensorInfo(b,g,y)}:({inputs:r,backend:o})=>{const{a:i,b:a}=r,l=o;if(i.dtype==="complex64"||a.dtype==="complex64"){const c=ci({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(c.dataId),p=h.complexTensorInfos.real,f=h.complexTensorInfos.imag,g=l.data.get(p.dataId).values,y=l.data.get(f.dataId).values,b=ci({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),w=l.data.get(b.dataId),v=w.complexTensorInfos.real,S=w.complexTensorInfos.imag,$=l.data.get(v.dataId).values,N=l.data.get(S.dataId).values,[T,R,L]=t(i.shape,a.shape,g,y,$,N),P=l.makeTensorInfo(L,"float32",T),O=l.makeTensorInfo(L,"float32",R),F=fs({inputs:{real:P,imag:O},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(b),l.disposeIntermediateTensorInfo(P),l.disposeIntermediateTensorInfo(O),F}else{const c=l.data.get(i.dataId).values,h=l.data.get(a.dataId).values,p=s||i.dtype,[f,g]=e(i.shape,a.shape,c,h,p);return l.makeTensorInfo(g,p,f)}}}function Hb(n){return(e,t,s,r,o,i)=>{const a=Ge(e,t),l=le(a),c=a.length,h=Le(a),p=un("float32",l),f=un("float32",l),g=oa(e,a),y=oa(t,a),b=mo(s,r),w=mo(o,i),v=e.length,S=Le(e),$=t.length,N=Le(t);if(g.length+y.length===0)for(let T=0;T<p.length;T++){const R=T%b.length,L=T%w.length,P=n(b[R*2],b[R*2+1],w[L*2],w[L*2+1]);p[T]=P.real,f[T]=P.imag}else for(let T=0;T<p.length;T++){const R=ga(T,c,h),L=R.slice(-v);g.forEach(W=>L[W]=0);const P=fr(L,v,S),O=R.slice(-$);y.forEach(W=>O[W]=0);const F=fr(O,$,N),E=n(b[P*2],b[P*2+1],w[F*2],w[F*2+1]);p[T]=E.real,f[T]=E.imag}return[p,f,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE=Ut((n,e)=>n+e),ij=Hb((n,e,t,s)=>({real:n+t,imag:e+s})),gl=nn(ya,GE,ij),aj={kernelName:ya,backendName:"cpu",kernelFunc:gl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jb(n,e,t,s,r){const o=le(s),i=wn(r,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(o>0?i[l]+=e[a]:i[l]+=1)}return i}function HE(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],i=He([r,t],e.dtype);for(let a=0;a<r;a++)for(let l=0;l<o;l++){const c=n.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(s?i.set(1,a,c):e.size>0?i.set(i.get(a,c)+e.get(a,l),a,c):i.set(i.get(a,c)+1,a,c))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jE=Ut((n,e)=>n&e),lj=nn(td,jE),uj={kernelName:td,backendName:"cpu",kernelFunc:lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr(n){return(e,t,s)=>{const r=Pt(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ht(n,e,t){const s=qr(e);return bi(n,s,t)}function bi(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;Re(i,n);const a=o,l=a.data.get(i.dataId).values;let c;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=go(l)}else c=l;const h=t||i.dtype,p=e(c,h,r);return a.makeTensorInfo(i.shape,h,p)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE=qr(n=>Math.ceil(n)),cj=bi(El,qE),dj={kernelName:El,backendName:"cpu",kernelFunc:cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n,e,t,s){const r=Pt(t,le(e));if(s&&t!=="string"){let o=0;n.forEach(i=>{const a=le(i.shape);r.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a=t==="string"?go(i.vals):i.vals;let l=0;for(let c=0;c<i.shape[0];++c){const h=c*e[1]+o;for(let p=0;p<i.shape[1];++p)r[h+p]=a[l++]}o+=i.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XE=Ut((n,e)=>n===e?1:0),YE=nn(cd,XE,null,"bool"),hj={kernelName:cd,backendName:"cpu",kernelFunc:YE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QE=qr(n=>Math.exp(n)),ZE=bi(Ll,QE,"float32"),pj={kernelName:Ll,backendName:"cpu",kernelFunc:ZE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JE=qr(n=>Math.expm1(n)),fj=bi(Pl,JE),mj={kernelName:Pl,backendName:"cpu",kernelFunc:fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eR=qr(n=>Math.floor(n)),gj=bi(zl,eR),yj={kernelName:zl,backendName:"cpu",kernelFunc:gj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tR=Ut((n,e)=>Math.floor(n/e)),xj=nn(Ml,tR,null,"int32"),wj={kernelName:Ml,backendName:"cpu",kernelFunc:xj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nR(n,e,t,s,r,o,i,a,l){const c=He([s,o],t);for(let h=0;h<s;h++){const p=[];let f=0;for(let g=0;g<r;g++){const y=n[h*r+g];f+=y*i[g],p.push(y)}if(f<0||f>=l/o)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let g=0;g<o;g++)c.values[h*o+g]=e.get(...e.indexToLoc(f*o+g))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n,e,t){const s=He(t,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),a=i[0],l=i[2],c=e.locToIndex([a,l]);i[2]=e.values[c];const h=n.locToIndex(i);0<=h&&h<n.values.length&&(s.values[r]=n.values[h])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rR=Ut((n,e)=>n>e?1:0),bj=nn(fd,rR,null,"bool"),vj={kernelName:fd,backendName:"cpu",kernelFunc:bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR=Ut((n,e)=>n>=e?1:0),Sj=nn(Bl,oR,null,"bool"),kj={kernelName:Bl,backendName:"cpu",kernelFunc:Sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR=Ut((n,e)=>n<e?1:0),Nj=nn(gd,iR,null,"bool"),Cj={kernelName:gd,backendName:"cpu",kernelFunc:Nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR=Ut((n,e)=>n<=e?1:0),$j=nn(yd,aR,null,"bool"),Ij={kernelName:yd,backendName:"cpu",kernelFunc:$j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(n,e,t){const s=(e-n)/(t-1),r=wn(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR=qr(n=>Math.log(n)),Tj=bi(Hl,uR),Ej={kernelName:Hl,backendName:"cpu",kernelFunc:Tj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n,e,t,s){const r=un(s,le(t));for(let o=0;o<r.length;++o){const i=o*e;let a=n[i];for(let l=0;l<e;++l){const c=n[i+l];(Number.isNaN(c)||c>a)&&(a=c)}r[o]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dR=Ut((n,e)=>Math.max(n,e)),Rj=nn(ql,dR),Aj={kernelName:ql,backendName:"cpu",kernelFunc:Rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR=Ut((n,e)=>Math.min(n,e)),Dj=nn(Kl,hR),_j={kernelName:Kl,backendName:"cpu",kernelFunc:Dj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qb=Ut((n,e)=>n*e),Oj=Hb((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),ey=nn(Yl,qb,Oj),Fj={kernelName:Yl,backendName:"cpu",kernelFunc:ey};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,e,t){const s=xo(-1,t);return qb([],e,s,n,t)}function Lj(n){const{inputs:e,backend:t}=n,{x:s}=e;Re(s,"neg");const r=t.data.get(s.dataId).values,[o,i]=pR(r,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,o)}const Pj={kernelName:Td,backendName:"cpu",kernelFunc:Lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fR=Ut((n,e)=>n!==e?1:0),zj=nn(Ed,fR,null,"bool"),Mj={kernelName:Ed,backendName:"cpu",kernelFunc:zj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kb(n,e,t,s,r){const o=e.length,i=le(e),a=Le(e),l=Le(r),c=un(t,le(r));for(let h=0;h<i;++h){const p=ga(h,o,a),f=new Array(p.length);for(let y=0;y<f.length;y++)f[y]=p[s[y]];const g=fr(f,o,l);c[g]=n[h]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;Re(r,"transpose");const i=r.shape.length,a=new Array(i);for(let p=0;p<a.length;p++)a[p]=r.shape[o[p]];const l=s.data.get(r.dataId).values,c=Kb(l,r.shape,r.dtype,o,a);return{dataId:s.write(c,a,r.dtype),shape:a,dtype:r.dtype}}const Bj={kernelName:Xi,backendName:"cpu",kernelFunc:ns};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n,e,t,s){const[r,o]=hn(n,s),i=Qn(e,"int32"),a=wn(le(r),i),l=le(o);for(let c=0;c<a.length;++c){const h=c*l;let p=1;for(let f=0;f<l;++f)p*=t[h+f];a[c]=p}return{outVals:a,outShape:r,outDtype:i}}function Vj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Re(r,"prod");const a=r.shape.length,l=Xe(o,r.shape),c=Ot(l,a);let h=l,p=r;const f=[];c!=null&&(p=ns({inputs:{x:r},backend:t,attrs:{perm:c}}),f.push(p),h=Vt(h.length,a));const g=t.data.get(p.dataId).values,{outVals:y,outShape:b,outDtype:w}=mR(p.shape,p.dtype,g,h);let v=b;return i&&(v=Bt(b,l)),f.forEach(S=>t.disposeIntermediateTensorInfo(S)),t.makeTensorInfo(v,w,y)}const Wj={kernelName:Fd,backendName:"cpu",kernelFunc:Vj};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=ga(r,e.length,Le(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}function Gj(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function Hj(n,e,t,s){const r=[];let o=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);Gj(t,s);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const h=e[c+1];for(let p=1;p<l+1;++p)a[c].push(p*h)}for(let c=0;c<n.length;++c){let h=n[c],p=n[c]+1;for(let f=0;f<t.length;++f){const g=t[f],y=f+e.length-1;if(y>=0){const b=a[y],w=b[b.length-1]-g[h];for(let v=h;v<p;++v)a[y].push(g[v+1]+w)}h=g[h],p=g[p]}p!==h&&(r.push([h,p]),o+=p-h)}return{outSplits:a,valueSlices:r,numValues:o}}function jj(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=Pt("int32",s);e.push(r),n[t].forEach((o,i)=>r[i]=o)}return e}function cC(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function qj(n,e,t,s,r,o){const i=cC(e,2)[1],a=cC(o,2)[1];let l=0;for(const c of t)for(let h=c[0];h<c[1];++h){for(let p=0;p<s;++p)r[l*a+p]=n[h*i+p];++l}}function Kj(n,e,t,s,r){const o=e.slice();o[0]=r;const i=Pt(t,le(o)),a=n.length,l=a===0?0:a/e[0];return qj(n,e,s,l,i,o),[i,o]}function gR(n,e,t,s,r,o,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(Uj(o,i,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:h,valueSlices:p,numValues:f}=Hj(o,i,n,c),g=jj(h),y=Kj(t,s,r,p,f);return[g,y[0],y[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dC=2147483647;function yR(n,e,t,s,r,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=r.length===0,c=i.length===0,h=[];a||h.push(e[0]),l||h.push(r[0]),c||h.push(i[0]);for(let w=1;w<h.length;++w)if(h[w]!==h[w-1])throw new Error("starts, limits, and deltas must have the same shape");const p=h.length===0?1:h[0],f=Pt("int32",p+1);f[0]=0;for(let w=0;w<p;++w){const v=a?n[0]:n[w],S=l?s[0]:s[w],$=c?o[0]:o[w];if($===0)throw new Error("Requires delta != 0");let N;if($>0&&S<v||$<0&&S>v)N=0;else if(N=Math.ceil(Math.abs((S-v)/$)),N>dC)throw new Error(`Requires ((limit - start) / delta) <= ${dC}`);f[w+1]=f[w]+N}const g=f[p],y=Pt(t,g);let b=0;for(let w=0;w<p;++w){const v=f[w+1]-f[w];let S=a?n[0]:n[w];const $=c?o[0]:o[w];for(let N=0;N<v;++N)y[b++]=S,S+=$}return[f,y]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Gs=hr;class Pf{constructor(e,t,s,r,o,i,a,l,c,h){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=ZI(h),this.raggedRank=JI(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Gs.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Gs.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Gs.VALUE_ROWIDS:return Pf.getMaxWidthValueRowID(t);case Gs.ROW_SPLITS:return Pf.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Gs[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let i=1;i<t;++i){const a=e[i];a!==r&&(r=a,o=Math.max(i-s,o),s=i)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return pC(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;eT(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=QI(this.raggedRank,r,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let i=0;for(let a=0;a<r;++a,i+=t)o.push(i);for(let a=r;a<e;++a)o.push(-1);return D(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,i=[];for(let a=0;a<o-1;++a){const l=e[a+1]-e[a];let c=Math.min(r,l),h=t[a];h===-1&&(c=0);for(let p=0;p<c;++p)i.push(h),h+=s;for(let p=0;p<l-c;++p)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,i=[];if(o===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let c=t[l];i.push(c);for(let h=1;h<o;++h){const p=e[h];if(p===l)c>=0&&(++a,a<r?c+=s:c=-1);else{if(a=0,l=p,p>=t.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${t.length}`);c=t[p]}i.push(c)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Gs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case Gs.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${Gs[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Gs.FIRST_DIM_SIZE:return e[0];case Gs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Gs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Gs[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const o=pC(s,!1),i=Pt(this.valuesDType,le(o));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,r[c],s[c]);this.setOutput(this.raggedRank,l,i,o)}return[o,i]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,i=s;let a=r.slice();a=a.slice(e+1);const l=le(a),c=t.length;let h=this.defaultValue;if(h.length!==l&&h.length!==1){const y=this.defaultValueShape;ne(()=>{const b=j(h,y);h=Yi(b,a).dataSync()})}let p=0,f=0,g=0;for(let y=0;y<=c;++y){let b=y<c?t[y]:-1;if(b===g){++g;continue}if(f<g){const w=o.subarray(p*l),v=i.subarray(f*l),S=(g-f)*l;hC(v,w,S)}if(y>=c){const w=s.length;b=Math.floor(w/l)}if(b>g)if(this.defaultValue.length===1)i.subarray(g*l,b*l).fill(this.defaultValue[0]),g=b;else for(;b>g;){const w=i.slice(g*l);hC(w,h,l),++g}b<0?(p=y+1,f=g):(p=y,f=g,g=f+1)}}}function hC(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function pC(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function xR(n,e,t,s,r,o,i,a,l,c){return new Pf(n,e,t,s,r,o,i,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(n,e,t,s){const r=n===e,o=n<e&&t<0,i=e<n&&t>1;if(r||o||i)return wn(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=wn(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bR=qr(n=>1/Math.sqrt(n)),Xj=bi(nu,bR),Yj={kernelName:nu,backendName:"cpu",kernelFunc:Xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(n,e,t,s,r,o,i,a,l,c){const h=[s/r,r],p=n.values,f=e.values;if(s===0)return He(t,e.dtype);const g=l instanceof Kt?l:He(h,e.dtype);typeof l=="string"||typeof l=="number"?g.values.fill(l):typeof l=="boolean"&&g.values.fill(+l);for(let y=0;y<o;y++){const b=[];let w=0;for(let v=0;v<i;v++){const S=p[y*i+v];b.push(S),w+=S*a[v]}if(w<0||w>=s/r)throw new Error(`Invalid indices: ${b} does not index into ${t}`);for(let v=0;v<r;v++)c?g.values[w*r+v]+=f[y*r+v]:g.values[w*r+v]=e.rank===0?f[0]:f[y*r+v]}return g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj=qr(n=>1/(1+Math.exp(-n))),vR=ht(au,n=>1/(1+Math.exp(-n))),Zj={kernelName:au,backendName:"cpu",kernelFunc:vR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,e,t,s,r){const o=Qw(s,e,t),i=le(t),a=Le(s);if(o){const p=Zw(e,a);return r==="string"?n.slice(p,p+i):n.subarray(p,p+i)}const l=r==="string"?go(n):n,c=He(s,r,l),h=He(t,r);for(let p=0;p<h.size;++p){const f=h.indexToLoc(p),g=f.map((y,b)=>y+e[b]);h.set(c.get(...g),...f)}return r==="string"?bT(h.values):h.values}function ha(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s;Re(r,"slice");const[a,l]=Mg(r,o,i);Xw(r,a,l);const c=t.data.get(r.dataId).values,h=SR(c,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,h)}const Jj={kernelName:Vd,backendName:"cpu",kernelFunc:ha};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(n,e,t,s,r,o,i){const a=e[0],l=o[0],c=new Array(l),h=new Array(a),p=e[1];if(l===0){if(a!==0)throw new Error(aT(a));const w=Pt(t,0),v=Pt(r,0);return[w,[0,p],v,c,h]}let f=!0,g=0;const y=new Array(l).fill(0);for(let w=0;w<a;++w){const v=n[w*p];if(v<0)throw new Error(lT(w,v));if(v>=l)throw new Error(uT(w,v,l));++y[v],f=f&&v>=g,g=v}let b=!0;for(let w=0;w<l;++w){const v=y[w]===0;c[w]=v,b=b&&!v,y[w]=Math.max(y[w],1),w>0&&(y[w]+=y[w-1])}if(b&&f){const w=n,v=s;for(let S=0;S<a;++S)h[S]=S;return[w,[a,p],v,c,h]}else{const w=y[l-1],v=Pt(t,w*p),S=Pt(r,w),$=new Array(l).fill(0);for(let N=0;N<a;++N){const T=n[N*p],R=$[T],L=(T===0?0:y[T-1])+R;$[T]++;for(let P=0;P<p;++P)v[L*p+P]=n[N*p+P];S[L]=s[N],h[N]=L}for(let N=0;N<l;++N)if($[N]===0){const R=N===0?0:y[N-1];v[R*p+0]=N;for(let L=1;L<p;++L)v[R*p+L]=0;S[R]=i}return[v,[w,p],S,c,h]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n,e,t,s,r){const o=le(s),i=e[0],a=r.length,l=[];let c=1,h=-1;for(let w=0;w<a;++w){const v=r[w];if(v===-1){if(h!==-1)throw new Error(cT(h,w));h=w,l.push(1)}else{if(v<0)throw new Error(dT(w,v));c*=v,l.push(v)}}if(h!==-1){if(c<=0)throw new Error(hT());const w=Math.trunc(o/c);if(c*w!==o)throw new Error(pT(s,l));l[h]=w}if(le(l)!==o)throw new Error(fT(s,l));const f=s.length,g=[];if(f>0){g[f-1]=1;for(let w=f-2;w>=0;--w)g[w]=g[w+1]*s[w+1]}const y=[];if(a>0){y[a-1]=1;for(let w=a-2;w>=0;--w)y[w]=y[w+1]*l[w+1]}const b=Pt(t,i*a);for(let w=0;w<i;++w){let v=0;for(let S=0;S<f;++S)v+=n[w*f+S]*g[S];for(let S=0;S<a;++S)b[w*a+S]=Math.trunc(v/y[S]),v%=y[S]}return[b,[i,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xb(n,e,t,s,r,o=!1,i=0){const a=s.length,l=[e[0],n.length/e[0]],c=l[1],p=a>0?r[a-1]+1:0;if(p<0)throw new Error(W0());const f=e.slice();f[0]=p;const g=f.reduce(($,N)=>$*N,1),y=Pt(t,g);if(a===0)return p>0&&y.fill(i),[y,f];if(p<=0)throw new Error(W0());let b=0,w=1,v=0,S=r[b];for(;;){let $=0;if(w<a){if($=r[w],S===$){++w;continue}if(S>=$)throw new Error(mT())}if(S<0||S>=p)throw new Error(gT(S,p));S>v&&y.fill(i,v*c,S*c);for(let N=b;N<w;++N){const T=s[N];if(T<0||T>=l[0])throw new Error(yT(N,s[N],l[0]));for(let R=0;R<c;R++)y[S*c+R]+=n[T*c+R]}if(o)for(let N=0;N<c;N++)y[S*c+N]/=w-b;if(b=w,++w,v=S+1,S=$,w>a)break}return v<p&&y.fill(i,v*c,p*c),[y,f]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6=qr(n=>Math.sqrt(n)),t6=ht(uu,n=>Math.sqrt(n)),n6={kernelName:uu,backendName:"cpu",kernelFunc:t6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR=Ut((n,e)=>{const t=n-e;return t*t}),s6=nn(cu,CR),r6={kernelName:cu,backendName:"cpu",kernelFunc:s6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R=qr((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),o6=bi(jd,$R),i6={kernelName:jd,backendName:"cpu",kernelFunc:o6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n,e,t,s){const r=He(n,e.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*t[l]+s[l];r.set(e.get(...a),...i)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a6{constructor(e,t,s,r,o,i){this.separator=Fr(e),this.nGramWidths=t,this.leftPad=Fr(s),this.rightPad=Fr(r),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,i){for(let a=0;a<o;++a){const l=this.getPadWidth(i),c=Math.max(0,l-a),h=Math.max(0,l-(o-(a+1))),p=i-(c+h),f=t+(c>0?0:a-l);let g=0;g+=c*this.leftPad.length;for(let S=0;S<p;++S)g+=e[f+S].length;g+=h*this.rightPad.length;const y=c+h+p-1;g+=y*this.separator.length,s[r+a]=new Uint8Array(g);const b=s[r+a];let w=0;const v=S=>S.forEach($=>b[w++]=$);for(let S=0;S<c;++S)v(this.leftPad),v(this.separator);for(let S=0;S<p-1;++S)v(e[f+S]),v(this.separator);if(p>0){v(e[f+p-1]);for(let S=0;S<h;++S)v(this.separator),v(this.rightPad)}else{for(let S=0;S<h-1;++S)v(this.rightPad),v(this.separator);v(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<r;++c){let h=t[c]>=l;if(h=h&&t[c]<=s,!h)throw new Error(`Invalid split value ${t[c]}, must be in [${l}, ${s}]`);l=t[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const o=r-1,i=Pt("int32",r);if(s===0||r===0){const l=new Array(s);for(let c=0;c<=o;++c)i[c]=0;return[l,i]}i[0]=0;for(let l=1;l<=o;++l){const c=t[l]-t[l-1];let h=0;this.nGramWidths.forEach(p=>{h+=this.getNumNGrams(c,p)}),this.preserveShort&&c>0&&h===0&&(h=1),i[l]=i[l-1]+h}const a=new Array(i[o]);for(let l=0;l<o;++l){const c=t[l];let h=i[l];if(this.nGramWidths.forEach(p=>{const f=t[l+1]-t[l],g=this.getNumNGrams(f,p);this.createNGrams(e,c,a,h,g,p),h+=g}),this.preserveShort&&h===i[l]){const p=t[l+1]-t[l];if(p===0)continue;const f=p+2*this.padWidth;this.createNGrams(e,c,a,h,1,f)}}return[a,i]}}function TR(n,e,t,s,r,o,i,a){return new a6(t,s,r,o,i,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=n.indexOf(o);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&s.push(a),n=n.subarray(i+1),i=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const i=n.subarray(r,o);(!t||i.length!==0)&&s.push(i),r=o+1}}function ER(n,e,t){const s=n.length,r=[];let o=0,i=0;const a=new Array(s);for(let f=0;f<s;++f){const g=r.length;l6(n[f],e,t,r);const y=r.length-g;a[f]=y,o+=y,i=Math.max(i,y)}const l=Pt("int32",o*2),c=new Array(o),h=[s,i];let p=0;for(let f=0;f<s;++f)for(let g=0;g<a[f];++g)l[p*2]=f,l[p*2+1]=g,c[p]=r[p],++p;return[l,c,h]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n,e){const t=Pt("int32",n.length);for(let s=0;s<n.length;++s)t[s]=l$(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AR=Ut((n,e)=>n-e),u6=Hb((n,e,t,s)=>({real:n-t,imag:e-s})),Yb=nn(du,AR,u6),c6={kernelName:du,backendName:"cpu",kernelFunc:Yb};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=He(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let l=0;l<i.length;l++)i[l]=o[l]%n.shape[l];const a=n.locToIndex(i);s.values[r]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sc=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function _R(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,c=Math.log(a),h=.5*Math.exp(2*c/3),p=.5*Math.sqrt(c*h*(a-h)/a)*Math.sign(l-a/2),f=Math.max(t,Math.floor(e-l*h/a+p)),g=Math.min(s,Math.floor(e+(a-l)*h/a+p));_R(n,e,f,g)}const r=n[e];let o=t,i=s;for(lo(n,t,e),Sc(n[s],r)>0&&lo(n,t,s);o<i;){for(lo(n,o,i),o++,i--;Sc(n[o],r)<0;)o=o+1;for(;Sc(n[i],r)>0;)i=i-1}Sc(n[t],r)===0?lo(n,t,i):(i=i+1,lo(n,i,s)),i<=e&&(t=i+1),e<=i&&(s=i-1)}}function OR(n,e,t,s,r){const o=e[e.length-1],[i,a]=[n.length/o,o],l=un(t,i*s),c=un("int32",i*s);for(let p=0;p<i;p++){const f=p*a,g=n.subarray(f,f+a);let y=new Array(g.length);g.forEach((S,$)=>y[$]={value:S,index:$}),s<y.length&&(_R(y,s),y=y.slice(0,s)),r&&y.sort(Sc);const b=p*s,w=l.subarray(b,b+s),v=c.subarray(b,b+s);for(let S=0;S<s;S++)w[S]=y[S].value,v[S]=y[S].index}const h=e.slice();return h[h.length-1]=s,[He(h,t,l),He(h,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n,e,t,s){const r=Xe(e,t)[0],o=[1,t[0],1];for(let y=0;y<r;y++)o[0]*=t[y];o[1]=t[r];for(let y=r+1;y<t.length;y++)o[2]*=t[y];const i=new Map,a=new Int32Array(t[r]),l=new Kt(o,s,n),c=[],h=o[0]===1&&o[2]===1;for(let y=0;y<t[r];y++){let b;if(h)b=n[y].toString();else{const v=[];for(let S=0;S<o[0];S++)for(let $=0;$<o[2];$++)v.push(l.get(S,y,$));b=v.join(",")}const w=i.get(b);if(w!=null)a[y]=w;else{const v=i.size;i.set(b,v),a[y]=v,c.push(y)}}const p=o.slice();p[1]=i.size;const f=new Kt(p,s);c.forEach((y,b)=>{for(let w=0;w<o[0];w++)for(let v=0;v<o[2];v++)f.set(l.get(w,y,v),w,b,v)});const g=t.slice();return g[r]=p[1],{outputValues:f.values,outputShape:g,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d6=Object.freeze(Object.defineProperty({__proto__:null,addImpl:GE,bincountImpl:jb,bincountReduceImpl:HE,bitwiseAndImpl:jE,castImpl:UE,ceilImpl:qE,concatImpl:KE,equalImpl:XE,expImpl:QE,expm1Impl:JE,floorDivImpl:tR,floorImpl:eR,gatherNdImpl:nR,gatherV2Impl:sR,greaterEqualImpl:oR,greaterImpl:rR,lessEqualImpl:aR,lessImpl:iR,linSpaceImpl:lR,logImpl:uR,maxImpl:cR,maximumImpl:dR,minimumImpl:hR,multiplyImpl:qb,negImpl:pR,notEqualImpl:fR,prodImpl:mR,raggedGatherImpl:gR,raggedRangeImpl:yR,raggedTensorToTensorImpl:xR,rangeImpl:wR,rsqrtImpl:bR,scatterImpl:qi,sigmoidImpl:Qj,simpleAbsImpl:WE,sliceImpl:SR,sparseFillEmptyRowsImpl:kR,sparseReshapeImpl:NR,sparseSegmentReductionImpl:Xb,sqrtImpl:e6,squaredDifferenceImpl:CR,staticRegexReplaceImpl:$R,stridedSliceImpl:IR,stringNGramsImpl:TR,stringSplitImpl:ER,stringToHashBucketFastImpl:RR,subImpl:AR,tileImpl:DR,topKImpl:OR,transposeImpl:Kb,uniqueImpl:FR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */R1("cpu",()=>new Jg,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LR=ht(Ol,n=>n>=0?n:Math.exp(n)-1),h6={kernelName:Ol,backendName:"cpu",kernelFunc:LR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;Re([r],"leakyRelu");const i=le(r.shape),a=t.data.get(r.dataId).values,l=un("float32",i);for(let c=0;c<a.length;c++)l[c]=a[c]<0?o*a[c]:a[c];return t.makeTensorInfo(r.shape,"float32",l)}const p6={kernelName:md,backendName:"cpu",kernelFunc:PR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f6=Ut((n,e)=>n<0?e*n:n);function zR(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Re([s,r],"prelu");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,[a,l]=f6(s.shape,r.shape,o,i,"float32");return t.makeTensorInfo(l,"float32",a)}const m6={kernelName:Od,backendName:"cpu",kernelFunc:zR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MR=ht(Jl,n=>Math.max(0,n)),g6={kernelName:Jl,backendName:"cpu",kernelFunc:MR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BR=ht(eu,n=>Math.min(Math.max(0,n),6)),y6={kernelName:eu,backendName:"cpu",kernelFunc:BR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zf(n,e,t,s,r){if(t==="linear")return Hr({inputs:{x:e},backend:n});if(t==="relu")return MR({inputs:{x:e},backend:n});if(t==="elu")return LR({inputs:{x:e},backend:n});if(t==="relu6")return BR({inputs:{x:e},backend:n});if(t==="prelu")return zR({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return PR({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return vR({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=le(r.shape),a=b1(o,i),l=le(a);D(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const c=t.data.get(r.dataId);if(c.complexTensorInfos!=null){const h=c.complexTensorInfos.real,p=c.complexTensorInfos.imag;h.shape=a,p.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const x6={kernelName:Ld,backendName:"cpu",kernelFunc:St};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;Re([r,o],"matMul");const l=r.shape.length,c=o.shape.length,h=i?r.shape[l-2]:r.shape[l-1],p=a?o.shape[c-1]:o.shape[c-2],f=i?r.shape[l-1]:r.shape[l-2],g=a?o.shape[c-2]:o.shape[c-1],y=r.shape.slice(0,-2),b=o.shape.slice(0,-2),w=le(y),v=le(b),$=Ge(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([f,g]);D(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${a} must match.`);const N=i?[w,h,f]:[w,f,h],T=a?[v,g,p]:[v,p,g],R=St({inputs:{x:r},backend:t,attrs:{shape:N}}),L=St({inputs:{x:o},backend:t,attrs:{shape:T}}),P=i?R.shape[1]:R.shape[2],O=i?R.shape[2]:R.shape[1],F=a?L.shape[1]:L.shape[2],E=Math.max(w,v),W=t.data.get(R.dataId).values,X=t.data.get(L.dataId).values,ee=Le(R.shape),Q=Le(L.shape),[te,oe,U]=i?[ee[0],1,ee[1]]:[ee[0],ee[1],1],[Z,J,z]=a?[1,Q[1],Q[0]]:[Q[1],1,Q[0]],q=O*F,ue=He([E,O,F],R.dtype),de=ue.values,he=t.blockSize;for(let me=0;me<E;me++){const be=me%w,Se=me%v;for(let Ne=0;Ne<O;Ne+=he){const ze=Math.min(Ne+he,O);for(let Ue=0;Ue<F;Ue+=he){const rt=Math.min(Ue+he,F);for(let it=0;it<P;it+=he){const wt=Math.min(it+he,P);for(let ct=Ne;ct<ze;ct++)for(let at=Ue;at<rt;at++){let gt=0;for(let yt=it;yt<wt;yt++){const bs=W[be*te+ct*oe+yt*U],Tt=X[yt*Z+at*J+Se*z];gt+=bs*Tt}de[me*q+(ct*F+at)]+=gt}}}}}return t.disposeIntermediateTensorInfo(R),t.disposeIntermediateTensorInfo(L),t.makeTensorInfo($,ue.dtype,ue.values)}const w6={kernelName:Jc,backendName:"cpu",kernelFunc:VR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:h,leakyreluAlpha:p}=s;let f,g,y;const b=[];f=VR({inputs:{a:r,b:o},attrs:{transposeA:l,transposeB:c},backend:t}),i&&(g=gl({inputs:{a:f,b:i},backend:t}),b.push(f),f=g),h&&(y=zf(t,f,h,a,p),b.push(f),f=y);for(const v of b)t.disposeIntermediateTensorInfo(v);return f}const v6={kernelName:Tc,backendName:"cpu",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6=ht(vl,n=>Math.acos(n)),k6={kernelName:vl,backendName:"cpu",kernelFunc:S6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6=ht(Sl,n=>Math.acosh(n)),C6={kernelName:Sl,backendName:"cpu",kernelFunc:N6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $6(n){const{inputs:e,backend:t}=n,s=e;Re(e,"addN");const r=s.map(a=>t.data.get(a.dataId).values),o=He(s[0].shape,s[0].dtype),i=o.values;for(let a=0;a<s.length;a++){const l=r[a];for(let c=0;c<i.length;c++)i[c]+=l[c]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const I6={kernelName:Kc,backendName:"cpu",kernelFunc:$6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Re(r,"all");const a=Xe(o,r.shape);let l=a;const c=Ot(l,r.shape.length);let h=r;c!=null&&(h=ns({inputs:{x:r},backend:t,attrs:{perm:c}}),l=Vt(l.length,r.shape.length)),Sn("all",l,h.shape.length);const[p,f]=hn(h.shape,l),g=le(f),y=wn(le(p),h.dtype),b=t.data.get(h.dataId).values;for(let v=0;v<y.length;++v){const S=v*g;let $=b[S];for(let N=0;N<g;++N){const T=b[S+N];$=$&&T}y[v]=$}c!=null&&t.disposeIntermediateTensorInfo(h);const w=t.makeTensorInfo(p,h.dtype,y);if(i){const v=Bt(p,a),S=St({inputs:{x:w},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(w),S}return w}const E6={kernelName:Kf,backendName:"cpu",kernelFunc:T6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Re(r,"any");const a=Xe(o,r.shape);let l=a;const c=Ot(l,r.shape.length);let h=r;c!=null&&(h=ns({inputs:{x:r},backend:t,attrs:{perm:c}}),l=Vt(l.length,r.shape.length)),Sn("any",l,h.shape.length);const[p,f]=hn(h.shape,l),g=le(f),y=wn(le(p),h.dtype),b=t.data.get(h.dataId).values;for(let v=0;v<y.length;++v){const S=v*g;let $=b[S];for(let N=0;N<g;++N){const T=b[S+N];$=$||T}y[v]=$}c!=null&&t.disposeIntermediateTensorInfo(h);const w=t.makeTensorInfo(p,h.dtype,y);if(i){const v=Bt(p,a),S=St({inputs:{x:w},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(w),S}return w}const A6={kernelName:Xf,backendName:"cpu",kernelFunc:R6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Re(r,"argMax");let i=Xe(o,r.shape);const a=Ot(i,r.shape.length);let l=r;const c=[];a!=null&&(l=ns({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),i=Vt(i.length,l.shape.length)),i=[i[0]],Sn("argMax",i,l.shape.length);const[h,p]=hn(l.shape,i),f=le(h),g=wn(f,"int32"),y=le(p),b=t.data.get(l.dataId).values;for(let w=0;w<g.length;++w){const v=w*y;let S=b[v],$=0;for(let N=0;N<y;++N){const T=b[v+N];T>S&&(S=T,$=N)}g[w]=$}return c.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(h,"int32",g)}const _6={kernelName:Xc,backendName:"cpu",kernelFunc:D6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;Re(r,"argMin");let i=Xe(o,r.shape);const a=Ot(i,r.shape.length);let l=r;const c=[];a!=null&&(l=ns({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),i=Vt(i.length,l.shape.length)),i=[i[0]],Sn("argMin",i,l.shape.length);const[h,p]=hn(l.shape,i),f=le(h),g=wn(f,"int32"),y=le(p),b=t.data.get(l.dataId).values;for(let w=0;w<g.length;++w){const v=w*y;let S=b[v],$=0;for(let N=0;N<y;++N){const T=b[v+N];T<S&&(S=T,$=N)}g[w]=$}return c.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(h,"int32",g)}const F6={kernelName:Yc,backendName:"cpu",kernelFunc:O6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6=ht(kl,n=>Math.asin(n)),P6={kernelName:kl,backendName:"cpu",kernelFunc:L6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6=ht(Nl,n=>Math.asinh(n)),M6={kernelName:Nl,backendName:"cpu",kernelFunc:z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6=ht(Cl,n=>Math.atan(n)),V6={kernelName:Cl,backendName:"cpu",kernelFunc:B6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6=Ut((n,e)=>Math.atan2(n,e)),U6=nn(Il,W6),G6={kernelName:Il,backendName:"cpu",kernelFunc:U6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6=ht($l,n=>Math.atanh(n)),j6={kernelName:$l,backendName:"cpu",kernelFunc:H6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qb(n,e,t,s,r,o){const i=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,g=r.padInfo.left,y=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=He(r.outShape,t),w=b.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3],S=r.outShape[2]*r.outShape[3],$=r.outShape[3];for(let N=0;N<r.batchSize;++N){const T=N*v,R=N*s[0];for(let L=0;L<r.inChannels;++L)for(let P=0;P<r.outHeight;++P){const O=P*i-f,F=Math.max(0,O),E=Math.min(r.inHeight,h+O),W=T+P*S;for(let X=0;X<r.outWidth;++X){const ee=X*a-g,Q=Math.max(0,ee),te=Math.min(r.inWidth,p+ee);let oe=y,U=0,Z=0;for(let z=F;z<E;z+=l){const q=R+z*s[1];for(let ue=Q;ue<te;ue+=c){const de=q+ue*s[2],he=n[de+L];o==="max"&&he>oe?oe=he:o==="avg"&&(U+=he,Z++)}if(isNaN(oe))break}const J=W+X*$+L;w[J]=o==="avg"?U/Z:oe}}}return b}function WR(n,e,t,s,r=!1,o=!1){const i=He(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.top,y=s.padInfo.left,b=He(e,t,n);for(let w=0;w<s.batchSize;++w)for(let v=0;v<s.inChannels;++v)for(let S=0;S<s.outHeight;++S){const $=S*a-g;let N=$;for(;N<0;)N+=c;const T=Math.min(s.inHeight,p+$);for(let R=0;R<s.outWidth;++R){const L=R*l-y;let P=L;for(;P<0;)P+=h;const O=Math.min(s.inWidth,f+L);let F=Number.NEGATIVE_INFINITY,E=-1;for(let W=N;W<T;W+=c){const X=W-$;for(let ee=P;ee<O;ee+=h){const Q=ee-L,te=b.get(w,W,ee,v);te>F&&(F=te,r?E=o?((w*s.inHeight+W)*s.inWidth+ee)*s.inChannels+v:(W*s.inWidth+ee)*s.inChannels+v:E=X*f+Q)}}i.set(E,w,S,R,v)}}return i}function UR(n,e,t,s,r,o){const i=r.strideDepth,a=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,h=r.dilationHeight,p=r.dilationWidth,f=r.effectiveFilterDepth,g=r.effectiveFilterHeight,y=r.effectiveFilterWidth,b=r.padInfo.front,w=r.padInfo.top,v=r.padInfo.left,S=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,$=He(r.outShape,t),N=$.values,T=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],R=r.outShape[2]*r.outShape[3]*r.outShape[4],L=r.outShape[3]*r.outShape[4],P=r.outShape[4];for(let O=0;O<r.batchSize;++O){const F=O*T,E=O*s[0];for(let W=0;W<r.inChannels;++W)for(let X=0;X<r.outDepth;++X){const ee=X*i-b;let Q=ee;for(;Q<0;)Q+=c;const te=Math.min(r.inDepth,f+ee),oe=F+X*R;for(let U=0;U<r.outHeight;++U){const Z=U*a-w;let J=Z;for(;J<0;)J+=h;const z=Math.min(r.inHeight,g+Z),q=oe+U*L;for(let ue=0;ue<r.outWidth;++ue){const de=ue*l-v;let he=de;for(;he<0;)he+=p;const me=Math.min(r.inWidth,y+de),be=q+ue*P;let Se=S,Ne=0,ze=0;for(let rt=Q;rt<te;rt+=c){const it=E+rt*s[1];for(let wt=J;wt<z;wt+=h){const ct=it+wt*s[2];for(let at=he;at<me;at+=p){const gt=ct+at*s[3],yt=n[gt+W];if(o==="max"&&yt>Se?Se=yt:o==="avg"&&(Ne+=yt,ze++),isNaN(Se))break}if(isNaN(Se))break}if(isNaN(Se))break}const Ue=be+W;N[Ue]=o==="avg"?Ne/Math.max(ze,1):Se}}}}return $}function q6(n,e){const t=He(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;for(let b=0;b<e.batchSize;++b)for(let w=0;w<e.inChannels;++w)for(let v=0;v<e.outDepth;++v){const S=v*s-f;let $=S;for(;$<0;)$+=i;const N=Math.min(e.inDepth,c+S);for(let T=0;T<e.outHeight;++T){const R=T*r-g;let L=R;for(;L<0;)L+=a;const P=Math.min(e.inHeight,h+R);for(let O=0;O<e.outWidth;++O){const F=O*o-y;let E=F;for(;E<0;)E+=l;const W=Math.min(e.inWidth,p+F);let X=Number.NEGATIVE_INFINITY,ee=-1;for(let Q=$;Q<N;Q+=i){const te=Q-S;for(let oe=L;oe<P;oe+=a){const U=oe-R;for(let Z=E;Z<W;Z+=l){const J=Z-F,z=n.get(b,Q,oe,Z,w);z>=X&&(X=z,ee=te*h*p+U*h+J)}}}t.set(ee,b,v,T,O,w)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Re(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=1;D(vn(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=Qs(r.shape,o,i,c,a,l);let p;if(h.filterWidth===1&&h.filterHeight===1&&Qe(h.inShape,h.outShape))p=Hr({inputs:{x:r},backend:t});else{const f=t.data.get(r.dataId).values,g=Le(r.shape),y=Qb(f,r.shape,r.dtype,g,h,"avg");p=t.makeTensorInfo(h.outShape,r.dtype,y.values)}return p}const X6={kernelName:Qc,backendName:"cpu",kernelFunc:K6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;Re(r,"avgPool3d");const h=wo(r.shape,o,i,1,a,l,c),p=t.data.get(r.dataId).values,f=UR(p,r.shape,r.dtype,Le(r.shape),h,"avg");return t.makeTensorInfo(f.shape,"float32",f.values)}const Q6={kernelName:Zc,backendName:"cpu",kernelFunc:Y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;Re([r,o],"avgPool3DGrad");const h=wo(o.shape,i,a,1,l,c),p=h.strideDepth,f=h.strideHeight,g=h.strideWidth,y=h.filterDepth,b=h.filterHeight,w=h.filterWidth,v=h.dilationDepth,S=h.dilationHeight,$=h.dilationWidth,N=h.effectiveFilterDepth,T=h.effectiveFilterHeight,R=h.effectiveFilterWidth,L=N-1-h.padInfo.front,P=R-1-h.padInfo.left,O=T-1-h.padInfo.top,F=He(o.shape,"float32"),E=1/(y*b*w),W=t.bufferSync(r);for(let X=0;X<h.batchSize;++X)for(let ee=0;ee<h.inChannels;++ee)for(let Q=0;Q<h.inDepth;++Q)for(let te=0;te<h.inHeight;++te)for(let oe=0;oe<h.inWidth;++oe){const U=Q-L,Z=te-O,J=oe-P;let z=0;for(let q=0;q<N;q+=v){const ue=(U+q)/p;if(!(ue<0||ue>=h.outDepth||Math.floor(ue)!==ue))for(let de=0;de<T;de+=S){const he=(Z+de)/f;if(!(he<0||he>=h.outHeight||Math.floor(he)!==he))for(let me=0;me<R;me+=$){const be=(J+me)/g;if(be<0||be>=h.outWidth||Math.floor(be)!==be)continue;const Se=W.get(X,ue,he,be,ee);z+=Se}}}F.set(z*E,X,Q,te,oe,ee)}return t.makeTensorInfo(F.shape,F.dtype,F.values)}const J6={kernelName:Qf,backendName:"cpu",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;Re([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,h=Qs(i.shape,a,l,1,c),p=h.strideHeight,f=h.strideWidth,g=h.filterHeight,y=h.filterWidth,b=h.dilationHeight,w=h.dilationWidth,v=h.effectiveFilterHeight,S=h.effectiveFilterWidth,$=S-1-h.padInfo.left,N=v-1-h.padInfo.top,T=He(i.shape,"float32"),R=1/(g*y),L=t.data.get(r.dataId).values,P=He(r.shape,"float32",L);for(let O=0;O<h.batchSize;++O)for(let F=0;F<h.inChannels;++F)for(let E=0;E<h.inHeight;++E)for(let W=0;W<h.inWidth;++W){const X=E-N,ee=W-$;let Q=0;for(let te=0;te<v;te+=b){const oe=(X+te)/p;if(!(oe<0||oe>=h.outHeight||Math.floor(oe)!==oe))for(let U=0;U<S;U+=w){const Z=(ee+U)/f;if(Z<0||Z>=h.outWidth||Math.floor(Z)!==Z)continue;const J=P.get(O,oe,Z,F);Q+=J}}T.set(Q*R,O,E,W,F)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const t5={kernelName:Yf,backendName:"cpu",kernelFunc:e5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:i,mean:a,variance:l}=e;D(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Re([r,a,l,o,i],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const h=t.data.get(r.dataId).values,p=t.data.get(a.dataId).values,f=t.data.get(l.dataId).values,g=o?t.data.get(o.dataId).values:new Float32Array([1]),y=i?t.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(h.length),w=y.length,v=g.length,S=f.length,$=p.length;let N=0,T=0,R=0,L=0;for(let P=0;P<h.length;++P)b[P]=y[N++]+(h[P]-p[T++])*g[R++]/Math.sqrt(f[L++]+c),N>=w&&(N=0),T>=$&&(T=0),R>=v&&(R=0),L>=S&&(L=0);return t.makeTensorInfo(r.shape,r.dtype,b)}const s5={kernelName:hd,backendName:"cpu",kernelFunc:n5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;Re([r],"batchToSpaceND");const a=o.reduce((v,S)=>v*S),l=gh(r.shape,o,a),c=yh(l.length,o.length),h=xh(r.shape,o,a),p=rb(i,o.length),f=ob(h,i,o.length),g=St({inputs:{x:r},backend:t,attrs:{shape:l}}),y=ns({inputs:{x:g},backend:t,attrs:{perm:c}}),b=St({inputs:{x:y},backend:t,attrs:{shape:h}}),w=ha({inputs:{x:b},backend:t,attrs:{begin:p,size:f}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),w}const o5={kernelName:ed,backendName:"cpu",kernelFunc:r5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,c=jb(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}const a5={kernelName:Zf,backendName:"cpu",kernelFunc:i5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l5(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,a=Ge(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const u5={kernelName:Jf,backendName:"cpu",kernelFunc:l5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c5=ht(Rl,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),d5={kernelName:Rl,backendName:"cpu",kernelFunc:c5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(le(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values;for(let c=0;c<a.length;c++){const h=a[c],p=l[c];s[c]=Math.hypot(h,p)}return t.makeOutput(s,e.shape,"float32")},p5={kernelName:nd,backendName:"cpu",kernelFunc:h5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yl(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const f5={kernelName:wm,backendName:"cpu",kernelFunc:yl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xl(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Xe(r,e[0].shape)[0],i=e.map(b=>b.shape);tb(i,o);let a=Pr(e.map(b=>b.shape),o);if(le(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(b=>le(b.shape)>0);if(l.length===1)return Hr({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const b=l.map(N=>da({inputs:{input:N},backend:t})),w=l.map(N=>yl({inputs:{input:N},backend:t})),v=xl({inputs:b,backend:t,attrs:{axis:o}}),S=xl({inputs:w,backend:t,attrs:{axis:o}}),$=fs({inputs:{real:v,imag:S},backend:t});return b.forEach(N=>t.disposeIntermediateTensorInfo(N)),w.forEach(N=>t.disposeIntermediateTensorInfo(N)),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),$}const c=l.map(b=>{const v=[-1,le(b.shape.slice(o))];return St({inputs:{x:b},backend:t,attrs:{shape:v}})}),h=c.map(b=>({vals:t.data.get(b.dataId).values,shape:b.shape}));a=Pr(c.map(b=>b.shape),1);const p=c[0].shape[0]===1,f=KE(h,a,e[0].dtype,p),g=Pr(l.map(b=>b.shape),o),y=t.makeTensorInfo(g,e[0].dtype,f);return c.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}const m5={kernelName:sd,backendName:"cpu",kernelFunc:xl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:h}=s;Re([r,o],"conv2d");const p=bo(l),f=dn(r.shape,o.shape,i,c,a,h,!1,p),g=f.filterHeight,y=f.filterWidth,b=f.dilationHeight,w=f.dilationWidth,v=f.padInfo.left,S=f.padInfo.top,$=f.dataFormat==="channelsLast",N=new Kt(f.outShape,r.dtype),T=Le(r.shape),R=Le(o.shape),L=T[0],P=$?T[1]:T[2],O=$?T[2]:1,F=$?1:T[1],E=N.strides[0],W=$?N.strides[1]:N.strides[2],X=$?N.strides[2]:1,ee=$?1:N.strides[1],Q=t.data.get(r.dataId).values,te=t.data.get(o.dataId).values,oe=N.values;for(let U=0;U<f.batchSize;++U){const Z=U*L,J=U*E;for(let z=0;z<f.outHeight;++z){const q=J+z*W,ue=z*f.strideHeight-S;for(let de=0;de<g;++de){const he=ue+de*b;if(he<0||he>=f.inHeight)continue;const me=de*R[0],be=Z+he*P;for(let Se=0;Se<f.outWidth;++Se){const Ne=q+Se*X,ze=Se*f.strideWidth-v;for(let Ue=0;Ue<y;++Ue){const rt=ze+Ue*w;if(rt<0||rt>=f.inWidth)continue;const it=me+Ue*R[1],wt=be+rt*O;let ct=it;for(let at=0;at<f.inChannels;++at){const gt=Q[wt+at*F];for(let yt=0;yt<f.outChannels;++yt)oe[Ne+yt*ee]+=gt*te[ct+yt];ct+=f.outChannels}}}}}}return t.makeTensorInfo(N.shape,N.dtype,oe)}const g5={kernelName:rd,backendName:"cpu",kernelFunc:GR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:h}=s;Re([r,o],"conv2dBackpropFilter");const p=bo(l),f=dn(r.shape,h,i,1,a,c,!1,p),{strideHeight:g,strideWidth:y,filterHeight:b,filterWidth:w}=f,v=f.dataFormat==="channelsLast",S=new Kt(f.filterShape,"float32"),$=f.padInfo.left,N=f.padInfo.top,T=t.data.get(r.dataId).values,R=t.data.get(o.dataId).values,L=new Kt(r.shape,r.dtype,T),P=new Kt(o.shape,o.dtype,R);for(let O=0;O<b;++O){const F=Math.max(0,Math.ceil((N-O)/g)),E=Math.min(f.outHeight,(f.inHeight+N-O)/g);for(let W=0;W<w;++W){const X=Math.max(0,Math.ceil(($-W)/y)),ee=Math.min(f.outWidth,(f.inWidth+$-W)/y);for(let Q=0;Q<f.inChannels;++Q)for(let te=0;te<f.outChannels;++te){let oe=0;for(let U=0;U<f.batchSize;++U)for(let Z=F;Z<E;++Z){const J=O+Z*g-N;for(let z=X;z<ee;++z){const q=W+z*y-$;v?oe+=L.get(U,J,q,Q)*P.get(U,Z,z,te):oe+=L.get(U,Q,J,q)*P.get(U,te,Z,z)}}S.set(oe,O,W,Q,te)}}}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const x5={kernelName:tm,backendName:"cpu",kernelFunc:y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:h}=s;Re([r,o],"conv2dBackpropInput");const p=Le(o.shape),f=Le(r.shape);let g=bo(c);const y=dn(i,o.shape,a,1,l,h,!1,g),b=new Kt(y.inShape,"float32"),w=b.values,v=t.data.get(r.dataId).values,S=t.data.get(o.dataId).values,[$,N,T]=p,{batchSize:R,filterHeight:L,filterWidth:P,inChannels:O,inHeight:F,inWidth:E,outChannels:W,outHeight:X,outWidth:ee,strideHeight:Q,strideWidth:te}=y;g=y.dataFormat;const oe=L-1-y.padInfo.top,U=P-1-y.padInfo.left,Z=g==="channelsLast",J=b.strides[0],z=Z?b.strides[1]:b.strides[2],q=Z?b.strides[2]:1,ue=Z?1:b.strides[1],de=f[0],he=Z?f[1]:f[2],me=Z?f[2]:1,be=Z?1:f[1];for(let Se=0;Se<R;++Se)for(let Ne=0;Ne<O;++Ne)for(let ze=0;ze<F;++ze){const Ue=ze-oe,rt=Math.max(0,Math.ceil(Ue/Q)),it=Math.min(X,(L+Ue)/Q);for(let wt=0;wt<E;++wt){const ct=wt-U,at=Math.max(0,Math.ceil(ct/te)),gt=Math.min(ee,(P+ct)/te);let yt=0;for(let Tt=rt;Tt<it;++Tt){const Hn=Tt*Q-Ue;for(let Cn=at;Cn<gt;++Cn){const Nr=Cn*te-ct,rs=de*Se+he*Tt+me*Cn,Fs=$*(L-1-Hn)+N*(P-1-Nr)+T*Ne;for(let er=0;er<W;++er){const Ls=v[rs+be*er],vs=S[Fs+er];yt+=Ls*vs}}}const bs=J*Se+z*ze+q*wt+ue*Ne;w[bs]=yt}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const b5={kernelName:od,backendName:"cpu",kernelFunc:w5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s;Re([r,o],"conv3d");const c=pi(r.shape,o.shape,i,l,a),{filterDepth:h,filterHeight:p,filterWidth:f,dilationDepth:g,dilationHeight:y,dilationWidth:b,padInfo:w}=c,v=w.front,S=w.left,$=w.top,N=new Kt(c.outShape,r.dtype),T=t.data.get(r.dataId).values,R=t.data.get(o.dataId).values,L=N.values,P=Le(r.shape),O=Le(o.shape);for(let F=0;F<c.batchSize;++F){const E=F*P[0],W=F*N.strides[0];for(let X=0;X<c.outDepth;++X){const ee=W+X*N.strides[1],Q=X*c.strideDepth-v;for(let te=0;te<h;++te){const oe=Q+te*g;if(oe<0||oe>=c.inDepth)continue;const U=te*O[0],Z=E+oe*P[1];for(let J=0;J<c.outHeight;++J){const z=ee+J*N.strides[2],q=J*c.strideHeight-$;for(let ue=0;ue<p;++ue){const de=q+ue*y;if(de<0||de>=c.inHeight)continue;const he=U+ue*O[1],me=Z+de*P[2];for(let be=0;be<c.outWidth;++be){const Se=z+be*c.outChannels,Ne=be*c.strideWidth-S;for(let ze=0;ze<f;++ze){const Ue=Ne+ze*b;if(Ue<0||Ue>=c.inWidth)continue;const rt=he+ze*O[2],it=me+Ue*c.inChannels;let wt=rt;for(let ct=0;ct<c.inChannels;++ct){const at=T[it+ct];for(let gt=0;gt<c.outChannels;++gt)L[Se+gt]+=at*R[wt+gt];wt+=c.outChannels}}}}}}}}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const S5={kernelName:id,backendName:"cpu",kernelFunc:v5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s;Re([r,o],"conv3dBackpropFilterV2");const c=Le(r.shape),h=Le(o.shape),p=pi(r.shape,l,i,1,a),f=p.strideDepth,g=p.strideHeight,y=p.strideWidth,b=p.filterDepth,w=p.filterHeight,v=p.filterWidth,S=new Kt(p.filterShape,"float32"),$=S.values,[N,T,R,L]=S.strides,P=t.data.get(o.dataId).values,[O,F,E,W]=h,X=t.data.get(r.dataId).values,[ee,Q,te,oe]=c,U=p.padInfo.front,Z=p.padInfo.left,J=p.padInfo.top;for(let z=0;z<b;++z){const q=Math.max(0,Math.ceil((U-z)/f)),ue=Math.min(p.outDepth,(p.inDepth+U-z)/f),de=z*N;for(let he=0;he<w;++he){const me=Math.max(0,Math.ceil((J-he)/g)),be=Math.min(p.outHeight,(p.inHeight+J-he)/g),Se=he*T+de;for(let Ne=0;Ne<v;++Ne){const ze=Math.max(0,Math.ceil((Z-Ne)/y)),Ue=Math.min(p.outWidth,(p.inWidth+Z-Ne)/y),rt=Ne*R+Se;for(let it=0;it<p.inChannels;++it){const wt=it*L+rt;for(let ct=0;ct<p.outChannels;++ct){let at=0;for(let gt=0;gt<p.batchSize;++gt){const yt=gt*ee,bs=gt*O;for(let Tt=q;Tt<ue;++Tt){const Cn=(z+Tt*f-U)*Q+yt,Nr=Tt*F+bs;for(let rs=me;rs<be;++rs){const er=(he+rs*g-J)*te+Cn,Ls=rs*E+Nr;for(let vs=ze;vs<Ue;++vs){const Kr=(Ne+vs*y-Z)*oe+er,Xr=vs*W+Ls;at+=X[Kr+it]*P[Xr+ct]}}}}$[wt+ct]=at}}}}}return t.makeTensorInfo(S.shape,S.dtype,S.values)}const N5={kernelName:nm,backendName:"cpu",kernelFunc:k5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s;Re([r],"conv3dBackpropInputV2");const c=Le(r.shape),h=Le(o.shape),p=pi(l,o.shape,a,1,i),f=new Kt(p.inShape,"float32"),g=f.values,[y,b,w,v]=f.strides,S=t.data.get(r.dataId).values,[$,N,T,R]=c,L=t.data.get(o.dataId).values,[P,O,F,E]=h,{batchSize:W,filterDepth:X,filterHeight:ee,filterWidth:Q,inChannels:te,inDepth:oe,inHeight:U,inWidth:Z,outChannels:J,outDepth:z,outHeight:q,outWidth:ue,strideDepth:de,strideHeight:he,strideWidth:me}=p,be=X-1-p.padInfo.front,Se=ee-1-p.padInfo.top,Ne=Q-1-p.padInfo.left;for(let ze=0;ze<W;++ze)for(let Ue=0;Ue<te;++Ue)for(let rt=0;rt<oe;++rt){const it=rt-be,wt=Math.max(0,Math.ceil(it/de)),ct=Math.min(z,(X+it)/de);for(let at=0;at<U;++at){const gt=at-Se,yt=Math.max(0,Math.ceil(gt/he)),bs=Math.min(q,(ee+gt)/he);for(let Tt=0;Tt<Z;++Tt){const Hn=Tt-Ne,Cn=Math.max(0,Math.ceil(Hn/me)),Nr=Math.min(ue,(Q+Hn)/me);let rs=0;for(let Fs=wt;Fs<ct;++Fs){const er=Fs*de-it;for(let Ls=yt;Ls<bs;++Ls){const vs=Ls*he-gt;for(let $o=Cn;$o<Nr;++$o){const Kr=$o*me-Hn,Xr=$*ze+N*Fs+T*Ls+R*$o,iy=P*(X-1-er)+O*(ee-1-vs)+F*(Q-1-Kr)+E*Ue;for(let Si=0;Si<J;++Si){const _h=S[Xr+Si],ay=L[iy+Si];rs+=_h*ay}}}}g[y*ze+b*rt+w*at+v*Tt+Ue]=rs}}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const $5={kernelName:sm,backendName:"cpu",kernelFunc:C5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I5=ht(Al,n=>Math.cos(n)),T5={kernelName:Al,backendName:"cpu",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5=ht(Dl,n=>Math.cosh(n)),R5={kernelName:Dl,backendName:"cpu",kernelFunc:E5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:c}=s,[h,p,f,g]=r.shape,y=o.shape[0],[b,w]=a,v=He([y,b,w,g],"float32"),S=t.data.get(o.dataId).values,$=t.data.get(i.dataId).values,N=t.data.get(r.dataId).values,T=Le(r.shape),R=Le(v.shape);for(let L=0;L<y;L++){const P=L*4,O=S[P],F=S[P+1],E=S[P+2],W=S[P+3],X=$[L];if(X>=h)continue;const ee=b>1?(E-O)*(p-1)/(b-1):0,Q=w>1?(W-F)*(f-1)/(w-1):0;for(let te=0;te<b;te++){const oe=b>1?O*(p-1)+te*ee:.5*(O+E)*(p-1);if(oe<0||oe>p-1){for(let U=0;U<w;U++)for(let Z=0;Z<g;Z++){const J=Z+U*R[2]+te*R[1]+L*R[0];v.values[J]=c}continue}if(l==="bilinear"){const U=Math.floor(oe),Z=Math.ceil(oe),J=oe-U;for(let z=0;z<w;z++){const q=w>1?F*(f-1)+z*Q:.5*(F+W)*(f-1);if(q<0||q>f-1){for(let me=0;me<g;me++){const be=me+z*R[2]+te*R[1]+L*R[0];v.values[be]=c}continue}const ue=Math.floor(q),de=Math.ceil(q),he=q-ue;for(let me=0;me<g;me++){let be=me+ue*T[2]+U*T[1]+X*T[0];const Se=N[be];be=me+de*T[2]+U*T[1]+X*T[0];const Ne=N[be];be=me+ue*T[2]+Z*T[1]+X*T[0];const ze=N[be];be=me+de*T[2]+Z*T[1]+X*T[0];const Ue=N[be],rt=Se+(Ne-Se)*he,it=ze+(Ue-ze)*he;be=me+z*R[2]+te*R[1]+L*R[0],v.values[be]=rt+(it-rt)*J}}}else for(let U=0;U<w;++U){const Z=w>1?F*(f-1)+U*Q:.5*(F+W)*(f-1);if(Z<0||Z>f-1){for(let q=0;q<g;q++){const ue=q+U*R[2]+te*R[1]+L*R[0];v.values[ue]=c}continue}const J=Math.round(Z),z=Math.round(oe);for(let q=0;q<g;q++){const ue=q+J*T[2]+z*T[1]+X*T[0],de=q+U*R[2]+te*R[1]+L*R[0];v.values[de]=N[ue]}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const D5={kernelName:om,backendName:"cpu",kernelFunc:A5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;Re(r,"cumprod");const l=Ot([o],r.shape.length);let c=r;l!=null&&(c=ns({inputs:{x:r},backend:t,attrs:{perm:l}}));const h=Vt(1,r.shape.length)[0];if(h!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${h}`);const p=Qn(c.dtype,"int32"),f=qf(le(c.shape),p),g=t.data.get(c.dataId).values,y=c.shape[c.shape.length-1],b=a?(v,S)=>v+y-S-1:(v,S)=>v+S;for(let v=0;v<g.length;v+=y)for(let S=0;S<y;S++){const $=b(v,S);if(S===0)f[$]=i?1:g[$];else{const N=b(v,S-1);f[$]=i?g[N]*f[N]:g[$]*f[N]}}const w=t.makeTensorInfo(c.shape,p,f);if(l!=null){const v=fi(l),S=ns({inputs:{x:w},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(c),S}return w}const O5={kernelName:rm,backendName:"cpu",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;Re(r,"cumsum");const l=Ot([o],r.shape.length);let c=r;l!=null&&(c=ns({inputs:{x:r},backend:t,attrs:{perm:l}}));const h=Vt(1,r.shape.length)[0];if(h!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${h}`);const p=Qn(c.dtype,"int32"),f=wn(le(c.shape),p),g=t.data.get(c.dataId).values,y=c.shape[c.shape.length-1],b=a?(v,S)=>v+y-S-1:(v,S)=>v+S;for(let v=0;v<g.length;v+=y)for(let S=0;S<y;S++){const $=b(v,S);if(S===0)f[$]=i?0:g[$];else{const N=b(v,S-1);f[$]=i?g[N]+f[N]:g[$]+f[N]}}const w=t.makeTensorInfo(c.shape,p,f);if(l!=null){const v=fi(l),S=ns({inputs:{x:w},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(c),S}return w}const L5={kernelName:ad,backendName:"cpu",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,h=jb(l,c,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,h)}else if(r.shape.length===2){const l=t.bufferSync(r),c=t.bufferSync(o),h=HE(l,c,i,a);return t.makeTensorInfo(h.shape,o.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const z5={kernelName:im,backendName:"cpu",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s;D(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const a=r.shape[0],l=r.shape[1],c=r.shape[2],h=r.shape[3],p=l*o,f=c*o,g=h/(o*o),y=t.data.get(r.dataId).values,b=new Float32Array(a*p*f*g);let w=0;for(let v=0;v<a;++v)for(let S=0;S<p;++S){const $=Math.floor(S/o),N=S%o;for(let T=0;T<f;++T){const R=Math.floor(T/o),L=T%o,P=(N*o+L)*g;for(let O=0;O<g;++O){const E=O+P+h*(R+c*($+l*v));b[w++]=y[E]}}}return t.makeTensorInfo([a,p,f,g],r.dtype,b)}const B5={kernelName:am,backendName:"cpu",kernelFunc:M5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;Re([r,o],"depthwiseConv2DNative");const h=Le(r.shape),p=Le(o.shape);let f=l;f==null&&(f=[1,1]),D(vn(i,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${f}'`);const g=dn(r.shape,o.shape,i,f,a,c,!0),{filterHeight:y,filterWidth:b,dilationHeight:w,dilationWidth:v,padInfo:S}=g,$=S.left,N=S.top,T=g.outChannels/g.inChannels,R=new Kt(g.outShape,r.dtype),L=t.data.get(r.dataId).values,P=t.data.get(o.dataId).values,O=R.values;for(let F=0;F<g.batchSize;++F){const E=F*h[0],W=F*R.strides[0];for(let X=0;X<g.outHeight;++X){const ee=W+X*R.strides[1],Q=X*g.strideHeight-N;for(let te=0;te<y;++te){const oe=Q+te*w;if(oe<0||oe>=g.inHeight)continue;const U=te*p[0],Z=E+oe*h[1];for(let J=0;J<g.outWidth;++J){const z=ee+J*R.strides[2],q=J*g.strideWidth-$;for(let ue=0;ue<b;++ue){const de=q+ue*v;if(de<0||de>=g.inWidth)continue;const he=U+ue*p[1],me=Z+de*g.inChannels;let be=z,Se=he;for(let Ne=0;Ne<g.inChannels;++Ne){const ze=L[me+Ne];for(let Ue=0;Ue<T;++Ue)O[be+Ue]+=ze*P[Se+Ue];be+=T,Se+=T}}}}}}return t.makeTensorInfo(R.shape,R.dtype,R.values)}const V5={kernelName:ld,backendName:"cpu",kernelFunc:HR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:h}=s;Re([r,o],"depthwiseConv2dNativeBackpropFilter");const p=dn(r.shape,h,i,a,l,c,!0),{strideHeight:f,strideWidth:g,filterHeight:y,filterWidth:b}=p,w=new Kt(p.filterShape,"float32"),v=p.padInfo.left,S=p.padInfo.top,$=p.outChannels/p.inChannels,N=t.data.get(r.dataId).values,T=new Kt(r.shape,r.dtype,N),R=t.data.get(o.dataId).values,L=new Kt(o.shape,o.dtype,R);for(let P=0;P<y;++P){const O=Math.max(0,Math.ceil((S-P)/f)),F=Math.min(p.outHeight,(p.inHeight+S-P)/f);for(let E=0;E<b;++E){const W=Math.max(0,Math.ceil((v-E)/g)),X=Math.min(p.outWidth,(p.inWidth+v-E)/g);for(let ee=0;ee<p.outChannels;++ee){const Q=Math.trunc(ee/$),te=ee%$;let oe=0;for(let U=0;U<p.batchSize;++U)for(let Z=O;Z<F;++Z){const J=P+Z*f-S;for(let z=W;z<X;++z){const q=E+z*g-v;oe+=T.get(U,J,q,Q)*L.get(U,Z,z,ee)}}w.set(oe,P,E,Q,te)}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const U5={kernelName:lm,backendName:"cpu",kernelFunc:W5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:h}=s;Re([r,o],"depthwiseConv2DNativeBackpropInput");const p=Le(r.shape),f=Le(o.shape),g=dn(h,o.shape,i,a,l,c,!0),y=new Kt(g.inShape,"float32"),b=y.values,[w,v,S]=y.strides,$=t.data.get(r.dataId).values,[N,T,R]=p,L=t.data.get(o.dataId).values,[P,O,F]=f,{batchSize:E,filterHeight:W,filterWidth:X,inChannels:ee,inHeight:Q,inWidth:te,outChannels:oe,outHeight:U,outWidth:Z,strideHeight:J,strideWidth:z}=g,q=W-1-g.padInfo.top,ue=X-1-g.padInfo.left,de=oe/ee;for(let he=0;he<E;++he)for(let me=0;me<ee;++me)for(let be=0;be<Q;++be){const Se=be-q,Ne=Math.max(0,Math.ceil(Se/J)),ze=Math.min(U,(W+Se)/J);for(let Ue=0;Ue<te;++Ue){const rt=Ue-ue,it=Math.max(0,Math.ceil(rt/z)),wt=Math.min(Z,(X+rt)/z);let ct=0;for(let at=Ne;at<ze;++at){const gt=at*J-Se;for(let yt=it;yt<wt;++yt){const bs=yt*z-rt,Tt=N*he+T*at+R*yt,Hn=P*(W-1-gt)+O*(X-1-bs)+F*me;for(let Cn=0;Cn<de;++Cn){const Nr=me*de+Cn,rs=$[Tt+Nr],Fs=L[Hn+Cn];ct+=rs*Fs}}}b[w*he+v*be+S*Ue+me]=ct}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const H5={kernelName:um,backendName:"cpu",kernelFunc:G5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j5(n){const{inputs:e,backend:t}=n,{x:s}=e,r=le(s.shape),o=t.data.get(s.dataId).values,i=He([r,r],s.dtype),a=i.values;for(let c=0;c<o.length;c++)a[c*r+c]=o[c];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,i.dtype,i.values)}const q5={kernelName:cm,backendName:"cpu",kernelFunc:j5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K5={kernelName:ud,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:a}=t,l=e,c=l.data.get(s.dataId).values,h=s.shape.length,p=l.data.get(r.dataId).values,f=r.shape.length,{batchSize:g,inHeight:y,inWidth:b,inChannels:w,outHeight:v,outWidth:S,padInfo:$,strideHeight:N,strideWidth:T,filterHeight:R,filterWidth:L,dilationHeight:P,dilationWidth:O,outShape:F}=Zd(s.shape,r.shape,o,i,"NHWC",a),E=le(F),W=F.length,X=Pt(s.dtype,E);for(let Q=0;Q<g;++Q)for(let te=0;te<v;++te){const oe=te*N-$.top;for(let U=0;U<S;++U){const Z=U*T-$.left;for(let J=0;J<w;++J){let z=Number.MIN_SAFE_INTEGER;for(let ue=0;ue<R;++ue){const de=oe+ue*P;if(de>=0&&de<y)for(let he=0;he<L;++he){const me=Z+he*O;if(me>=0&&me<b){const be=fr([Q,de,me,J],h,Le(s.shape)),Se=fr([ue,he,J],f,Le(r.shape)),Ne=c[be]+p[Se];Ne>z&&(z=Ne)}}}const q=fr([Q,te,U,J],W,Le(F));X[q]=z}}}return{dataId:l.write(di(X,s.dtype),F,s.dtype),shape:F,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5={kernelName:wf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,c=e,h=Rs(s.shape,c.data.get(s.dataId).values),p=Rs(r.shape,c.data.get(r.dataId).values),{batchSize:f,inHeight:g,inWidth:y,inChannels:b,outHeight:w,outWidth:v,padInfo:S,strideHeight:$,strideWidth:N,filterHeight:T,filterWidth:R,dilationHeight:L,dilationWidth:P,outShape:O}=Zd(s.shape,r.shape,i,a,"NHWC",l);D(o.rank===O.length,()=>`Error in ${wf}, dy must have the same rank as output ${O.length}, but got ${o.rank}`);const F=Rs(O,c.data.get(o.dataId).values),E=S1(r.shape,r.dtype);for(let X=0;X<f;++X)for(let ee=0;ee<w;++ee){const Q=ee*$-S.top;for(let te=0;te<v;++te){const oe=te*N-S.left;for(let U=0;U<b;++U){let Z=Number.MIN_SAFE_INTEGER,J=0,z=0;for(let q=0;q<T;++q){const ue=Q+q*L;if(ue>=0&&ue<g)for(let de=0;de<R;++de){const he=oe+de*P;if(he>=0&&he<y){const me=h[X][ue][he][U]+p[q][de][U];me>Z&&(Z=me,J=q,z=de)}}}E[J][z][U]+=F[X][ee][te][U]}}}return{dataId:c.write(di(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5={kernelName:xf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:a,dilations:l}=t,c=e,h=Rs(s.shape,c.data.get(s.dataId).values),p=Rs(r.shape,c.data.get(r.dataId).values),{batchSize:f,inHeight:g,inWidth:y,inChannels:b,outHeight:w,outWidth:v,padInfo:S,strideHeight:$,strideWidth:N,filterHeight:T,filterWidth:R,dilationHeight:L,dilationWidth:P,outShape:O}=Zd(s.shape,r.shape,i,a,"NHWC",l);D(o.rank===O.length,()=>`Error in ${xf}, dy must have the same rank as output ${O.length}, but got ${o.rank}`);const F=Rs(O,c.data.get(o.dataId).values),E=S1(s.shape,s.dtype);for(let X=0;X<f;++X)for(let ee=0;ee<w;++ee){const Q=ee*$-S.top;for(let te=0;te<v;++te){const oe=te*N-S.left;for(let U=0;U<b;++U){let Z=Number.MIN_SAFE_INTEGER,J=Q<0?0:Q,z=oe<0?0:oe;for(let q=0;q<T;++q){const ue=Q+q*L;if(ue>=0&&ue<g)for(let de=0;de<R;++de){const he=oe+de*P;if(he>=0&&he<y){const me=h[X][ue][he][U]+p[q][de][U];me>Z&&(Z=me,J=ue,z=he)}}}E[X][J][z][U]+=F[X][ee][te][U]}}}return{dataId:c.write(di(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:o,options:i}=s,{contextOptions:a,imageOptions:l}=i||{},c=(l==null?void 0:l.alpha)||1,h=(a==null?void 0:a.contextType)||"2d";if(h!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const p=o.getContext(h,(a==null?void 0:a.contextAttributes)||{});if(p==null)throw new Error(`Could not get the context with ${h} type.`);const[f,g]=r.shape.slice(0,2),y=r.shape.length===2?1:r.shape[2],b=t.data.get(r.dataId).values,w=r.dtype==="float32"?255:1,v=new Uint8ClampedArray(g*f*4);for(let $=0;$<f*g;++$){const N=[0,0,0,255*c];for(let R=0;R<y;R++){const L=b[$*y+R];if(r.dtype==="float32"){if(L<0||L>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${L}.`)}else if(r.dtype==="int32"&&(L<0||L>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${L}.`);y===1?(N[0]=L*w,N[1]=L*w,N[2]=L*w):N[R]=L*w}const T=$*4;v[T+0]=Math.round(N[0]),v[T+1]=Math.round(N[1]),v[T+2]=Math.round(N[2]),v[T+3]=Math.round(N[3])}o.width=g,o.height=f;const S=new ImageData(v,g,f);return p.putImageData(S,0,0),r}const Z5={kernelName:dm,backendName:"cpu",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ih(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Re(r,"sum");let a;r.dtype==="bool"?a=ci({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):a=Hr({inputs:{x:r},backend:t});const l=a.shape.length,c=Xe(o,a.shape),h=Ot(c,l);let p=c,f=a;h!=null&&(f=ns({inputs:{x:a},backend:t,attrs:{perm:h}}),p=Vt(p.length,l)),Sn("sum",p,f.shape.length);const[g,y]=hn(f.shape,p),b=Qn(f.dtype,"int32");let w=Lf(t,g,b);const v=le(y),S=t.data.get(w.dataId).values,$=t.data.get(f.dataId).values;for(let N=0;N<S.length;++N){const T=N*v;let R=0;for(let L=0;L<v;++L)R+=$[T+L];S[N]=R}if(i){const N=Bt(w.shape,c),T=w;w=St({inputs:{x:w},backend:t,attrs:{shape:N}}),t.disposeIntermediateTensorInfo(T)}return t.disposeIntermediateTensorInfo(a),h!=null&&t.disposeIntermediateTensorInfo(f),w}const J5={kernelName:Wd,backendName:"cpu",kernelFunc:Ih};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eq(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=pb(r,o.length);mb(i.length,l,o);const{path:c,steps:h}=gb(a,l),p=h.length;let f=null,g=i.length;const y=[];for(let b=0;b<p;++b){for(const w of h[b]){const{permutationIndices:v,expandDims:S}=fb(g,l[w]);let $;yb(v)?$=o[w]:($=ns({inputs:{x:o[w]},backend:t,attrs:{perm:v}}),y.push($));const N=$.shape.slice();for(let T=0;T<S.length;++T)N.splice(S[T],0,1);Qe($.shape,N)||($=St({inputs:{x:$},backend:t,attrs:{shape:N}}),y.push($)),f===null?f=$:(f=ey({inputs:{a:$,b:f},backend:t}),y.push(f))}b<p-1&&(c[b]>=0&&(f=Ih({inputs:{x:f},backend:t,attrs:{axis:c[b]-(i.length-g),keepDims:!1}}),y.push(f)),g--)}for(const b of y)b!==f&&t.disposeIntermediateTensorInfo(b);return f}const tq={kernelName:hm,backendName:"cpu",kernelFunc:eq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nq(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Re([s,r],"eluGrad");const o=new Float32Array(le(r.shape)),i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<i.length;++l){const c=i[l];c>=0?o[l]=a[l]:o[l]=a[l]*(c+1)}return t.makeTensorInfo(r.shape,"float32",o)}const sq={kernelName:pm,backendName:"cpu",kernelFunc:nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq=ib,oq=ab,iq=lb,aq=ub,lq=cb,uq=db,cq=ht(Fl,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+rq*t);return e*(1-((((uq*s+lq)*s+aq)*s+iq)*s+oq)*s*Math.exp(-t*t))}),dq={kernelName:Fl,backendName:"cpu",kernelFunc:cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,i=r.shape.length,a=r.shape.slice();let l=o;return o<0&&(D(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),St({inputs:{x:r},backend:t,attrs:{shape:a}})}const hq={kernelName:dd,backendName:"cpu",kernelFunc:Mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq=Ut((n,e)=>n/e),Zb=nn(_l,pq),c1={kernelName:_l,backendName:"cpu",kernelFunc:Zb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n,e,t){const s=n.shape,r=s[0],o=s[1],i=t.data.get(n.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[r,o],h=le(c),p=un("float32",h),f=un("float32",h);for(let w=0;w<r;w++){const v=ha({inputs:{x:a},backend:t,attrs:{begin:[w,0],size:[1,o]}}),S=ha({inputs:{x:l},backend:t,attrs:{begin:[w,0],size:[1,o]}}),$=fs({inputs:{real:v,imag:S},backend:t}),{real:N,imag:T}=fq($,e,t),R=mo(N,T);for(let L=0;L<o;L++){const P=hb(R,L);p[w*o+L]=P.real,f[w*o+L]=P.imag}t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo($)}const g=t.makeTensorInfo(c,"float32",p),y=t.makeTensorInfo(c,"float32",f),b=fs({inputs:{real:g,imag:y},backend:t});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),b}function fq(n,e,t){const s=le(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,i=t.data.get(r.complexTensorInfos.imag.dataId).values;if(mq(s)){const a=d1(o,i,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(l,"float32",a.real),h=t.makeTensorInfo(l,"float32",a.imag),p=t.makeTensorInfo([],"float32",xo(s,"float32")),f=Hr({inputs:{x:p},backend:t}),g=c1.kernelFunc({inputs:{a:c,b:p},backend:t}),y=c1.kernelFunc({inputs:{a:h,b:f},backend:t}),b=t.data.get(g.dataId).values,w=t.data.get(y.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),{real:b,imag:w}}return a}else{const a=mo(o,i),l=gq(a,s,e);return tT(l)}}function mq(n){return(n&n-1)===0}function d1(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=mo(n,e),i=t/2,a=nT(o),l=a.real,c=a.imag,h=[l.length],p=r.makeTensorInfo(h,"float32",l),f=r.makeTensorInfo(h,"float32",c),g=fs({inputs:{real:p,imag:f},backend:r}),y=sT(o),b=y.real,w=y.imag,v=[b.length],S=r.makeTensorInfo(v,"float32",b),$=r.makeTensorInfo(v,"float32",w),N=fs({inputs:{real:S,imag:$},backend:r}),T=d1(l,c,i,s,r),R=T.real,L=T.imag,P=[R.length],O=r.makeTensorInfo(P,"float32",R),F=r.makeTensorInfo(P,"float32",L),E=fs({inputs:{real:O,imag:F},backend:r}),W=d1(b,w,i,s,r),X=W.real,ee=W.imag,Q=[X.length],te=r.makeTensorInfo(Q,"float32",X),oe=r.makeTensorInfo(Q,"float32",ee),U=fs({inputs:{real:te,imag:oe},backend:r}),Z=oT(t,s),J=[Z.real.length],z=r.makeTensorInfo(J,"float32",Z.real),q=r.makeTensorInfo(J,"float32",Z.imag),ue=fs({inputs:{real:z,imag:q},backend:r}),de=ey({inputs:{a:ue,b:U},backend:r}),he=gl({inputs:{a:E,b:de},backend:r}),me=Yb({inputs:{a:E,b:de},backend:r}),be=da({inputs:{input:he},backend:r}),Se=da({inputs:{input:me},backend:r}),Ne=yl({inputs:{input:he},backend:r}),ze=yl({inputs:{input:me},backend:r}),Ue=xl({inputs:[be,Se],backend:r,attrs:{axis:0}}),rt=xl({inputs:[Ne,ze],backend:r,attrs:{axis:0}}),it=r.data.get(Ue.dataId).values,wt=r.data.get(rt.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(de),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(me),r.disposeIntermediateTensorInfo(be),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Se),r.disposeIntermediateTensorInfo(ze),r.disposeIntermediateTensorInfo(Ue),r.disposeIntermediateTensorInfo(rt),{real:it,imag:wt}}function gq(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,i=0;for(let a=0;a<e;a++){const l=iT(r*a,e,t),c=hb(n,a);o+=c.real*l.real-c.imag*l.imag,i+=c.real*l.imag+c.imag*l.real}t&&(o/=e,i/=e),rT(s,o,i,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yq(n){const{inputs:e,backend:t}=n,{input:s}=e,r=le(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=St({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=jR(a,!1,t),c=St({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const xq={kernelName:fm,backendName:"cpu",kernelFunc:yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jb(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,i=o||ma(r),a=Pt(i,le(s));return bq(a,r,i),e.makeTensorInfo(s,i,a)}const wq={kernelName:mm,backendName:"cpu",kernelFunc:Jb};function bq(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq={kernelName:gm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=un(s.dtype,le(s.shape)),[i,a,l,c]=s.shape,h=r.data.get(s.dataId).values;for(let f=0;f<i;f++){const g=f*l*a*c;for(let y=0;y<a;y++){const b=y*(l*c);for(let w=0;w<l;w++){const v=w*c;for(let S=0;S<c;S++){const $=Math.round(l-w-1),N=g+b+v+S;let T=h[N];if($>=0&&$<l){const R=$*c,L=g+b+R+S;T=h[L]}o[N]=T}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:f,activation:g,leakyreluAlpha:y}=s;let b=GR({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:f}});if(i){const w=b;if(h==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const v=St({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});b=gl({inputs:{a:b,b:v},backend:t}),t.disposeIntermediateTensorInfo(v)}else b=gl({inputs:{a:b,b:i},backend:t});t.disposeIntermediateTensorInfo(w)}if(g){const w=b;if(h==="NCHW"&&g==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const v=St({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});b=zf(t,b,g,v,y),t.disposeIntermediateTensorInfo(v)}else b=zf(t,b,g,a,y);t.disposeIntermediateTensorInfo(w)}return b}const kq={kernelName:Ec,backendName:"cpu",kernelFunc:Sq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:f,activation:g,leakyreluAlpha:y}=s;let b=HR({inputs:{x:r,filter:o},backend:t,attrs:{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:f}});if(i){const w=b;b=gl({inputs:{a:b,b:i},backend:t}),t.disposeIntermediateTensorInfo(w)}if(g){const w=b;b=zf(t,b,g,a,y),t.disposeIntermediateTensorInfo(w)}return b}const Cq={kernelName:Rc,backendName:"cpu",kernelFunc:Nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $q(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=le(s.shape),i=r.shape,a=i[i.length-1],[l,c,h,p]=zg(s,r);if(c===0)return t.makeTensorInfo(l,s.dtype,[]);const f=t.data.get(r.dataId).values,g=t.bufferSync(s),y=nR(f,g,s.dtype,c,a,h,p,s.shape,o);return t.makeTensorInfo(l,s.dtype,y.values)}const Iq={kernelName:ym,backendName:"cpu",kernelFunc:$q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s;Re([r,o],"gatherV2");const l=Xe(i,r.shape)[0],c=t.data.get(o.dataId).values,h=r.shape[l];for(let N=0;N<c.length;++N){const T=c[N];D(T<=h-1&&T>=0,()=>`GatherV2: the index value ${T} is not in [0, ${h-1}]`)}let p=a;a==null&&(p=0);const f=le(o.shape),g=wb(r,o,l,p),y=St({inputs:{x:r},backend:t,attrs:{shape:[g.batchSize,g.outerSize,g.dimSize,g.sliceSize]}}),b=St({inputs:{x:o},backend:t,attrs:{shape:[g.batchSize,f/g.batchSize]}}),w=[g.batchSize,g.outerSize,f/g.batchSize,g.sliceSize],v=t.bufferSync(b),S=t.bufferSync(y),$=sR(S,v,w);return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.makeTensorInfo(g.outputShape,$.dtype,$.values)}const Eq={kernelName:pd,backendName:"cpu",kernelFunc:Tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rq(n){const{inputs:e,backend:t}=n,{input:s}=e,r=le(s.shape),o=s.shape[s.shape.length-1],i=r/o,a=St({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),l=jR(a,!0,t),c=St({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const Aq={kernelName:xm,backendName:"cpu",kernelFunc:Rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dq=ht(Wl,n=>Number.isFinite(n)?1:0,"bool"),_q={kernelName:Wl,backendName:"cpu",kernelFunc:Dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq=ht(Ul,n=>Math.abs(n)===1/0?1:0,"bool"),Fq={kernelName:Ul,backendName:"cpu",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=ht(Gl,n=>Number.isNaN(n)?1:0,"bool"),Pq={kernelName:Gl,backendName:"cpu",kernelFunc:Lq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zq(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=lR(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const Mq={kernelName:bm,backendName:"cpu",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bq=ht(jl,n=>Math.log1p(n)),Vq={kernelName:jl,backendName:"cpu",kernelFunc:Bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq=Ut((n,e)=>n&&e),Uq=nn(xd,Wq,null,"bool"),Gq={kernelName:xd,backendName:"cpu",kernelFunc:Uq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hq=ht(wd,n=>n?0:1,"bool"),jq={kernelName:wd,backendName:"cpu",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qq=Ut((n,e)=>n||e),Kq=nn(bd,qq,null,"bool"),Xq={kernelName:bd,backendName:"cpu",kernelFunc:Kq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s;Re(r,"LRN");const c=r.shape[3],h=c-1,p=t.data.get(r.dataId).values,f=le(r.shape),g=new Float32Array(f);function y(b){const w=b%c;let v=b-w+Math.max(0,w-o);const S=b-w+Math.min(w+o,h);let $=0;for(;v<=S;v++){const N=p[v];$+=N*N}return $}for(let b=0;b<f;b++){const w=y(b),v=p[b]*Math.pow(i+a*w,-l);g[b]=v}return t.makeTensorInfo(r.shape,r.dtype,g)}const Qq={kernelName:vd,backendName:"cpu",kernelFunc:Yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:c,beta:h}=s;Re(i,"LRNGrad");const p=le(i.shape),f=i.shape[3],g=t.data.get(i.dataId).values,y=t.data.get(r.dataId).values,b=t.data.get(o.dataId).values,w=new Float32Array(p),v=p;for(let S=0;S<v;S++){const $=S%f,N=S-$+Math.max(0,$-a),T=S-$+Math.min(f,$+a+1);let R=0;for(let L=N;L<T;L++)R+=Math.pow(y[L],2);R=c*R+l;for(let L=N;L<T;L++){let P=-2*c*h*y[L]*b[S]/R;S===L&&(P+=Math.pow(R,-h)),P*=g[S],w[L]+=P}}return t.makeTensorInfo(i.shape,r.dtype,w)}const Jq={kernelName:vm,backendName:"cpu",kernelFunc:Zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=t;let l=r.shape;const c=l.length,h=Xe(o,l);let p=h;const f=Ot(p,c);let g=a.data.get(r.dataId).values;if(f!=null){const N=new Array(c);for(let T=0;T<N.length;T++)N[T]=l[f[T]];g=Kb(g,l,r.dtype,f,N),p=Vt(p.length,c),l=N}Re(r,"max"),Sn("max",p,c);const[y,b]=hn(l,p),w=le(b),v=cR(g,w,y,r.dtype),S=a.write(v,y,r.dtype);let $=y;return i&&($=Bt(y,h)),{dataId:S,shape:$,dtype:r.dtype}}const eK={kernelName:Sd,backendName:"cpu",kernelFunc:qR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Re(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=1;D(vn(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=Qs(r.shape,o,i,c,a,l);let p;if(h.filterWidth===1&&h.filterHeight===1&&Qe(h.inShape,h.outShape))p=Hr({inputs:{x:r},backend:t});else{const f=t.data.get(r.dataId).values,g=Le(r.shape),y=Qb(f,r.shape,r.dtype,g,h,"max");p=t.makeTensorInfo(h.outShape,r.dtype,y.values)}return p}const nK={kernelName:kd,backendName:"cpu",kernelFunc:tK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s;Re(r,"maxPool3d");const h=wo(r.shape,o,i,1,a,l,c),p=t.data.get(r.dataId).values,f=UR(p,r.shape,r.dtype,Le(r.shape),h,"max");return t.makeTensorInfo(f.shape,"float32",f.values)}const rK={kernelName:Nd,backendName:"cpu",kernelFunc:sK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:a,pad:l,dimRoundingMode:c}=s;Re([r,o],"maxPool3DGrad");const h=wo(o.shape,i,a,1,l,c),p=t.bufferSync(o),f=q6(p,h),g=h.strideDepth,y=h.strideHeight,b=h.strideWidth,w=h.dilationDepth,v=h.dilationHeight,S=h.dilationWidth,$=h.effectiveFilterDepth,N=h.effectiveFilterHeight,T=h.effectiveFilterWidth,R=$-1-h.padInfo.front,L=T-1-h.padInfo.left,P=N-1-h.padInfo.top,O=He(o.shape,"float32"),F=t.bufferSync(r);for(let E=0;E<h.batchSize;++E)for(let W=0;W<h.inChannels;++W)for(let X=0;X<h.inDepth;++X)for(let ee=0;ee<h.inHeight;++ee)for(let Q=0;Q<h.inWidth;++Q){const te=X-R,oe=ee-P,U=Q-L;let Z=0;for(let J=0;J<$;J+=w){const z=(te+J)/g;if(!(z<0||z>=h.outDepth||Math.floor(z)!==z))for(let q=0;q<N;q+=v){const ue=(oe+q)/y;if(!(ue<0||ue>=h.outHeight||Math.floor(ue)!==ue))for(let de=0;de<T;de+=S){const he=(U+de)/b;if(he<0||he>=h.outWidth||Math.floor(he)!==he)continue;const me=$*N*T-1-f.get(E,z,ue,he,W),be=J*N*T+q*T+de,Se=me===be?1:0;if(Se===0)continue;const Ne=F.get(E,z,ue,he,W);Z+=Ne*Se}}}O.set(Z,E,X,ee,Q,W)}return t.makeTensorInfo(O.shape,O.dtype,O.values)}const iK={kernelName:km,backendName:"cpu",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aK(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;Re([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:p}=s,f=Qs(a.shape,l,c,1,h,p),g=t.data.get(a.dataId).values,y=He(f.outShape,a.dtype,WR(g,a.shape,a.dtype,f).values),b=f.strideHeight,w=f.strideWidth,v=f.dilationHeight,S=f.dilationWidth,$=f.effectiveFilterHeight,N=f.effectiveFilterWidth,T=N-1-f.padInfo.left,R=$-1-f.padInfo.top,L=He(a.shape,"float32"),P=t.data.get(r.dataId).values,O=He(r.shape,"float32",P);for(let F=0;F<f.batchSize;++F)for(let E=0;E<f.inChannels;++E)for(let W=0;W<f.inHeight;++W)for(let X=0;X<f.inWidth;++X){const ee=W-R,Q=X-T;let te=0;for(let oe=0;oe<$;oe+=v){const U=(ee+oe)/b;if(!(U<0||U>=f.outHeight||Math.floor(U)!==U))for(let Z=0;Z<N;Z+=S){const J=(Q+Z)/w;if(J<0||J>=f.outWidth||Math.floor(J)!==J)continue;const z=$*N-1-y.get(F,U,J,E),q=oe*N+Z,ue=z===q?1:0;if(ue===0)continue;const de=O.get(F,U,J,E);te+=de*ue}}L.set(te,F,W,X,E)}return t.makeTensorInfo(L.shape,L.dtype,L.values)}const lK={kernelName:Sm,backendName:"cpu",kernelFunc:aK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(n,e,t,s,r){const o=Le(e),i=Qb(n,e,t,o,r,"max"),a=WR(n,e,t,r,!0,s);return[i.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK={kernelName:Nm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;Re(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,h=Qs(s.shape,r,o,[1,1],i),[p,f]=uK(c,s.shape,s.dtype,a,h),g=l.write(p,h.outShape,s.dtype),y=l.write(f,h.outShape,s.dtype);return[{dataId:g,shape:h.outShape,dtype:s.dtype},{dataId:y,shape:h.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=Xe(o,r.shape),c=hn(r.shape,a)[1],h=le(c),p=[],f=t.makeTensorInfo([],"float32",new Float32Array([h]));p.push(f);const g=ci({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});p.push(g);const y=Zb({inputs:{a:g,b:f},backend:t});p.push(y);const b=Ih({inputs:{x:y},backend:t,attrs:{axis:o,keepDims:i}});return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),b}const hK={kernelName:Cd,backendName:"cpu",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;Re(r,"min");const a=Xe(o,r.shape);let l=a;const c=Ot(l,r.shape.length);let h=r;c!=null&&(h=ns({inputs:{x:r},backend:t,attrs:{perm:c}}),l=Vt(l.length,r.shape.length)),Sn("min",l,h.shape.length);const[p,f]=hn(h.shape,l),g=le(f),y=wn(le(p),h.dtype),b=t.data.get(h.dataId).values;for(let v=0;v<y.length;++v){const S=v*g;let $=b[S];for(let N=0;N<g;++N){const T=b[S+N];(Number.isNaN(T)||T<$)&&($=T)}y[v]=$}c!=null&&t.disposeIntermediateTensorInfo(h);const w=t.makeTensorInfo(p,h.dtype,y);if(i){const v=Bt(p,a),S=St({inputs:{x:w},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(w),S}return w}const fK={kernelName:$d,backendName:"cpu",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:i}=s;Re(r,"mirrorPad");const a=o.map(($,N)=>$[0]+r.shape[N]+$[1]),l=o.map($=>$[0]),c=o.map(($,N)=>$[0]+r.shape[N]),h=i==="reflect"?0:1,p=t.data.get(r.dataId).values,f=r.shape.length,g=Le(r.shape),y=le(a),b=a.length,w=Le(a),v=un(r.dtype,y);for(let $=0;$<y;$++){let N=ga($,b,w);for(let R=0;R<b;R++)N[R]<l[R]?N[R]=l[R]*2-N[R]-h:N[R]>=c[R]&&(N[R]=(c[R]-1)*2-N[R]+h);N=N.map((R,L)=>R-l[L]);const T=fr(N,f,g);v[$]=p[T]}return{dataId:t.write(v,a,r.dtype),shape:a,dtype:r.dtype}}const gK={kernelName:Id,backendName:"cpu",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK=Ut((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),xK=nn(Xl,yK),wK={kernelName:Xl,backendName:"cpu",kernelFunc:xK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=r.shape.length;let a=o;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);const l=Xe([a],r.shape),c=qR({inputs:{x:r},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),h=Bt(c.shape,l),p=St({inputs:{x:c},backend:t,attrs:{shape:h}}),f=Yb({inputs:{a:r,b:p},backend:t}),g=ZE({inputs:{x:f},backend:t}),y=Ih({inputs:{x:g},backend:t,attrs:{axis:l,keepDims:!1}}),b=St({inputs:{x:y},backend:t,attrs:{shape:h}}),w=Zb({inputs:{a:g,b},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),w}const bK={kernelName:Hd,backendName:"cpu",kernelFunc:KR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s;Re(r,"multinomial");const l=a?r:KR({inputs:{logits:r},backend:t,attrs:{dim:-1}}),c=l.shape[0],h=l.shape[1],p=t.data.get(l.dataId).values,f=[c,o],g=wn(le(f),"int32");for(let y=0;y<c;++y){const b=y*h,w=new Float32Array(h-1);w[0]=p[b];for(let $=1;$<w.length;++$)w[$]=w[$-1]+p[b+$];const v=pg.alea(i.toString()),S=y*o;for(let $=0;$<o;++$){const N=v();g[S+$]=w.length;for(let T=0;T<w.length;T++)if(N<w[T]){g[S+$]=T;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(f,"int32",g)}const SK={kernelName:Cm,backendName:"cpu",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK=Og;function NK(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s;Re(r,"NonMaxSuppression");const c=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,{selectedIndices:p}=kK(c,h,i,a,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}const CK={kernelName:$m,backendName:"cpu",kernelFunc:NK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K=Fg;function IK(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;Re(r,"NonMaxSuppressionPadded");const h=t.data.get(r.dataId).values,p=t.data.get(o.dataId).values,{selectedIndices:f,validOutputs:g}=$K(h,p,i,a,l,c);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([],"int32",new Int32Array([g]))]}const TK={kernelName:Im,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK=Lg;function RK(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;Re(r,"NonMaxSuppressionWithScore");const h=t.data.get(r.dataId).values,p=t.data.get(o.dataId).values,f=i,g=a,y=l,b=c,{selectedIndices:w,selectedScores:v}=EK(h,p,f,g,y,b);return[t.makeTensorInfo([w.length],"int32",new Int32Array(w)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const AK={kernelName:Tm,backendName:"cpu",kernelFunc:RK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s;Re(r,"oneHot");const c=le(r.shape),h=new Float32Array(c*i);h.fill(l);const p=t.data.get(r.dataId).values;for(let f=0;f<c;++f)p[f]>=0&&p[f]<i&&(h[f*i+p[f]]=a);return t.makeTensorInfo([...r.shape,i],o,h)}const _K={kernelName:Ad,backendName:"cpu",kernelFunc:DK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=da({inputs:{input:s},backend:t}),o=Bf({inputs:{x:r},backend:t}),i=yl({inputs:{input:s},backend:t}),a=Bf({inputs:{x:i},backend:t}),l=fs({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Jb({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const OK={kernelName:Xd,backendName:"cpu",kernelFunc:Bf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=da({inputs:{input:s},backend:t}),o=XR({inputs:{x:r},backend:t}),i=yl({inputs:{input:s},backend:t}),a=Bf({inputs:{x:i},backend:t}),l=fs({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Jb({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const FK={kernelName:Rd,backendName:"cpu",kernelFunc:XR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Mf({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(h=>{bn(o,h.shape,"All tensors passed to stack must have matching shapes"),D(i===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(h=>{const p=Mf({inputs:{input:h},backend:t,attrs:{dim:r}});return a.push(p),p}),c=xl({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const LK={kernelName:Dd,backendName:"cpu",kernelFunc:YR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;Re(r,"pad");const a=o.map((S,$)=>S[0]+r.shape[$]+S[1]),l=o.map(S=>S[0]),c=t.data.get(r.dataId).values,h=le(r.shape),p=r.shape.length,f=Le(r.shape),g=le(a),y=a.length,b=Le(a),w=un(r.dtype,g);i!==0&&w.fill(i);for(let S=0;S<h;S++){const N=ga(S,p,f).map((R,L)=>R+l[L]),T=fr(N,y,b);w[T]=c[S]}return{dataId:t.write(w,a,r.dtype),shape:a,dtype:r.dtype}}const QR={kernelName:_d,backendName:"cpu",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zK=Ut((n,e)=>Math.pow(n,e)),MK=nn(Ql,zK),BK={kernelName:Ql,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,a=r.map(w=>t.data.get(w.dataId).values),l=r.map(w=>w.shape),c=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values,[p,f,g]=gR(a,l,c,o.shape,o.dtype,h,i.shape),y=p.map(w=>t.makeTensorInfo([w.length],"int32",w)),b=t.makeTensorInfo(g,o.dtype,f);return y.concat([b])}const WK={kernelName:Em,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[c,h]=yR(i,s.shape,s.dtype,a,r.shape,l,o.shape),p=t.makeTensorInfo([c.length],"int32",c),f=t.makeTensorInfo([h.length],s.dtype,h);return[p,f]}const GK={kernelName:Rm,backendName:"cpu",kernelFunc:UK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.data.get(r.dataId).values,h=t.data.get(o.dataId).values,p=t.data.get(i.dataId).values,f=a.map(w=>t.data.get(w.dataId).values),g=a.map(w=>w.shape),[y,b]=xR(c,r.shape,h,o.shape,o.dtype,p,i.shape,f,g,l);return t.makeTensorInfo(y,o.dtype,b)}const jK={kernelName:Am,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:i}=t,a=wR(s,r,i,o);return e.makeTensorInfo([a.length],o,a)}const KK={kernelName:Dm,backendName:"cpu",kernelFunc:qK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XK=ht(Zl,n=>1/n),YK={kernelName:Zl,backendName:"cpu",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;Re(r,"resizeBilinear");const l=Le(r.shape),[c,h]=a,[p,f,g,y]=r.shape,b=t.data.get(r.dataId).values,w=new Float32Array(le([p,c,h,y])),v=[o&&c>1?f-1:f,o&&h>1?g-1:g],S=[o&&c>1?c-1:c,o&&h>1?h-1:h];let $=0;const N=v[0]/S[0],T=v[1]/S[1];for(let R=0;R<p;R++)for(let L=0;L<c;L++){let P;i?P=N*(L+.5)-.5:P=N*L;const O=Math.max(0,Math.floor(P)),F=P-O,E=Math.min(f-1,Math.ceil(P)),W=R*l[0]+O*l[1],X=R*l[0]+E*l[1];for(let ee=0;ee<h;ee++){let Q;i?Q=T*(ee+.5)-.5:Q=T*ee;const te=Math.max(0,Math.floor(Q)),oe=Q-te,U=Math.min(g-1,Math.ceil(Q)),Z=W+te*l[2],J=X+te*l[2],z=W+U*l[2],q=X+U*l[2];for(let ue=0;ue<y;ue++){const de=b[Z+ue],he=b[J+ue],me=b[z+ue],be=b[q+ue],Se=de+(me-de)*oe,Ne=he+(be-he)*oe,ze=Se+(Ne-Se)*F;w[$++]=ze}}}return t.makeTensorInfo([p,c,h,y],"float32",w)}const ZK={kernelName:zd,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;Re([o,r],"resizeBilinearGrad");const a=Le(r.shape),[l,c,h,p]=r.shape,[,f,g]=o.shape,y=new Float32Array(l*c*h*p),b=[i&&f>1?c-1:c,i&&g>1?h-1:h],w=[i&&f>1?f-1:f,i&&g>1?g-1:g],v=b[0]/w[0],S=b[1]/w[1],$=t.data.get(o.dataId).values;let N=0;for(let T=0;T<l;T++){const R=T*a[0];for(let L=0;L<f;L++){const P=L*v,O=Math.floor(P),F=Math.min(Math.ceil(P),c-1),E=R+O*a[1],W=R+F*a[1],X=P-O,ee=1-X;for(let Q=0;Q<g;Q++){const te=Q*S,oe=Math.floor(te),U=Math.min(Math.ceil(te),h-1),Z=te-oe,J=1-Z,z=E+oe*a[2],q=E+U*a[2],ue=W+oe*a[2],de=W+U*a[2],he=ee*J,me=ee*Z,be=X*J,Se=X*Z;for(let Ne=0;Ne<p;Ne++){const ze=$[N++];y[z+Ne]+=ze*he,y[q+Ne]+=ze*me,y[ue+Ne]+=ze*be,y[de+Ne]+=ze*Se}}}}return t.makeTensorInfo([l,h,c,p],"float32",y)}const e8={kernelName:Fm,backendName:"cpu",kernelFunc:JK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s;Re(r,"resizeNearestNeighbor");const l=Le(r.shape),[c,h]=a,[p,f,g,y]=r.shape,b=t.data.get(r.dataId).values,w=new Float32Array(p*c*h*y),v=[o&&c>1?f-1:f,o&&h>1?g-1:g],S=[o&&c>1?c-1:c,o&&h>1?h-1:h],$=v[0]/S[0],N=v[1]/S[1];let T=0;for(let R=0;R<p;R++){const L=R*l[0];for(let P=0;P<c;P++){const O=i?$*(P+.5):$*P;let F=Math.min(f-1,o?Math.round(O):Math.floor(O));i&&(F=Math.max(0,F));const E=L+F*l[1];for(let W=0;W<h;W++){const X=i?N*(W+.5):N*W;let ee=Math.min(g-1,o?Math.round(X):Math.floor(X));i&&(ee=Math.max(0,ee));const Q=E+ee*l[2];for(let te=0;te<y;te++){const oe=b[Q+te];w[T++]=oe}}}}return t.makeTensorInfo([p,c,h,y],r.dtype,w)}const n8={kernelName:Pd,backendName:"cpu",kernelFunc:t8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s8(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;Re([o,r],"resizeNearestNeighborGrad");const a=Le(r.shape),l=Le(o.shape),[c,h,p,f]=r.shape,[,g,y]=o.shape,b=new Float32Array(c*h*p*f),w=t.data.get(o.dataId).values,v=[i&&g>1?h-1:h,i&&y>1?p-1:p],S=[i&&g>1?g-1:g,i&&y>1?y-1:y],$=v[0]/S[0],N=v[1]/S[1],T=1/$,R=1/N,L=Math.ceil(T)*2+2,P=Math.ceil(R)*2+2;for(let O=0;O<c;O++){const F=O*a[0];for(let E=0;E<h;E++){const W=F+E*a[1],X=Math.floor(E*T),ee=Math.floor(X-L/2);for(let Q=0;Q<p;Q++){const te=W+Q*a[2],oe=Math.floor(Q*R),U=Math.floor(oe-P/2);for(let Z=0;Z<f;Z++){let J=0;for(let z=0;z<L;z++){const q=z+ee;if(q<0||q>=g)continue;const ue=F+q*l[1],de=q*$,he=Math.min(h-1,i?Math.round(de):Math.floor(de));if(E===he)for(let me=0;me<P;me++){const be=me+U;if(be<0||be>=y)continue;const Se=ue+be*l[2],Ne=be*N,ze=Math.min(p-1,i?Math.round(Ne):Math.floor(Ne));Q===ze&&(J+=w[Se+Z])}}b[te+Z]=J}}}}return t.makeTensorInfo(r.shape,r.dtype,b)}const r8={kernelName:Om,backendName:"cpu",kernelFunc:s8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;Re(r,"reverse");const i=r.shape.length,a=Xe(o,r.shape);if(i===0)return Hr({inputs:{x:r},backend:t});const l=new Kt(r.shape,r.dtype),c=t.bufferSync(r);for(let h=0;h<l.size;h++){const p=l.indexToLoc(h),f=p.slice();a.forEach(g=>f[g]=r.shape[g]-1-f[g]),l.set(c.get(...f),...p)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const i8={kernelName:Md,backendName:"cpu",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a8={kernelName:Zm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=un(s.dtype,le(s.shape)),[c,h,p,f]=s.shape,[g,y]=sb(i,h,p),b=255,w=Math.sin(r),v=Math.cos(r),S=a.data.get(s.dataId).values;for(let N=0;N<c;N++){const T=N*p*h*f;for(let R=0;R<h;R++){const L=R*(p*f);for(let P=0;P<p;P++){const O=P*f;for(let F=0;F<f;F++){const E=[c,R,P,F],W=E[2],X=E[1];let ee=(W-g)*v-(X-y)*w,Q=(W-g)*w+(X-y)*v;ee=Math.round(ee+g),Q=Math.round(Q+y);let te=o;if(typeof o!="number"&&(F===3?te=b:te=o[F]),ee>=0&&ee<p&&Q>=0&&Q<h){const U=Q*(p*f),Z=ee*f,J=T+U+Z+F;te=S[J]}const oe=T+L+O+F;l[oe]=te}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8=ht(tu,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),u8={kernelName:tu,backendName:"cpu",kernelFunc:l8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c8(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=xi(o,r,i),f=!0,g=t.bufferSync(r),y=t.bufferSync(o),b=qi(g,y,i,p,c,l,a,h,0,f);return t.makeTensorInfo(i,b.dtype,b.values)}const d8={kernelName:Lm,backendName:"cpu",kernelFunc:c8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function p8(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function f8(n,e,t,s,r,o){const i=Pt("int32",t*r);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),c=a*r;for(let h=0;h<r;++h)i[c+h]=o==="left"?h8(l,e[h+c]):p8(l,e[h+c])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,c=f8(a,l,r.shape[0],r.shape[1],o.shape[1],i);return t.makeTensorInfo(o.shape,"int32",c)}const g8={kernelName:zm,backendName:"cpu",kernelFunc:m8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;Re([s,r,o],"select");const i=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,h=Qn(r.dtype,o.dtype),p=wn(le(r.shape),h);let f=0;const g=i===0||i>1||r.shape.length===1?1:le(r.shape.slice(1));for(let y=0;y<a.length;y++)for(let b=0;b<g;b++)a[y]===1?p[f++]=l[y]:p[f++]=c[y];return t.makeTensorInfo(r.shape,h,p)}const x8={kernelName:Bd,backendName:"cpu",kernelFunc:y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8=Vg,b8=Wg,v8=ht(su,n=>n>=0?b8*n:w8*(Math.exp(n)-1)),S8={kernelName:su,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8=ht(iu,n=>n<0?-1:n>0?1:0),N8={kernelName:iu,backendName:"cpu",kernelFunc:k8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C8=ht(ru,n=>Math.sin(n)),$8={kernelName:ru,backendName:"cpu",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8=ht(ou,n=>Math.sinh(n)),T8={kernelName:ou,backendName:"cpu",kernelFunc:I8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=11920928955078125e-23,fC=Math.log(E8)+2,R8=ht(lu,n=>{const e=n>-fC,t=n<fC,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),A8={kernelName:lu,backendName:"cpu",kernelFunc:R8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;Re([r],"spaceToBatchND");const a=le(o),l=[[0,0]];l.push(...i);for(let R=1+o.length;R<r.shape.length;++R)l.push([0,0]);const c=QR.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),h=gh(c.shape,o,a,!1),p=yh(h.length,o.length,!1),f=xh(c.shape,o,a,!1),b=St({inputs:{x:c},backend:t,attrs:{shape:h}}),S=ns({inputs:{x:b},backend:t,attrs:{perm:p}}),T=St({inputs:{x:S},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(S),T}const _8={kernelName:Ud,backendName:"cpu",kernelFunc:D8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O8(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,h=t.data.get(i.dataId).values[0],[p,f,g,y,b]=kR(a,s.shape,s.dtype,l,r.dtype,c,h);return[t.makeTensorInfo(f,s.dtype,p),t.makeTensorInfo([f[0]],r.dtype,g),t.makeTensorInfo([y.length],"bool",new Uint8Array(y.map(w=>Number(w)))),t.makeTensorInfo([b.length],s.dtype,new Int32Array(b))]}const F8={kernelName:Mm,backendName:"cpu",kernelFunc:O8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.data.get(r.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(o.dataId).values),[c,h,p]=NR(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(h,s.dtype,c),t.makeTensorInfo([p.length],o.dtype,new Int32Array(p))]}const P8={kernelName:Bm,backendName:"cpu",kernelFunc:L8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[c,h]=Xb(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(h,s.dtype,c)}const M8={kernelName:Vm,backendName:"cpu",kernelFunc:z8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B8(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const i=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,[c,h]=Xb(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(h,s.dtype,c)}const V8={kernelName:Wm,backendName:"cpu",kernelFunc:B8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W8(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:h,strides:p,outputSize:f}=xi(o,r,a),g=!1,y=t.bufferSync(r);let b;switch(o.dtype){case"bool":{const w=t.bufferSync(o),v=!!t.data.get(i.dataId).values[0];b=qi(y,w,a,f,h,c,l,p,v,g);break}case"float32":{const w=t.bufferSync(o),v=t.data.get(i.dataId).values[0];b=qi(y,w,a,f,h,c,l,p,v,g);break}case"int32":{const w=t.bufferSync(o),v=t.data.get(i.dataId).values[0];b=qi(y,w,a,f,h,c,l,p,v,g);break}case"string":{const w=t.bufferSync(o),v=ho(t.data.get(i.dataId).values[0]);b=qi(y,w,a,f,h,c,l,p,v,g);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(a,b.dtype,b.values)}const U8={kernelName:Um,backendName:"cpu",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=Xe(i,r.shape)[0],l=xb(r,o,a),c=new Array(r.shape.length).fill(0),h=r.shape.slice();return l.map(p=>{const f=[...h];f[a]=p;const g=ha({inputs:{x:r},backend:t,attrs:{begin:c,size:f}});return c[a]+=p,g})}const H8={kernelName:Gd,backendName:"cpu",kernelFunc:G8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8={kernelName:Gm,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Re(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];o[a]=l*l}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q8=ht(mu,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),K8={kernelName:mu,backendName:"cpu",kernelFunc:q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:f}=s;Re(r,"stridedSlice");const{finalShapeSparse:g,finalShape:y,isIdentity:b,sliceDim0:w,isSimpleSlice:v,begin:S,end:$,strides:N}=Jw(r.shape,o,i,a,l,c,h,p,f);let T;if(b)T=St({inputs:{x:r},backend:t,attrs:{shape:y}});else if(w||v){D(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const R=Yw(S,$,N),L=ha({inputs:{x:r},backend:t,attrs:{begin:S,size:R}});T=St({inputs:{x:L},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(L)}else{const R=t.bufferSync(r),L=IR(g,R,N,S);T=t.makeTensorInfo(y,L.dtype,L.values)}return T}const Y8={kernelName:Hm,backendName:"cpu",kernelFunc:X8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:h,dataSplits:p}=e,f=t.data.get(h.dataId).values,g=t.data.get(p.dataId).values,[y,b]=TR(f,g,r,o,i,a,l,c);return[t.makeTensorInfo([y.length],"string",y),t.makeTensorInfo(p.shape,"int32",b)]}const Z8={kernelName:jm,backendName:"cpu",kernelFunc:Q8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.data.get(o.dataId).values,l=t.data.get(i.dataId).values[0],[c,h,p]=ER(a,l,r),f=h.length;return[t.makeTensorInfo([f,2],"int32",c),t.makeTensorInfo([f],"string",h),t.makeTensorInfo([2],"int32",new Int32Array(p))]}const eX={kernelName:qm,backendName:"cpu",kernelFunc:J8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tX(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.data.get(o.dataId).values,a=RR(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const nX={kernelName:Km,backendName:"cpu",kernelFunc:tX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX=ht(hu,n=>Math.tan(n)),rX={kernelName:hu,backendName:"cpu",kernelFunc:sX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oX=ht(pu,n=>Math.tanh(n)),iX={kernelName:pu,backendName:"cpu",kernelFunc:oX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aX(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:o}=e,{sliceRank:i,numUpdates:a,sliceSize:l,strides:c,outputSize:h}=xi(o,r,s.shape),p=!1,f=t.bufferSync(r),g=t.bufferSync(o),y=t.bufferSync(s),b=qi(f,g,s.shape,h,l,a,i,c,y,p);return t.makeTensorInfo(s.shape,b.dtype,b.values)}const lX={kernelName:Pm,backendName:"cpu",kernelFunc:aX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;Re(r,"tile");const i=DR(t.bufferSync(r),o);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const cX={kernelName:fu,backendName:"cpu",kernelFunc:uX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s;Re(r,"topk");const a=t.data.get(r.dataId).values,[l,c]=OR(a,r.shape,r.dtype,o,i);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const hX={kernelName:Xm,backendName:"cpu",kernelFunc:dX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=t,[h,p,f,g]=r.shape,[y,b]=c??[p,f],w=[h,y,b,g],v=Le(r.shape),S=v[0],$=v[1],N=v[2],T=Le(w),R=T[0],L=T[1],P=T[2],O=un(r.dtype,le(w));O.fill(l);const F=s.data.get(r.dataId).values,E=s.data.get(o.dataId).values;for(let X=0;X<h;++X){const ee=o.shape[0]===1?E:E.subarray(X*8,X*8+8);for(let Q=0;Q<y;++Q)for(let te=0;te<b;++te)for(let oe=0;oe<g;++oe){let U;const Z=ee[6]*te+ee[7]*Q+1;if(Z===0)continue;const J=(ee[0]*te+ee[1]*Q+ee[2])/Z,z=(ee[3]*te+ee[4]*Q+ee[5])/Z,q=mC(J,f,a),ue=mC(z,p,a);switch(i){case"nearest":U=wX(F,p,f,S,$,N,X,ue,q,oe,l);break;case"bilinear":U=bX(F,p,f,S,$,N,X,ue,q,oe,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const de=X*R+Q*L+te*P+oe;O[de]=U}return s.makeTensorInfo(w,r.dtype,O)}return{dataId:s.write(O,w,r.dtype),shape:r.shape,dtype:r.dtype}}const fX={kernelName:Ym,backendName:"cpu",kernelFunc:pX};function mC(n,e,t){switch(t){case"reflect":return mX(n,e);case"wrap":return gX(n,e);case"nearest":return xX(n,e);case"constant":default:return yX(n)}}function mX(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return Jo(0,t,e-1)}function gX(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return Jo(0,t,e-1)}function yX(n,e){return n}function xX(n,e){return Jo(0,n,e-1)}function kc(n,e,t,s,r,o,i,a,l,c,h){const p=i*s+a*r+l*o+c;return 0<=a&&a<e&&0<=l&&l<t?n[p]:h}function wX(n,e,t,s,r,o,i,a,l,c,h){const p=Math.round(a),f=Math.round(l);return kc(n,e,t,s,r,o,i,p,f,c,h)}function bX(n,e,t,s,r,o,i,a,l,c,h){const p=Math.floor(a),f=Math.floor(l),g=p+1,y=f+1,b=(y-l)*kc(n,e,t,s,r,o,i,p,f,c,h)+(l-f)*kc(n,e,t,s,r,o,i,p,y,c,h),w=(y-l)*kc(n,e,t,s,r,o,i,g,f,c,h)+(l-f)*kc(n,e,t,s,r,o,i,g,y,c,h);return(g-a)*b+(a-p)*w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Re(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:a,outputShape:l,indices:c}=FR(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const SX={kernelName:Qm,backendName:"cpu",kernelFunc:vX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kX(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,a=r.shape[o],l=new Array(i-1);let c=0;for(let g=0;g<i;g++)g!==o&&(l[c++]=r.shape[g]);const h=new Array(i).fill(0),p=r.shape.slice();p[o]=1;const f=new Array(a);for(let g=0;g<f.length;g++){h[o]=g;const y=ha({inputs:{x:r},backend:t,attrs:{begin:h,size:p}});f[g]=St({inputs:{x:y},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(y)}return f}const NX={kernelName:qd,backendName:"cpu",kernelFunc:kX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s;Re(r,"unsortedSegmentSum");const a=r.shape.length,l=o.shape.length,c=[],h=[],p=a-l;let f=o;for(let y=0;y<p;++y){const b=Mf({inputs:{input:f},backend:t,attrs:{dim:y+1}});f=b,h.push(b)}for(let y=0;y<i;++y){const b=xo(y,"int32"),w=t.makeTensorInfo([],"int32",b),v=YE({inputs:{a:w,b:f},backend:t}),S=ci({inputs:{x:v},backend:t,attrs:{dtype:"float32"}}),$=ey({inputs:{a:S,b:r},backend:t}),N=Ih({inputs:{x:$},backend:t,attrs:{axis:0,keepDims:!1}});c.push(N),h.push(w),h.push(v),h.push(S),h.push($),h.push(N)}const g=YR({inputs:c,backend:t,attrs:{axis:0}});return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}const $X={kernelName:Kd,backendName:"cpu",kernelFunc:CX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX=[v6,tj,k6,C6,aj,I6,E6,A6,_6,F6,P6,M6,V6,G6,j6,X6,Q6,J6,t5,w6,s5,o5,a5,uj,u5,oj,dj,d5,nj,p5,m5,g5,x5,b5,S5,N5,$5,T5,R5,D5,O5,L5,z5,B5,V5,U5,H5,q5,K5,X5,Y5,Z5,tq,h6,sq,hj,dq,pj,hq,mj,xq,wq,vq,yj,wj,kq,Cq,Iq,Eq,vj,kj,sj,Aq,f5,_q,Fq,Pq,p6,Cj,Ij,Mq,Ej,Vq,Gq,jq,Xq,Qq,Jq,eK,Aj,nK,rK,iK,lK,cK,hK,fK,_j,gK,wK,SK,Fj,Pj,CK,TK,AK,Mj,_K,FK,LK,QR,BK,m6,Wj,WK,GK,jK,KK,rj,c1,YK,g6,y6,x6,ZK,e8,n8,r8,i8,a8,u8,Yj,d8,g8,x8,S8,Zj,N8,$8,T8,Jj,bK,A8,_8,F8,P8,M8,V8,U8,H8,n6,j8,r6,i6,K8,Y8,Z8,eX,nX,c6,J5,rX,iX,lX,cX,hX,fX,Bj,SX,NX,$X,OK];for(const n of IX)Jm(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hi={},Xp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function TX(n,e){Hi[n]=e}function br(n,e){if(!(n in Hi)||e!=null){const s=RX(n,e);if(s!==null)Hi[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=Hi[n];return t==null||t.isContextLost()?(delete Hi[n],br(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Hi[n])}function EX(n){if(!se().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function RX(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??EX(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete Hi[n]},!1),se().getBool("SOFTWARE_WEBGL_ENABLED")&&(Xp.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Xp)||t.getContext("experimental-webgl",Xp):t.getContext("webgl2",Xp)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Uc;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Uc||(Uc={}));var Es;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Es||(Es={}));var yn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(yn||(yn={}));function Th(n,e){return[e,n]}function AX(n,e){return n*e}function Yp(n){const e=le(n),t=Math.ceil(e/4);return mf(t)}function Nu(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function DX(n,e){const[t,s]=Nu(n,e);return t*s*4}function ev(n,e){const t=n;let s,r,o,i,a,l,c,h,p,f;return se().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,i=t.RGBA32F,a=t.RED,c=4,h=1,p=t.HALF_FLOAT,f=t.FLOAT,l=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=t.RGBA,a=n.RGBA,c=4,h=4,p=e!=null?e.HALF_FLOAT_OES:null,f=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:p,textureTypeFloat:f}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ce(n,e){const t=e();return se().getBool("DEBUG")&&_X(n),t}function _X(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+PX(n,e))}const OX=596e-10,FX=65504;function LX(n){return!!(se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||OX<Math.abs(n)&&Math.abs(n)<FX)}function PX(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Qp(n,e){return Co(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function zX(n,e){const t=Co(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ce(n,()=>n.shaderSource(t,e)),Ce(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function MX(n,e){const t=Co(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ce(n,()=>n.shaderSource(t,e)),Ce(n,()=>n.compileShader(t)),se().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw ZR(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const BX=/ERROR: [0-9]+:([0-9]+):/g;function ZR(n,e){const t=BX.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,i=r.map((p,f)=>Ki((f+1).toString(),o)+p);let a=0;for(let p=0;p<i.length;p++)a=Math.max(i[p].length,a);const l=i.slice(0,s-1),c=i.slice(s-1,s),h=i.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Ki(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join(`
`))}function VX(n){return Co(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function WX(n,e){if(Ce(n,()=>n.linkProgram(e)),!se().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function g0(n,e){if(Ce(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function UX(n,e){const t=Co(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Ce(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function GX(n,e){const t=Co(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Ce(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Ce(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function HX(n){return Co(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function jX(n,e){const t=se().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function qX(n){return Co(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function gC(n,e,t,s,r,o,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(Ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Ce(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,o,i)),Ce(n,()=>n.enableVertexAttribArray(a)),!0)}function KX(n,e,t){JX(n,t),Ce(n,()=>n.activeTexture(n.TEXTURE0+t)),Ce(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function XX(n,e,t){return Co(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function YX(n,e,t){return n.getUniformLocation(e,t)}function QX(n,e,t,s){Ce(n,()=>KX(n,e,s)),Ce(n,()=>n.uniform1i(t,s))}function y0(n,e,t){Ce(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Ce(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function yC(n,e){Ce(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Ce(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Zp(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ZX(n,e))}function ZX(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Co(n,e,t){const s=Ce(n,()=>e());if(s==null)throw new Error(t);return s}function JX(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function wl(n,e=2){return le(n.slice(0,n.length-e))}function bl(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Jp(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[wl(n),...bl(n)]),e}function e7(n,e=!1){let t=se().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=se().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&se().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?jf(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=yo(n).newShape);let r=le(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const i=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=wl(n);let l=2,c=2;n.length&&([l,c]=bl(n)),r=a*(l/2)*(c/2),o=mf(r).map(h=>h*2)}else o=mf(r);return o}function ef(n){return n%2===0}function Vf(n,e){if(n=n.slice(-2),e=e.slice(-2),Qe(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||ef(t)&&ef(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&ef(n[0])&&ef(e[0])}let x0,w0;function t7(n){if(x0==null){const e=br(n);x0=e.getParameter(e.MAX_TEXTURE_SIZE)}return x0}function n7(n){if(w0==null){const e=br(n);w0=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,w0)}function s7(n){if(n===0)return 0;let e;const t=br(n);return Ks(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Ks(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Ks(n,e){return n.getExtension(e)!=null}function xC(n){try{if(br(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function r7(n){if(n===0)return!1;const e=br(n);if(n===1){if(!Ks(e,"OES_texture_float"))return!1}else if(!Ks(e,"EXT_color_buffer_float"))return!1;return h1(e)}function o7(n){if(n===0)return!1;const e=br(n);if(n===1){if(!Ks(e,"OES_texture_float")||!Ks(e,"WEBGL_color_buffer_float"))return!1}else{if(Ks(e,"EXT_color_buffer_float"))return h1(e);const s="EXT_color_buffer_half_float";if(Ks(e,s)){const r=e.getExtension(s);return i7(e,r)}return!1}return h1(e)}function h1(n){const e=ev(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),i}function i7(n,e){const t=ev(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),a}function a7(n){return n!==2?!1:br(n).fenceSync!=null}function Eh(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&D(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const De=se();De.registerFlag("HAS_WEBGL",()=>De.getNumber("WEBGL_VERSION")>0);De.registerFlag("WEBGL_VERSION",()=>xC(2)?2:xC(1)?1:0);De.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);De.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>De.get("WEBGL_VERSION")===2);De.registerFlag("WEBGL_CPU_FORWARD",()=>!0);De.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);De.registerFlag("WEBGL_PACK",()=>De.getBool("HAS_WEBGL"));De.registerFlag("WEBGL_PACK_NORMALIZATION",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_CLIP",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_REDUCE",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_LAZILY_UNPACK",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_CONV_IM2COL",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>De.getBool("WEBGL_PACK"));De.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>t7(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>n7(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=De.getNumber("WEBGL_VERSION");return n===0?0:s7(n)});De.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>De.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!I1());De.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>r7(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>De.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:De.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));De.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>o7(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_FENCE_API_ENABLED",()=>a7(De.getNumber("WEBGL_VERSION")));De.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>De.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);De.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});De.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>I1()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});De.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);De.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);De.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);De.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);De.registerFlag("WEBGL_EXP_CONV",()=>!1);De.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>De.getBool("IS_TEST"));De.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);De.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);De.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);De.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gn(){let n,e,t,s,r,o,i,a,l,c;return se().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",a=se().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n,e,t="index"){const s=Le(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / ${r}`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${i}; ${a};`}).join("")}function ty(n,e,t="index"){const s=Le(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,a=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function l7(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function u7(n,e,t="index"){const s=n.map((o,i)=>i),r=l7(s,e);return r.map((o,i)=>{const a=`int ${n[i]} = ${t} / ${r[i]}`,l=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r[i]}`:`index -= ${n[i]} * ${r[i]}`;return`${a}; ${l};`}).join("")}function tv(n){const e=Le(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function nv(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const JR=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:eA}=vT;function c7(n,e,t){const s=[];if(n.forEach(g=>{const y=le(g.shapeInfo.logicalShape);if(g.shapeInfo.isUniform?s.push(`uniform float ${g.name}${y>1?`[${y}]`:""};`):(s.push(`uniform sampler2D ${g.name};`),s.push(`uniform int offset${g.name};`)),t.enableShapeUniforms){const{uniformShape:b}=sv(t.packedInputs,g.shapeInfo.logicalShape,g.shapeInfo.texShape);switch(b.length){case 1:s.push(`uniform int ${g.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${g.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${g.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${g.name}Shape;`);break}s.push(`uniform ivec2 ${g.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(g=>{s.push(`uniform ${g.type} ${g.name}${g.arrayIndex?`[${g.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(g=>d7(g,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=Gn(),l=f7(a);let c,h,p=y7(a);return e.isPacked?(c=h7(e.logicalShape,i,t.enableShapeUniforms),h=g7(a)):(c=p7(e.logicalShape,i,t.enableShapeUniforms),h=m7(a)),t.packedInputs&&(p+=v7),[p,l,h,r,c,o,t.userCode].join(`
`)}function Cu(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return _7(n,e);case 1:return F7(n,e);case 2:return P7(n,e);case 3:return M7(n,e);case 4:return V7(n,e);case 5:return W7(n);case 6:return U7(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function tA(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return D7(n);case 1:return O7(n,e);case 2:return L7(n,e);case 3:return z7(n,e);default:return B7(n,e)}}function d7(n,e,t=!1,s){let r="";t?r+=tA(n,s):r+=Cu(n,s);const o=n.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(t?r+=G7(n,e):r+=H7(n,e)),r}function h7(n,e,t){switch(n.length){case 0:return nA();case 1:return S7(n,e,t);case 2:return R7(n,e,t);case 3:return N7(n,e,t);default:return $7(n,e,t)}}function p7(n,e,t){switch(n.length){case 0:return nA();case 1:return k7(n,e,t);case 2:return A7(n,e,t);case 3:return C7(n,e,t);case 4:return I7(n,e,t);case 5:return T7(n,e);case 6:return E7(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function f7(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function m7(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function g7(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function y7(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${x7}
    ${w7}
    ${b7}
  `}const x7=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,w7=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,b7=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,v7=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function nA(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function S7(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function k7(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function N7(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function C7(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ty(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Na(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function $7(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let i=o,a="",l="b, r, c";for(let c=2;c<n.length-1;c++)i*=n[n.length-c-1],a=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+a,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function I7(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ty(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Na(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function T7(n,e){const t=Na(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function E7(n,e){const t=Na(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function R7(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Qe(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function A7(n,e,t){return Qe(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Ca(n){return`offset${n}`}function D7(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=Gn();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function _7(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Ca(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function O7(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=Gn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function F7(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${$u(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],i=r[1];if(i===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Ca(t);return i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function L7(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],l=Gn();if(o!=null&&Qe(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],h=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${h}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function P7(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Qe(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const f=o[0],g=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${g}.0, ${f}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:a}=yo(t),l=i;if(l.length<t.length){const f=Iu(n,l),g=["row","col"];return`
      ${Cu(f,e)}
      float ${r}(int row, int col) {
        return ${r}(${Tu(g,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${$u(n)}
      }
    `;const c=o[0],h=o[1],p=Ca(s);return h===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${p};
    vec2 uv = uvFromFlat(${c}, ${h}, index);
    return sampleTexture(${s}, uv);
  }
`}function z7(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const f=t.slice(1),g=[1,2],y=Iu(n,f),b=["b","row","col"];return`
        ${tA(y,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Tu(b,g)});
        }
      `}const a=Gn();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=i[0],c=i[1],h=Math.ceil(t[2]/2),p=h*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${p}, ${h}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function M7(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],i=t[2],{newShape:a,keptDims:l}=yo(t),c=a;if(c.length<t.length){const b=Iu(n,c),w=["row","col","depth"];return`
        ${Cu(b,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Tu(w,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${$u(n)}
      }
    `;const h=n.shapeInfo.texShape,p=h[0],f=h[1],g=n.shapeInfo.flatOffset;if(f===o&&g==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${f}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(f===i&&g==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;const y=Ca(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${y};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${y};
        vec2 uv = uvFromFlat(${p}, ${f}, index);
        return sampleTexture(${s}, uv);
      }
  `}function B7(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=Gn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],h=l[1],p=Math.ceil(o[i-1]/2);let f=p*Math.ceil(o[i-2]/2),g="int b, int row, int col",y=`b * ${f} + (row / 2) * ${p} + (col / 2)`;for(let b=2;b<i-1;b++)g=`int b${b}, `+g,f*=o[i-b-1],y=`b${b} * ${f} + `+y;return`
    vec4 ${s}(${g}) {
      int index = ${y};
      int texR = index / ${h};
      int texC = index - texR * ${h};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${c});
      return ${r.texture2D}(${t}, uv);
    }
  `}function V7(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],i=t[2]*o,a=t[1]*i,{newShape:l,keptDims:c}=yo(t);if(l.length<t.length){const S=Iu(n,l),$=["row","col","depth","depth2"];return`
      ${Cu(S,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Tu($,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${$u(n)}
      }
    `;const h=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,f=p[0],g=p[1],y=`int stride2 = ${s}Shape[3];`,b=`int stride1 = ${s}Shape[2] * stride2;`,w=`int stride0 = ${s}Shape[1] * stride1;`;if(g===a&&h==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${y}
        ${b}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${f}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(g===o&&h==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${f}.0);
        return sampleTexture(${s}, uv);
      }
    `;const v=Ca(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${y}
      ${b}
      ${w}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${v});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${f}, ${g}, index + ${v});
      return sampleTexture(${s}, uv);
    }
  `}function W7(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,a=e[1]*i,{newShape:l,keptDims:c}=yo(e);if(l.length<e.length){const b=Iu(n,l),w=["row","col","depth","depth2","depth3"];return`
      ${Cu(b)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Tu(w,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${r})) +
          depth3;
        ${$u(n)}
      }
    `;const h=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,f=p[0],g=p[1];if(g===a&&h==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(g===r&&h==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const y=Ca(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${y};
      vec2 uv = uvFromFlat(${f}, ${g}, index);
      return sampleTexture(${t}, uv);
    }
  `}function U7(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=yo(e);if(r.length<e.length){const w=Iu(n,r),v=["row","col","depth","depth2","depth3","depth4"];return`
      ${Cu(w)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Tu(v,o)});
      }
    `}const i=e[5],a=e[4]*i,l=e[3]*a,c=e[2]*l,h=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${h}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${$u(n)}
      }
    `;const p=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,g=f[0],y=f[1];if(y===h&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(y===i&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;const b=Ca(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${h} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${b};
      vec2 uv = uvFromFlat(${g}, ${y}, index);
      return sampleTexture(${t}, uv);
    }
  `}function $u(n){const e=n.name,t=le(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function G7(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=eA(n.shapeInfo.logicalShape,e.logicalShape),l=mt(i),c=i-o;let h;const p=["x","y","z","w","u","v"];o===0?h="":i<2&&a.length>=1?h="coords = 0;":h=a.map(S=>`coords.${p[S+c]} = 0;`).join(`
`);let f="";i<2&&o>0?f="coords":f=n.shapeInfo.logicalShape.map((S,$)=>`coords.${p[$+c]}`).join(", ");let g="return outputValue;";const b=le(n.shapeInfo.logicalShape)===1,v=le(e.logicalShape)===1;if(o===1&&!b&&!v)g=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(b&&!v)i===1?g=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:g=`
        return vec4(outputValue.x);
      `;else if(a.length){const S=o-2,$=o-1;a.indexOf(S)>-1&&a.indexOf($)>-1?g="return vec4(outputValue.x);":a.indexOf(S)>-1?g="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf($)>-1&&(g="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${h}
      vec4 outputValue = get${s}(${f});
      ${g}
    }
  `}function H7(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&Qe(i,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=mt(l),h=eA(n.shapeInfo.logicalShape,e.logicalShape),p=l-a;let f;const g=["x","y","z","w","u","v"];a===0?f="":l<2&&h.length>=1?f="coords = 0;":f=h.map(b=>`coords.${g[b+p]} = 0;`).join(`
`);let y="";return l<2&&a>0?y="coords":y=n.shapeInfo.logicalShape.map((b,w)=>`coords.${g[w+p]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${f}
      return get${s}(${y});
    }
  `}function mt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function sv(n,e,t){const{newShape:s,keptDims:r}=yo(e),o=e.length,i=n&&o===3&&e[0]===1,a=i?e.slice(1):s,l=!n&&o>1&&!Qe(e,t)&&s.length<o||i;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:r}}function Iu(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Tu(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(n,e,t,s){const r=t.map((h,p)=>{const f={logicalShape:h.shape,texShape:h.isUniform?null:h.texData.texShape,isUniform:h.isUniform,isPacked:h.isUniform?!1:h.texData.isPacked,flatOffset:null};return h.texData!=null&&h.texData.slice!=null&&h.texData.slice.flatOffset>0&&(f.flatOffset=h.texData.slice.flatOffset),{name:e.variableNames[p],shapeInfo:f}}),o=r.map(h=>h.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=c7(r,i,e),l=MX(n.gl,a),c=n.createProgram(l);return se().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i},sA(n,e,c)))}function sA(n,e,t){const s=[],r=[];let o,i,a,l=null,c=null;c=n.getUniformLocation(t,"NAN",!1),se().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const h=!1;for(const p of e.variableNames){const f={name:p,uniform:n.getUniformLocation(t,p,h),offset:n.getUniformLocation(t,`offset${p}`,h)};e.enableShapeUniforms&&(f.shape=n.getUniformLocation(t,`${p}Shape`,h),f.texShape=n.getUniformLocation(t,`${p}TexShape`,h)),s.push(f)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",h),a=n.getUniformLocation(t,"outShapeStrides",h),i=n.getUniformLocation(t,"outTexShape",h)),e.customUniforms)for(const p of e.customUniforms)r.push(n.getUniformLocation(t,p.name,h));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}function wC(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],i=o.shape;if(!Qe(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const a=t.texShape,l=o.isUniform?null:o.texData.texShape;if(!Qe(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function q7(n,e,t,s,r){e.program.enableShapeUniforms||(wC(e.inShapeInfos,t),wC([e.outShapeInfo],[s]));const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),se().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const c=t[l],{uniform:h,offset:p,shape:f,texShape:g}=e.variablesLocations[l];if(f){const{uniformShape:y}=sv(e.program.packedInputs,c.shape,c.texData.texShape);switch(y.length){case 1:n.gl.uniform1iv(f,new Int32Array(y));break;case 2:n.gl.uniform2iv(f,new Int32Array(y));break;case 3:n.gl.uniform3iv(f,new Int32Array(y));break;case 4:n.gl.uniform4iv(f,new Int32Array(y));break}}if(g&&n.gl.uniform2i(g,c.texData.texShape[0],c.texData.texShape[1]),h!=null){if(c.isUniform){if(le(c.shape)<2)n.gl.uniform1f(h,c.uniformValues[0]);else{let y=c.uniformValues;y instanceof Float32Array||(y=new Float32Array(y)),n.gl.uniform1fv(h,y)}continue}c.texData.slice!=null&&p!=null&&n.gl.uniform1i(p,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,h,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Le(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const c=e.program.customUniforms[l],h=e.customUniformLocations[l],p=r[l];if(c.type==="float")n.gl.uniform1fv(h,p);else if(c.type==="vec2")n.gl.uniform2fv(h,p);else if(c.type==="vec3")n.gl.uniform3fv(h,p);else if(c.type==="vec4")n.gl.uniform4fv(h,p);else if(c.type==="int")n.gl.uniform1iv(h,p);else if(c.type==="ivec2")n.gl.uniform2iv(h,p);else if(c.type==="ivec3")n.gl.uniform3iv(h,p);else if(c.type==="ivec4")n.gl.uniform4iv(h,p);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function K7(n,e,t){let s="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const l=i.texData.texShape,{useSqueezeShape:c,uniformShape:h,keptDims:p}=sv(n.packedInputs,i.shape,l);let f="",g="",y="";if(h.length===1&&n.packedInputs){const T=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];f=`${T[0]>1}_${T[1]>1}`}else if(h.length===2&&!n.packedInputs)g=`${h[0]>1}_${h[1]>1}`;else if(h.length>2&&!n.packedInputs){const T=Le(h);y=`${T[0]===l[1]}_${T[T.length-1]===l[1]}`}const b=i.shape.length,w=h.length===2&&Qe(i.shape,l),v=le(i.shape)===1,S=oa(i.shape,t.shape),$=!n.packedInputs&&b===t.shape.length&&Qe(l,t.texData.texShape),N=n.packedInputs||h.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${b}_${$}_${c?p:""}_${h.length}_${v}_${S}_${w}_${f}_${g}_${y}_${N}_${a}`}else{const l=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${l}_${a}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${se().getNumber("WEBGL_VERSION")}`,o}function Dn(n){return se().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X7{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Uc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Gn();this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ty(["r","c","d"],e):Na(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y7{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Uc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Gn();this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ty(["r","c","d"],e):Na(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q7{constructor(e){this.variableNames=["A"],this.outTexUsage=Es.DOWNLOAD;const t=Gn();this.outputShape=e,this.userCode=`
      ${JR}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z7{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Es.DOWNLOAD;const t=Gn();this.outputShape=e,this.userCode=`
      ${JR}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J7={R:0,G:1,B:2,A:3};class bC{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Gn();this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<s.length;a++){const l=s[a];i+=`
          if(offset == ${a}) {
            result = values[${J7[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?nv():tv(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${i}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e9{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Gn();this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const l=i*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?nv():tv(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t9(n){const e=Gn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return zX(n,t)}function n9(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return UX(n,e)}function s9(n){const e=new Uint16Array([0,1,2,2,1,3]);return GX(n,e)}function Rh(n,e,t,s,r,o){jX(e,t);const i=HX(n),a=n.TEXTURE_2D;return Ce(n,()=>n.bindTexture(a,i)),Ce(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Ce(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Ce(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),Ce(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),se().getNumber("WEBGL_VERSION")===1?Ce(n,()=>n.texImage2D(a,0,s,e,t,0,r,o,null)):Ce(n,()=>n.texStorage2D(a,1,s,e,t)),Ce(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function rA(n){return n.internalFormatFloat}function r9(n,e,t,s){const[r,o]=Th(e,t);return Rh(n,r,o,rA(s),s.textureFormatFloat,n.FLOAT)}function oA(n){return n.internalFormatHalfFloat}function o9(n,e,t,s){const[r,o]=Th(e,t);return Rh(n,r,o,oA(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function iA(n){return n.downloadTextureFormat}function i9(n,e,t,s){const[r,o]=Th(e,t);return Rh(n,r,o,iA(s),n.RGBA,n.UNSIGNED_BYTE)}function aA(n){return n.internalFormatPackedFloat}function a9(n,e,t,s){const[r,o]=Nu(e,t);return Rh(n,r,o,aA(s),n.RGBA,n.FLOAT)}function lA(n){return n.internalFormatPackedHalfFloat}function l9(n,e,t,s){const[r,o]=Nu(e,t);return Rh(n,r,o,lA(s),n.RGBA,s.textureTypeHalfFloat)}function u9(n,e,t){return Ce(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),gC(n,e,"clipSpacePos",t,3,20,0)&&gC(n,e,"uv",t,2,20,12)}function c9(n,e,t,s,r,o){Ce(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,l;r instanceof Uint8Array?(i=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(i=new Float32Array(t*s*4),a=n.FLOAT,l=o.internalFormatPackedFloat),i.set(r),se().getNumber("WEBGL_VERSION")===2?Ce(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,i)):Ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,i)),Ce(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function d9(n,e,t){Ce(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?se().getNumber("WEBGL_VERSION")===2?Ce(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):se().getNumber("WEBGL_VERSION")===2?Ce(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Ce(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Ce(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function h9(n,e,t,s){const r=n.createBuffer();Ce(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*e*t;return Ce(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),Ce(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Ce(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function p9(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function f9(n,e,t,s){const[r,o]=Th(e,t),i=4,a=new Uint8Array(AX(e*t,i));return Ce(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function m9(n,e,t,s,r,o,i,a){const l=n,c=new Float32Array(DX(o,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function g9(n,e,t){const s=new Float32Array(e*t*4);return Ce(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b0{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=se().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,TX(t,e)):this.gl=br(t),e=this.gl,se().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>Ce(o,()=>o.createVertexArray()),this.bindVertexArray=i=>Ce(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>Ce(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>Ce(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Ce(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>Ce(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>Ce(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>Ce(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),se().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Qp(this.gl,o),Ks(this.gl,i))this.textureHalfFloatExtension=Qp(this.gl,i);else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Ks(this.gl,r))this.colorBufferHalfFloatExtension=Qp(this.gl,r);else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Ks(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(Ks(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=n9(this.gl),this.indexBuffer=s9(this.gl),this.framebuffer=qX(this.gl),this.textureConfig=ev(this.gl,this.textureHalfFloatExtension)}get debug(){return se().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Ce(e,()=>e.finish()),Ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Ce(e,()=>e.deleteFramebuffer(this.framebuffer)),Ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Ce(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),r9(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),o9(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),i9(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),d9(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),c9(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),l9(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),a9(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(yC(this.gl,this.framebuffer),this.outputTexture=null),Ce(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>f9(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,i){return m9(this.gl,e,t,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return p9(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=h9(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(se().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},t=o}else se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>g9(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=t9(t));const s=VX(t);Ce(t,()=>t.attachShader(s,this.vertexShader)),Ce(t,()=>t.attachShader(s,e)),WX(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&g0(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Ce(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),u9(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Ce(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&g0(this.gl,this.program),Ce(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?XX(this.gl,e,t):YX(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Ce(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),QX(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=Nu(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&g0(this.gl,this.program),Zp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Ce(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Qp(this.gl,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await S0(()=>this.disposed||this.isQueryAvailable(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=y9(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in se().platform&&(s=se().platform.setTimeoutCustom.bind(se().platform)),S0(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),y0(this.gl,e,this.framebuffer),this.debug&&Zp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(y0(this.gl,this.outputTexture,this.framebuffer),this.debug&&Zp(this.gl)):yC(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;y0(r,e,this.framebuffer),this.debug&&Zp(r),this.outputTexture=e,Ce(r,()=>r.viewport(0,0,t,s)),Ce(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),Ce(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function y9(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:x9,bincountImpl:uA,bincountReduceImpl:w9,bitwiseAndImpl:b9,castImpl:v9,ceilImpl:S9,concatImpl:k9,equalImpl:N9,expImpl:C9,expm1Impl:$9,floorImpl:I9,gatherNdImpl:T9,gatherV2Impl:E9,greaterImpl:R9,greaterEqualImpl:A9,lessImpl:D9,lessEqualImpl:_9,linSpaceImpl:O9,logImpl:F9,maxImpl:L9,maximumImpl:P9,minimumImpl:z9,multiplyImpl:M9,negImpl:B9,notEqualImpl:V9,prodImpl:W9,raggedGatherImpl:U9,raggedRangeImpl:G9,raggedTensorToTensorImpl:H9,rangeImpl:j9,rsqrtImpl:q9,scatterImpl:K9,sigmoidImpl:X9,simpleAbsImpl:cA,sliceImpl:Y9,sparseFillEmptyRowsImpl:Q9,sparseReshapeImpl:Z9,sparseSegmentReductionImpl:dA,sqrtImpl:J9,staticRegexReplaceImpl:eY,stridedSliceImpl:tY,stringNGramsImpl:nY,stringSplitImpl:sY,stringToHashBucketFastImpl:rY,subImpl:oY,tileImpl:iY,topKImpl:aY,transposeImpl:rv,uniqueImpl:lY}=d6;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Vn(n,e){return e===1?[n]:hA(n,e)}function uY(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cY{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Dn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Vn("rc",this.rank),s=mt(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${dY(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?nv():tv(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function dY(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?u7(["r","c","d"],"inputShape"):Na(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hY{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=SC(t,s),o=kC(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=vC(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const l=this.freeTextures[o].pop();return this.usedTextures[o].push(l),l}let a;return r===yn.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===yn.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===yn.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===yn.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===yn.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=SC(s,r),i=kC(t,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=vC(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=se().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[i],h=c&&c.indexOf(e);if(h==null||h<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[h]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function pY(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function vC(n,e,t,s,r){const o=fY(e,s);let i;if(r){const[l,c]=Nu(n[0],n[1]);i=l*c}else{const[l,c]=Th(n[0],n[1]);i=l*c}const a=pY(t,o);return i*a}function fY(n,e){switch(n){case yn.PACKED_2X2_FLOAT32:return aA(e);case yn.PACKED_2X2_FLOAT16:return lA(e);case yn.UNPACKED_FLOAT32:return rA(e);case yn.UNPACKED_FLOAT16:return oA(e);case yn.PACKED_4X1_UNSIGNED_BYTE:return iA(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function mY(n){return se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?yn.PACKED_2X2_FLOAT32:yn.UNPACKED_FLOAT32:n?yn.PACKED_2X2_FLOAT16:yn.UNPACKED_FLOAT16}function SC(n,e){if(n===Es.UPLOAD)return yn.PACKED_2X2_FLOAT32;if(n===Es.RENDER||n==null)return mY(e);if(n===Es.DOWNLOAD||n===Es.PIXELS)return yn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function kC(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Or{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Js="if (isnan(x)) return x;",gY="return x;",NC="return abs(x);",yY="return (x >= 0.0) ? x : (exp(x) - 1.0);",xY=Js+`
  return (x < 0.0) ? 0.0 : x;
`,wY=Js+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,jo="return x;",bY="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vY="return x;",SY=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,kY=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,NY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CY="return 1.0 / (1.0 + exp(-1.0 * x));";class Xo{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Y{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);const t=e.length,s=Vn("rc",t),r=mt(t),o=uY(t,s),i=s.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY=Tg,TY=1e-7,EY=1e-4,tf={};function RY(n){return n in tf||(tf[n]={}),tf[n]}const AY=se().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),DY=600;function _Y(){return se().global.screen==null?1024:se().global.screen.height*se().global.screen.width*window.devicePixelRatio*DY/1024/1024}class ny extends Hf{nextDataId(){return ny.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!se().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof b0)t=e;else{const s=br(se().getNumber("WEBGL_VERSION"),e);t=new b0(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=br(se().getNumber("WEBGL_VERSION"));t=new b0(s),this.binaryCache=RY(se().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new hY(this.gpgpu),this.numMBBeforeWarning=_Y(),this.texData=new x1(this,cr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,i){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,o]},l.texShape=[r,o];const c=Jp(t),h=new bC(c,!1,i),p=this.runWebGLProgram(h,[a],s,[[r,o]]);return p.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),p.dataId}write(e,t,s){if((se().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||se().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:Es.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(se().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:Es.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:a,isPacked:l}=t;if(i!=null){let f;l?f=new Xo(a,jo):f=new Or(a,jo);const g=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:r}],r),y=this.readSync(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const c=this.activeTimers!=null;let h;c&&(h=Pn());let p;if(r==="complex64"){const f=this.readSync(o.real.dataId),g=this.readSync(o.imag.dataId);p=mo(f,g)}else p=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Pn()-h),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){const y=this.pendingRead.get(e);return new Promise(b=>y.push(b))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:a,isPacked:l}=t;if(o!=null){let y;l?y=new Xo(r,jo):y=new Or(r,jo);const b=this.runWebGLProgram(y,[{dataId:e,shape:r,dtype:i}],i),w=this.read(b.dataId);return this.disposeIntermediateTensorInfo(b),w}if(s!=null)return this.convertAndCacheOnCPU(e);if(se().getBool("DEBUG")&&!se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&se().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,h;if(i!=="complex64"&&se().get("WEBGL_BUFFER_SUPPORTED")){h=this.decode(e);const y=this.texData.get(h.dataId);c=this.gpgpu.createBufferFromTexture(y.texture.texture,...Yp(r))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(i==="complex64"){const y=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),b=y[0],w=y[1];p=mo(b,w)}else if(c==null)p=this.getValuesFromTexture(e);else{const y=le(r);p=this.gpgpu.downloadFloat32MatrixFromBuffer(c,y)}if(h!=null&&this.disposeIntermediateTensorInfo(h),c!=null){const y=this.gpgpu.gl;Ce(y,()=>y.deleteBuffer(c))}const f=this.convertAndCacheOnCPU(e,p),g=this.pendingRead.get(e);return this.pendingRead.delete(e),g.forEach(y=>y(f)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&cr().removeDataId(e,this),this.pendingDeletes--),f}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:i,dtype:a,isPacked:l,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let g;l?g=new Xo(o,jo):g=new Or(o,jo);const y=this.runWebGLProgram(g,[{dataId:e,shape:o,dtype:a}],a),b=this.readToGPU(y,t);return this.disposeIntermediateTensorInfo(y),b}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const h=this.decode(e,t.customTexShape),p=cr().makeTensorFromTensorInfo(h),f=this.texData.get(h.dataId);return Object.assign({tensorRef:p},f.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>ho(r));return He(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return He(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!LX(s))throw se().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=le(t);if(se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const f=this.decode(e),g=this.texData.get(f.dataId),y=this.gpgpu.downloadMatrixFromPackedTexture(g.texture.texture,...Yp(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(f),y}const i=se().getBool("WEBGL_PACK")&&r===!0,a=i?Jp(t):t,l=i?new Z7(a):new Q7(a),c=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),h=this.texData.get(c.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture.texture,h.texShape[0],h.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),p}timerAvailable(){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=Br(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),i=Br(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(o);a.kernelMs=GC(l),a.getExtraProfileInfo=()=>l.map((c,h)=>({name:i[h],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Pn(),endMs:null}}endTimer(e){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Pn(),e)}async getQueryTime(e){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:i,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,i)));const h=this.texData.get(e);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=AY){return se().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&le(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){$s("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return IY(e.shape,t)}packedUnaryOp(e,t,s){const r=new Xo(e.shape,t),o=this.compileAndRun(r,[e],s);return cr().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=cA(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,NC,e.dtype);const t=new Or(e.shape,NC),s=this.compileAndRun(t,[e]);return cr().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&_r(s[0])){const o=s.map(i=>Fr(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return cr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new $Y(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new cY(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[wl(e.shape),...bl(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[wl(t),...bl(t)],i=new pA(o,s),a=!0,l=[s],c=this.runWebGLProgram(i,[r],e.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:i}=s;if(t!=null){const f=le(o),g=t[0]*t[1]*4;D(f<=g,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Jp(o);let l;r?l=new Y7(a):l=new X7(a);const c=!0,h=[t??Yp(a)],p=this.runWebGLProgram(l,[{shape:a,dtype:i,dataId:e}],i,h,c,t);return{dtype:i,shape:o,dataId:p.dataId}}runWebGLProgram(e,t,s,r,o=!1,i){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===Uc.DENSE){const v=i??Yp(e.outputShape);l.texShape=v.map(S=>S*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),le(a.shape)===0)return l.values=un(a.dtype,0),a;const c=[],h=t.map(v=>{if(v.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let S=this.texData.get(v.dataId);if(S.texture==null){if(!e.packedInputs&&le(v.shape)<=se().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:v.shape,texData:null,isUniform:!0,uniformValues:S.values};e.packedInputs&&(S.isPacked=!0,S.shape=v.shape)}if(this.uploadToGPU(v.dataId),!!S.isPacked!=!!e.packedInputs)v=S.isPacked?this.unpackTensor(v):this.packTensor(v),c.push(v),S=this.texData.get(v.dataId);else if(S.isPacked&&!Vf(S.shape,v.shape)){const $=v,N=v.shape;v.shape=S.shape,v=this.packedReshape(v,N),c.push(v),S=this.texData.get(v.dataId),$.shape=N}return{shape:v.shape,texData:S,isUniform:!1}});this.uploadToGPU(a.dataId);const p={shape:a.shape,texData:l,isUniform:!1},f=K7(e,h,p),g=this.getAndSaveBinary(f,()=>j7(this.gpgpu,e,h,p)),y=this.activeTimers!=null;let b;y&&(b=this.startTimer()),se().get("ENGINE_COMPILE_ONLY")||q7(this.gpgpu,g,h,p,r),c.forEach(v=>this.disposeIntermediateTensorInfo(v)),y&&(b=this.endTimer(b),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(b)}));const w=se().getNumber("WEBGL_FLUSH_THRESHOLD");if(w>0){const v=Pn();v-this.lastGlFlushTime>w&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=v)}if(!se().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&o===!1){const v=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),v}return a}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(se().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ne(()=>{if(!se().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=se().getBool("DEBUG");se().set("DEBUG",!1);const t=this.abs(Pe(1e-8)).dataSync()[0];if(se().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?TY:EY}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:i,usage:a,isPacked:l}=t;if(i!=null)return;const c=this.activeTimers!=null;let h;c&&(h=Pn());let p=t.texShape;if(p==null&&(p=e7(s,l),t.texShape=p),o!=null){const f=Jp(s);let g,y=p[1],b=p[0];const w=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(l||!w)&&([y,b]=Nu(p[0],p[1])),l?g=new e9(f,w):g=new bC(f,w);const v=w?[b,y]:p,S=this.makeTensorInfo(v,r),$=this.texData.get(S.dataId);w?$.usage=Es.PIXELS:$.usage=Es.UPLOAD,$.texShape=v,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(S.dataId),y,b,o);const N=[[b,y]],R=this.runWebGLProgram(g,[S],r,N,!0),L=this.texData.get(R.dataId);t.texShape=L.texShape,t.isPacked=L.isPacked,t.usage=L.usage,se().get("ENGINE_COMPILE_ONLY")?this.disposeData(R.dataId):(t.texture=L.texture,t.values=null,this.texData.delete(R.dataId)),this.disposeIntermediateTensorInfo(S),c&&(this.uploadWaitMs+=Pn()-h)}else{const f=this.acquireTexture(p,a,r,l);t.texture=f}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=OY(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ic(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await eb(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(ZR(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:l}=sA(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:o,width:i,channels:a}=e,l=cr().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(r,t,s,o,i,a);return cr().makeTensorFromDataId(c,t,s,l)}}ny.nextDataId=0;function OY(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */T1()&&R1("webgl",()=>new ny,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ov=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class pa{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Ge(t,s),this.enableShapeUniforms=Dn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $a=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Eu{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ge(t,s);const o=this.outputShape.length;this.enableShapeUniforms=Dn(o);let i="";if(r)if(o===0||le(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${mt(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=Vn("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${l[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xs(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const FY={kernelName:Vl,backendName:"webgl",kernelFunc:xs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vi(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(o.dataId),a=xs({inputs:{x:s},backend:t}),l=xs({inputs:{x:r},backend:t});return i.complexTensorInfos={real:a,imag:l},o}const LY={kernelName:em,backendName:"webgl",kernelFunc:vi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA="return (a < 0.) ? b * a : a;",mA=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function PY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=t.makeTensorInfo([],"float32",xo(o,"float32")),a=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Eu(mA,r.shape,i.shape):new pa(fA,r.shape,i.shape),l=t.runWebGLProgram(a,[r,i],"float32");return t.disposeIntermediateTensorInfo(i),l}const zY={kernelName:md,backendName:"webgl",kernelFunc:PY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gA="return (a < 0.) ? b * a : a;",yA=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function MY(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Eu(yA,s.shape,r.shape):new pa(gA,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}const BY={kernelName:Od,backendName:"webgl",kernelFunc:MY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ru="if (isnan(x)) return x;";function nt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,a=o,l=s||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const p=a.texData.get(i.dataId),f=t(p.values,l);return a.makeTensorInfo(i.shape,l,f)}const c=se().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let h;return c?h=new Xo(i.shape,e):h=new Or(i.shape,n),a.runWebGLProgram(h,[i],l)}}function Nn({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:a})=>{const{a:l,b:c}=i,h=a;if(s&&l.dtype==="complex64"){const y=h.texData.get(l.dataId),b=h.texData.get(c.dataId),[w,v]=[[y.complexTensorInfos.real,b.complexTensorInfos.real],[y.complexTensorInfos.imag,b.complexTensorInfos.imag]].map($=>{const[N,T]=$,R={dataId:N.dataId,dtype:N.dtype,shape:l.shape},L={dataId:T.dataId,dtype:T.dtype,shape:c.shape},P=new pa(n,l.shape,c.shape);return h.runWebGLProgram(P,[R,L],Qn(N.dtype,T.dtype))}),S=vi({inputs:{real:w,imag:v},backend:h});return h.disposeIntermediateTensorInfo(w),h.disposeIntermediateTensorInfo(v),S}const p=o||Qn(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||h.shouldExecuteOnCPU([l,c]))&&r!=null){const y=h.texData.get(l.dataId).values,b=h.texData.get(c.dataId).values,w=l.dtype==="string"?go(y):y,v=l.dtype==="string"?go(b):b,[S,$]=r(l.shape,c.shape,w,v,p),N=h.makeTensorInfo($,p),T=h.texData.get(N.dataId);return T.values=S,N}const f=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let g;return f?g=new Eu(e,l.shape,c.shape,t):g=new pa(n,l.shape,c.shape),h.runWebGLProgram(g,[l,c],p)}}function Gc(n,e=!1){if(n==="linear")return e?vY:gY;if(n==="relu")return e?kY:xY;if(n==="elu")return e?SY:yY;if(n==="relu6")return e?NY:wY;if(n==="prelu")return e?yA:gA;if(n==="leakyrelu")return e?mA:fA;if(n==="sigmoid")return e?CY:bY;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xA{constructor(e,t,s,r=!1,o=!1,i=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Dn(this.outputShape.length);const h=r?e[1]:e[2],p=Math.ceil(h/2),f=r?"i * 2, rc.y":"rc.y, i * 2",g=o?"rc.z, i * 2":"i * 2, rc.z",y=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],b=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let w="",v="";a&&(l?w=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?w=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:w=`vec4 activation(vec4 x) {
          ${a}
        }`,v="result = activation(result);");const S=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let $="rc.x",N="rc.x";e[0]<t[0]?$=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(N=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${w}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${$};
        int batchB = ${N};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${f});
          vec4 b = getMatrixB(batchB, ${g});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${y[0]} * ${b[0]});
          result += (${y[1]} * ${b[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${S}

        ${v}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class $C{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ge(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IC="return a * b;";function iv(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=Qn(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),c=new $C(CC.REAL,s.shape,r.shape),h=new $C(CC.IMAG,s.shape,r.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],f=t.runWebGLProgram(c,p,"float32"),g=t.runWebGLProgram(h,p,"float32"),y=vi({inputs:{real:f,imag:g},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),y}if(t.shouldExecuteOnCPU([s,r])){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),[c,h]=M9(s.shape,r.shape,a.values,l.values,o),p=t.makeTensorInfo(h,o),f=t.texData.get(p.dataId);return f.values=c,p}let i;return se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Eu(IC,s.shape,r.shape):i=new pa(IC,s.shape,r.shape),t.runWebGLProgram(i,[s,r],o)}const VY={kernelName:Yl,backendName:"webgl",kernelFunc:iv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(n,e,t){const s=[wl(n.shape),...bl(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[wl(e),...bl(e)],i=new pA(o,s),a=!0,l=[s],c=t.runWebGLProgram(i,[r],n.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=t,a=le(r.shape),l=b1(o,a),c=le(l);D(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const h=i.texData.get(r.dataId);return h.isPacked&&!Vf(r.shape,l)&&!(h.texture!==null&&Vf(h.shape,l))?WY(r,l,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const UY={kernelName:Ld,backendName:"webgl",kernelFunc:ke};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TC{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];const a=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(t!=null){const p=1/t;c=`sumValue += dot(values * ${Ji(p)?p.toPrecision(2):p}, ones);`}let h="";o%s>0&&(h=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GY{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const h=Math.floor(s/4)*4,p=s%4;let f=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,g="vec4";t==="all"?(a="1.0",f=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,g="bvec4"):t==="any"&&(a="0.0",f=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,g="bvec4");let y="";o%s>0&&(y=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${y}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${f}
        }

        int inIdx = inOffset + ${h};
        if (${p===1}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${p===2}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${p===3}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${f}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HY(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=Bg(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Ia(n,e,t,s){const r=HY(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:a,windowSize:l,outSize:c}=r[i];let h,p;t==="mean"?h=i===0?new TC({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},a):new TC({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c}):h=new GY({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},t),p=o,o=s.runWebGLProgram(h,[o],e),p.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(p)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jY{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const r=mt(this.rank),o=qY(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function qY(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KY{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let h=0;h<s.length;h++)s[h]=e[t[h]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=mt(this.rank),o=hA("rc",this.rank),i=new Array(this.rank);for(let h=0;h<t.length;h++)i[t[h]]=o[h];const a=`vec2(${i.slice(-2).join()})`,l=`++${o[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sy(n,e,t){const s=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new KY(n.shape,e):new jY(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XY(n,e,t,s){const r=e,o=n.shape.length,i=Xe(r,n.shape);let a=i;const l=Ot(a,o),c=l!=null;let h=n;c&&(h=sy(n,l,s),a=Vt(a.length,o)),Sn("sum",a,o);const[p,f]=hn(h.shape,a);let g=p;t&&(g=Bt(p,i));const y=le(f),w=le(n.shape)/y,v=ke({inputs:{x:h},attrs:{shape:[w,y]},backend:s}),S=eg(n.dtype),$=Ia(v,S,"sum",s),N=ke({inputs:{x:$},attrs:{shape:g},backend:s});return s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo($),c&&s.disposeIntermediateTensorInfo(h),N}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ry(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return XY(r,o,i,t)}const YY={kernelName:Wd,backendName:"webgl",kernelFunc:ry};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,a=r.shape.length,l=new Array(a);for(let h=0;h<l.length;h++)l[h]=r.shape[o[h]];let c;if(i.shouldExecuteOnCPU([r])){const p=i.texData.get(r.dataId).values,f=rv(p,r.shape,r.dtype,o,l);c=i.makeTensorInfo(l,r.dtype);const g=i.texData.get(c.dataId);g.values=f}else c=sy(r,o,i);return c}const QY={kernelName:Xi,backendName:"webgl",kernelFunc:Wn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wA=1e3;function Wf({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){const c=n.shape.length,h=e.shape.length,p=t?n.shape[c-2]:n.shape[c-1],f=s?e.shape[h-1]:e.shape[h-2],g=t?n.shape[c-1]:n.shape[c-2],y=s?e.shape[h-2]:e.shape[h-1],b=n.shape.slice(0,-2),w=e.shape.slice(0,-2),v=le(b),S=le(w),N=Ge(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([g,y]);D(p===f,()=>`Error in matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const T=t?[v,p,g]:[v,g,p],R=s?[S,y,f]:[S,f,y],L=ke({inputs:{x:n},backend:r,attrs:{shape:T}}),P=ke({inputs:{x:e},backend:r,attrs:{shape:R}}),O=[L,P],F=Math.max(v,S),E=t?L.shape[1]:L.shape[2],W=o!=null,X=i!=null,ee=l==="leakyrelu",Q=l!=null?Gc(l,!0):null,te=W||X||ee||Q!=null;let oe;if((g===1||y===1)&&E>wA&&te===!1){let Z=L,J=P;t&&(Z=Wn({inputs:{x:L},backend:r,attrs:{perm:[0,2,1]}}),O.push(Z)),s&&(J=Wn({inputs:{x:P},backend:r,attrs:{perm:[0,2,1]}}),O.push(J));const z=y!==1,q=y===1;let ue=Z;z&&(ue=ke({inputs:{x:Z},backend:r,attrs:{shape:[F,E,1]}}),O.push(ue));const de=y===1?2:1;let he=J;q&&(he=ke({inputs:{x:J},backend:r,attrs:{shape:[F,1,E]}}),O.push(he));const me=iv({inputs:{a:ue,b:he},backend:r});oe=ry({inputs:{x:me},backend:r,attrs:{axis:de,keepDims:!0}}),O.push(me)}else{const Z=Qn(n.dtype,e.dtype),J=new xA(T,R,[F,g,y],t,s,W,Q,X,ee),z=[L,P];if(o!=null&&z.push(o),X&&z.push(i),ee){const q=r.makeTensorInfo([],"float32",xo(a,"float32"));z.push(q),O.push(q)}oe=r.runWebGLProgram(J,z,Z)}const U=ke({inputs:{x:oe},backend:r,attrs:{shape:N}});O.push(oe);for(const Z of O)r.disposeIntermediateTensorInfo(Z);return U}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:h,leakyreluAlpha:p}=s;return Wf({a:r,b:o,transposeA:l,transposeB:c,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:p,activation:h})}const JY={kernelName:Tc,backendName:"webgl",kernelFunc:ZY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EC="return abs(x);";function eQ(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),i=cA(o.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let r;return se().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Xo(s.shape,EC):r=new Or(s.shape,EC),t.runWebGLProgram(r,[s],s.dtype)}const tQ={kernelName:qc,backendName:"webgl",kernelFunc:eQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nQ=Js+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,sQ=nt({opSnippet:nQ}),rQ={kernelName:vl,backendName:"webgl",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oQ=Js+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,iQ=nt({opSnippet:oQ}),aQ={kernelName:Sl,backendName:"webgl",kernelFunc:iQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RC="return a + b;",lQ=Nn({opSnippet:RC,packedOpSnippet:RC,supportsComplex:!0,cpuKernelImpl:x9}),uQ={kernelName:ya,backendName:"webgl",kernelFunc:lQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cQ{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dQ{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ff(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return xs({inputs:{x:s[0]},backend:t});if(s.length>se().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=ff({inputs:s.slice(0,l),backend:t}),h=ff({inputs:s.slice(l),backend:t});return ff({inputs:[c,h],backend:t})}const r=s.map(l=>l.dtype).reduce((l,c)=>Qn(l,c)),o=s.map(l=>l.shape),a=se().getBool("WEBGL_PACK")?new dQ(s[0].shape,o):new cQ(s[0].shape,o);return t.runWebGLProgram(a,s,r)}const hQ={kernelName:Kc,backendName:"webgl",kernelFunc:ff};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=Xe(o,r.shape);let c=l;const h=Ot(c,a);let p=r;h!=null&&(p=Wn({inputs:{x:r},backend:t,attrs:{perm:h}}),c=Vt(c.length,a)),Sn("all",c,a);const[f,g]=hn(p.shape,c),y=le(g),b=ke({inputs:{x:p},backend:t,attrs:{shape:[-1,y]}}),w=Ia(b,b.dtype,"all",t);let v;if(i){const S=Bt(f,l);v=ke({inputs:{x:w},backend:t,attrs:{shape:S}})}else v=ke({inputs:{x:w},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),h!=null&&t.disposeIntermediateTensorInfo(p),v}const fQ={kernelName:Kf,backendName:"webgl",kernelFunc:pQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=Xe(o,r.shape);let c=l;const h=Ot(c,a);let p=r;h!=null&&(p=Wn({inputs:{x:r},backend:t,attrs:{perm:h}}),c=Vt(c.length,a)),Sn("any",c,a);const[f,g]=hn(p.shape,c),y=le(g),b=ke({inputs:{x:p},backend:t,attrs:{shape:[-1,y]}}),w=Ia(b,b.dtype,"any",t);let v;if(i){const S=Bt(f,l);v=ke({inputs:{x:w},backend:t,attrs:{shape:S}})}else v=ke({inputs:{x:w},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),h!=null&&t.disposeIntermediateTensorInfo(p),v}const gQ={kernelName:Xf,backendName:"webgl",kernelFunc:mQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yQ{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xQ{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=mt(l),h=Vn("coords",l);let p,f;if(i===1){f=l+1;const P=mt(f);p=`
        ${P} sourceLocR = ${P}(${h.join()}, 0);
        ++${h[l-1]};
        ${P} sourceLocG = ${P}(${h.join()}, 0);
        ++${h[l-2]};
        ${P} sourceLocA = ${P}(${h.join()}, 0);
        --${h[l-1]};
        ${P} sourceLocB = ${P}(${h.join()}, 0);
        --${h[l-2]};`}else f=l,p=`
        ${c} sourceLocR = coords;
        ++${h[l-1]};
        ${c} sourceLocG = coords;
        ++${h[l-2]};
        ${c} sourceLocA = coords;
        --${h[l-1]};
        ${c} sourceLocB = coords;
        --${h[l-2]};`;const g=["x","y","z","w","u","v"].slice(0,f),y="."+g[f-1],b=g.map(P=>"int "+P),w=Vn("sourceLocR",f-1).concat("inIdx.r"),v=Vn("sourceLocG",f-1).concat("inIdx.g"),S=Vn("sourceLocB",f-1).concat("inIdx.b"),$=Vn("sourceLocA",f-1).concat("inIdx.a"),N=s==="max"?"greaterThan":"lessThan",T=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${$.join()})));`,R=`vec4(
            getAChannel(${w.join()}),
            hasNextCol ? getAChannel(${v.join()}) : 0.,
            hasNextRow ? getAChannel(${S.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${$.join()}) : 0.)`,L=r?"":`
      float getBestIndicesAChannel(${b.join()}) {
        return getChannel(getBestIndicesA(${g.join()}),
                                          vec2(${g.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${b.join()}) {
        return getChannel(getA(${g.join()}),
                               vec2(${g.slice(-2).join()}));
      }
      ${L}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${h[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${h[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${y}, sourceLocG${y},
          sourceLocB${y}, sourceLocA${y}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${R};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${T}
          vec4 candidate = ${R};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${N}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=Bg(o),a={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},l=new yQ(a,t,s==null),c=[e];s!=null&&c.push(s);const h=n.runWebGLProgram(l,c,"int32");if(h.shape[1]===1)return h;const p=bA(n,e,t,h);return n.disposeIntermediateTensorInfo(h),p}function vA(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],i=Bg(o),a=new xQ(r,i,t,s==null),l=s==null?[e]:[e,s],c=n.runWebGLProgram(a,l,"int32");if(c.shape.length===e.shape.length){const h=vA(n,e,t,c);return n.disposeIntermediateTensorInfo(c),h}return c}function SA(n,e,t,s){const r=[t];if(Sn("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!se().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let l=e;a&&(l=n.unpackTensor(e),o.push(l));const[c,h]=hn(l.shape,r),p=le(h),f=ke({inputs:{x:l},backend:n,attrs:{shape:[-1,p]}});o.push(f);const g=bA(n,f,s);o.push(g);const y=ke({inputs:{x:g},backend:n,attrs:{shape:c}});return o.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}return vA(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=Xe(o,r.shape);const a=Ot(i,r.shape.length);let l=r;const c=[];a!=null&&(l=Wn({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),i=Vt(i.length,l.shape.length)),Sn("argMax",[i[0]],l.shape.length);const h=SA(t,l,i[0],"max");return c.forEach(p=>t.disposeIntermediateTensorInfo(p)),h}const bQ={kernelName:Xc,backendName:"webgl",kernelFunc:wQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=Xe(o,r.shape);const a=Ot(i,r.shape.length);let l=r;const c=[];a!=null&&(l=Wn({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),i=Vt(i.length,l.shape.length)),Sn("argMin",[i[0]],l.shape.length);const h=SA(t,l,i[0],"min");return c.forEach(p=>t.disposeIntermediateTensorInfo(p)),h}const SQ={kernelName:Yc,backendName:"webgl",kernelFunc:vQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kQ=Js+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,NQ=nt({opSnippet:kQ}),CQ={kernelName:kl,backendName:"webgl",kernelFunc:NQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Q=Js+"return log(x + sqrt(x * x + 1.0));",IQ=nt({opSnippet:$Q}),TQ={kernelName:Nl,backendName:"webgl",kernelFunc:IQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EQ=Js+`
  return atan(x);
`,RQ=nt({opSnippet:EQ}),AQ={kernelName:Cl,backendName:"webgl",kernelFunc:RQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DQ=ov+`
  return atan(a, b);
`,_Q=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+$a+`
  return result;
`,OQ=Nn({opSnippet:DQ,packedOpSnippet:_Q}),FQ={kernelName:Il,backendName:"webgl",kernelFunc:OQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LQ=Js+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,PQ=nt({opSnippet:LQ}),zQ={kernelName:$l,backendName:"webgl",kernelFunc:PQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hc{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b=t==="avg",w=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,v=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let S="0.0";if(b||(S="-1.0 / 1e-20"),s){const P=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${g}, ${y});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f};
                wC += ${h}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${P} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?w:v:`wR * ${f} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const $="max";let N=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(N="avgValue / max(count, 1.0)");const T=Math.floor(i/4)*4,R=i%4,L=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${g}, ${y});
      const float initializationValue = ${S};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${S});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${T}; wC += 4) {
            int xC = xCCorner + wC * ${h};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              getValue(batch, xR, xC + 3 * ${h}, d)
            );

            ${L}
          }

          int xC = xCCorner + ${T};
          if (${R===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${R===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${R===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              initializationValue
            );

            ${L}
          }
        }
        setOutput(${N});
      }
    `}}class av{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,l=e.strideHeight,c=e.strideWidth,h=e.dilationDepth,p=e.dilationHeight,f=e.dilationWidth,g=e.effectiveFilterDepth,y=e.effectiveFilterHeight,b=e.effectiveFilterWidth,w=e.padInfo.front,v=e.padInfo.top,S=e.padInfo.left;this.outputShape=e.outShape;const $=t==="avg";let N="0.0";if($||(N="-1.0 / 1e-20"),s){const F=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${w}, ${v}, ${S});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${g};
              wD += ${h}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${y};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${b};
                  wC += ${f}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${F} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${y} * ${b} +
                      wR * ${b} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const T="max";let R=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(R="avgValue / max(count, 1.0)");const L=Math.floor(i/4)*4,P=i%4,O=`
      if (${$}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${w}, ${v}, ${S});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${g};
            wD += ${h}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${y};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${L}; wC += 4) {
              int xC = xCCorner + wC * ${f};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                getValue(batch, xD, xR, xC + 3 * ${f}, ch)
              );

              ${O}
            }

            int xC = xCCorner + ${L};
            if (${P===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${P===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                initializationValue,
                initializationValue
              );

              ${O}
            } else if (${P===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                initializationValue
              );

              ${O}
            }
          }
        }
        setOutput(${R});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Eh(r,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=1;D(vn(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=Qs(r.shape,o,i,c,a,l);if(h.filterWidth===1&&h.filterHeight===1&&Qe(h.inShape,h.outShape))return xs({inputs:{x:r},backend:t});const p=new Hc(h,"avg",!1);return t.runWebGLProgram(p,[r],"float32")}const BQ={kernelName:Qc,backendName:"webgl",kernelFunc:MQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VQ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:l,dataFormat:c}=s,h=[1,1,1],p=wo(r.shape,o,i,h,a,l,c),f=new av(p,"avg",!1);return t.runWebGLProgram(f,[r],"float32")}const WQ={kernelName:Zc,backendName:"webgl",kernelFunc:VQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UQ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.top,p=c-1-e.padInfo.left,f=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${h}, ${p});
      const float avgMultiplier = float(${f});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class GQ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,g=e.effectiveFilterWidth,y=p-1-e.padInfo.front,b=f-1-e.padInfo.top,w=g-1-e.padInfo.left,v=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${y}, ${b}, ${w});
      const float avgMultiplier = float(${v});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${f};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${g};
                wC += ${h}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HQ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:c,dimRoundingMode:h}=s,p=[1,1,1],f=wo(i.shape,a,l,p,c,h),g=new GQ(f);return t.runWebGLProgram(g,[r],i.dtype)}const jQ={kernelName:Qf,backendName:"webgl",kernelFunc:HQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qQ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;Eh([r,o],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,h=Qs(i.shape,a,l,1,c),p=new UQ(h);return t.runWebGLProgram(p,[r],i.dtype)}const KQ={kernelName:Yf,backendName:"webgl",kernelFunc:qQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:a}=s;return Wf({a:r,b:o,transposeA:i,transposeB:a,backend:t})}const YQ={kernelName:Jc,backendName:"webgl",kernelFunc:XQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QQ{constructor(e,t,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ge(e,t),Ge(e,s);let a="0.0";r!=null&&(Ge(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";o!=null&&(Ge(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZQ{constructor(e,t,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ge(e,t),Ge(e,s);let a="vec4(0.0)";r!=null&&(Ge(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";o!=null&&(Ge(e,o),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JQ=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:i,scale:a}=n;D(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const c=[s,r,o];let h=null;i!=null&&(h=i.shape,c.push(i));let p=null;a!=null&&(p=a.shape,c.push(a));const f=se().getBool("WEBGL_PACK_NORMALIZATION")?new ZQ(s.shape,r.shape,o.shape,h,p,l):new QQ(s.shape,r.shape,o.shape,h,p,l);return e.runWebGLProgram(f,c,c[0].dtype)},eZ={kernelName:hd,backendName:"webgl",kernelFunc:JQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tZ{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=mt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=nZ(this.rank);let r;const o=e.map((i,a)=>`sourceLoc.${p1[a]} = start[${a}] + coords.${p1[a]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const p1=["x","y","z","w","u","v"];function nZ(n){if(n===1)return"sourceLoc";if(n<=6)return p1.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sZ{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=mt(this.rank),s=Vn("coords",this.rank),r=Vn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((h,p)=>`start[${p}]`).join()});`:e.map((h,p)=>`${r[p]} = ${s[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rZ(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=Zw(e,Le(n.shape));r.slice&&(a+=r.slice.flatOffset),i.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),o}function Au(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[a,l]=Mg(r,o,i);if(Xw(r,a,l),le(l)===0)return t.makeTensorInfo(l,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const p=t.texData.get(r.dataId),f=Y9(p.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,f)}const{isPacked:c}=t.texData.get(r.dataId),h=Qw(r.shape,a,l);if(c||!h){const p=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sZ(l):new tZ(l),f=[a];return t.runWebGLProgram(p,[r],r.dtype,f)}return t.uploadToGPU(r.dataId),rZ(r,a,l,t)}const oZ={kernelName:Vd,backendName:"webgl",kernelFunc:Au};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iZ=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;D(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((S,$)=>S*$),l=gh(r.shape,o,a),c=yh(l.length,o.length),h=xh(r.shape,o,a),p=rb(i,o.length),f=ob(h,i,o.length),g=[],y=ke({inputs:{x:r},backend:t,attrs:{shape:l}}),b=Wn({inputs:{x:y},backend:t,attrs:{perm:c}}),w=ke({inputs:{x:b},backend:t,attrs:{shape:h}}),v=Au({inputs:{x:w},backend:t,attrs:{begin:p,size:f}});return g.push(y),g.push(b),g.push(w),g.forEach(S=>t.disposeIntermediateTensorInfo(S)),v},aZ={kernelName:ed,backendName:"webgl",kernelFunc:iZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,a=t.readSync(r.dataId),l=t.readSync(o.dataId),c=uA(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}const uZ={kernelName:Zf,backendName:"webgl",kernelFunc:lZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cZ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,dZ=`
  return float(int(a.r) & int(b.r));
`;function hZ(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=se().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=se().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||i===1){const l=t.texData.get(s.dataId).values,c=t.texData.get(r.dataId).values,[h,p]=b9(s.shape,r.shape,l,c,s.dtype),f=t.makeTensorInfo(p,s.dtype),g=t.texData.get(f.dataId);return g.values=h,f}let a;return o?a=new Eu(cZ,s.shape,r.shape,!1):a=new pa(dZ,s.shape,r.shape),t.runWebGLProgram(a,[s,r],s.dtype)}const pZ={kernelName:td,backendName:"webgl",kernelFunc:hZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fZ(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),i=t.readSync(r.dataId),a=Ge(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const mZ={kernelName:Jf,backendName:"webgl",kernelFunc:fZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ="return float(a != b);",kA=Nn({opSnippet:gZ,cpuKernelImpl:V9,dtype:"bool"}),yZ={kernelName:Ed,backendName:"webgl",kernelFunc:kA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ah(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return xs({inputs:{x:r.complexTensorInfos.real},backend:t})}const xZ={kernelName:_m,backendName:"webgl",kernelFunc:Ah};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wZ="return float(int(x));";function bZ(n,e){const t=new Or(n.shape,wZ),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return xs({inputs:{x:r},backend:t});const i=qt(r.shape),a=f1({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=vi({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const i=Ah({inputs:{input:r},backend:t}),a=f1({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),a}if(!v1(r.dtype,o)){const i=xs({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId).values,[a,l,c]=v9(i,r.shape,r.dtype,o);return t.makeTensorInfo(a,l,c)}if(o==="int32")return bZ(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",un("bool",1)),l=kA({inputs:{a:r,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const vZ={kernelName:Tl,backendName:"webgl",kernelFunc:f1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AC="return ceil(x);",SZ=nt({opSnippet:AC,packedOpSnippet:AC,cpuKernelImpl:S9}),kZ={kernelName:El,backendName:"webgl",kernelFunc:SZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NZ{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Z(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let a;se().getBool("WEBGL_PACK_CLIP")?a=new CZ(r.shape):a=new NZ(r.shape);const l=[[o],[i]];return t.runWebGLProgram(a,[r],r.dtype,l)}const IZ={kernelName:Rl,backendName:"webgl",kernelFunc:$Z};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TZ{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function EZ(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new TZ(s.shape),i=[DC(s,r.complexTensorInfos.real),DC(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,i,i[0].dtype)}const RZ={kernelName:nd,backendName:"webgl",kernelFunc:EZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AZ{constructor(e){this.outputShape=[],this.outputShape=Pr(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DZ{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Pr(e,t);const s=this.outputShape,r=s.length,o=mt(r),i=Vn("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((b,w)=>`T${w}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let b=1;b<l.length;b++)l[b]=l[b-1]+e[b][t];const c=a[t],h=a.slice(-2),p=a.join();let f=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${h.join()}));
        }`;for(let b=1;b<l.length;b++){const w=l[b-1];f+=`
        if (${c} < ${l[b]}  && ${c} >= ${l[b-1]}) {
          return getChannel(
            getT${b}(${nf(a,c,w)}),
            vec2(${nf(h,c,w)}));
        }`}const g=l.length,y=l[l.length-1];f+=`
        return getChannel(
          getT${g}(${nf(a,c,y)}),
          vec2(${nf(h,c,y)}));`,this.userCode=`
      float getValue(${a.map(b=>"int "+b)}) {
        ${f}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function nf(n,e,t){const s=n.indexOf(e);return n.map((o,i)=>i===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oy(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return xs({inputs:{x:r.complexTensorInfos.imag},backend:t})}const _Z={kernelName:wm,backendName:"webgl",kernelFunc:oy};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nc(n,e,t){const s=n[0].dtype;if(s==="complex64"){const g=n.map(S=>Ah({inputs:{input:S},backend:t})),y=n.map(S=>oy({inputs:{input:S},backend:t})),b=Nc(g,e,t),w=Nc(y,e,t),v=vi({inputs:{real:b,imag:w},backend:t});return g.forEach(S=>t.disposeIntermediateTensorInfo(S)),y.forEach(S=>t.disposeIntermediateTensorInfo(S)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),v}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const g=n.map(N=>{const R=[-1,le(N.shape.slice(e))];return ke({inputs:{x:N},backend:t,attrs:{shape:R}})}),y=g.map(N=>({vals:t.readSync(N.dataId),shape:N.shape})),b=Pr(g.map(N=>N.shape),1),w=g[0].shape[0]===1,v=k9(y,b,s,w),S=Pr(n.map(N=>N.shape),e),$=t.makeTensorInfo(S,s,v);return g.forEach(N=>t.disposeIntermediateTensorInfo(N)),$}const o=n.filter(g=>le(g.shape)>0),i=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const g=i?new Or(n[0].shape,jo):new Xo(n[0].shape,jo);return t.runWebGLProgram(g,n,s)}const a=se().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const g=[];for(let b=0;b<o.length;b+=a){const w=o.slice(b,b+a);g.push(Nc(w,e,t))}const y=Nc(g,e,t);for(const b of g)t.disposeIntermediateTensorInfo(b);return y}if(i){const g=new DZ(o.map(y=>y.shape),e);return t.runWebGLProgram(g,o,s)}const{tensors2D:l,outShape:c}=OZ(o,e,t),h=new AZ(l.map(g=>g.shape)),p=t.runWebGLProgram(h,l,s);l.forEach(g=>t.disposeIntermediateTensorInfo(g));const f=ke({inputs:{x:p},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(p),f}function OZ(n,e,t){const s=Pr(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>ke({inputs:{x:o},attrs:{shape:[-1,le(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Xe(r,e[0].shape)[0],i=e.map(c=>c.shape);tb(i,o);const a=Pr(e.map(c=>c.shape),o);if(le(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(c=>le(c.shape)>0);return l.length===1?xs({inputs:{x:l[0]},backend:t}):Nc(l,o,t)}const FZ={kernelName:sd,backendName:"webgl",kernelFunc:NA};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CA{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,g=e.filterWidth,y=Math.floor(e.inChannels/4)*4,b=e.inChannels%4,w=e.dataFormat==="channelsLast",v=w?1:2,S=w?2:3,$=w?3:1;let N="",T="";s&&(r?N=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?N=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:N=`
          float activation(float x) {
            ${s}
          }
        `,T="result = activation(result);");const R=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${N}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${$}];

        ivec2 xRCCorner =
            ivec2(coords[${v}], coords[${S}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${f}; wR++) {
          int xR = xRCorner + wR * ${h};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${g}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${y}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${w}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${b===1}) {

              if (${w}) {
                dotProd +=
                    getX(batch, xR, xC, ${y}) *
                    getW(wR, wC, ${y}, d2);
              } else {
                dotProd +=
                    getX(batch, ${y}, xR, xC) *
                    getW(wR, wC, ${y}, d2);
              }

            } else if (${b===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${y}, d2),
                getW(wR, wC, ${y} + 1, d2)
              );

              if (${w}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${y}),
                  getX(batch, xR, xC, ${y} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${y}, xR, xC),
                  getX(batch, ${y} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${b===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${y}, d2),
                getW(wR, wC, ${y} + 1, d2),
                getW(wR, wC, ${y} + 2, d2)
              );

              if (${w}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${y}),
                  getX(batch, xR, xC, ${y} + 1),
                  getX(batch, xR, xC, ${y} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${y}, xR, xC),
                  getX(batch, ${y} + 1, xR, xC),
                  getX(batch, ${y} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${R}
        ${T}
        setOutput(result);
      }
    `}}class LZ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.filterDepth,f=e.filterHeight,g=e.filterWidth,y=Math.floor(e.inChannels/4)*4,b=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${g}; wC++) {
              int xC = xCCorner + wC * ${h};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${y}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${b===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${y}) *
                  getW(wF, wR, wC, ${y}, d2);
              } else if (${b===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${y}),
                  getX(batch, xF, xR, xC, ${y} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${y}, d2),
                  getW(wF, wR, wC, ${y} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${b===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${y}),
                  getX(batch, xF, xR, xC, ${y} + 1),
                  getX(batch, xF, xR, xC, ${y} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${y}, d2),
                  getW(wF, wR, wC, ${y} + 1, d2),
                  getW(wF, wR, wC, ${y} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $A{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Dn(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,p=h;let f=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let w=0;w<h;w++)f+=`
           vec4 xTexelC${w*2};
           int xTexelC${w*2}Ready;
           vec4 xTexelC${w*2+1};
           int xTexelC${w*2+1}Ready;
           vec4 xC${w};`;f+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let w=0;w<h;w++)f+=`
           xTexelC${w*2} = vec4(0.0);
           xTexelC${w*2}Ready = 0;
           xTexelC${w*2+1} = vec4(0.0);
           xTexelC${w*2+1}Ready = 0;
           xC${w} = vec4(0.0);`;f+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let w=0;w<(p+1)/2;w++){const v=w*2;if(f+=`
           xC = xCCorner + ${v*l};
           `,a===1){if(v<h&&(i%2===1?(f+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }
               `,l===1&&v>0?f+=`
                 xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                 `:f+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                   } else {
                     xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                   }
                   `):f+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 xC${v} = xTexelC${v};
                 `,v+1<h)){const S=i%2===0?jf(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(f+=`
                   xCOffset = xC + imod(pads[1], 2) + ${S};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                     xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${v+1}.zw = vec2(0.0);
                     }
                     xTexelC${v+1}Ready = 1;
                   }
                   `,l>1?f+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                     } else {
                      xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                     }
                     `:f+=`
                     xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                     `):S===1?f+=`
                     xC${v+1} = xTexelC${v};
                     `:f+=`
                     xCOffset = xC + ${S};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                       xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${v+1}.zw = vec2(0.0);
                       }
                       xTexelC${v+1}Ready = 1;
                     }

                     xC${v+1} = xTexelC${v+1};
                     `}}else v<h&&(i%2===1?(f+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                   xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${v+1}.zw = vec2(0.0);
                   }
                   xTexelC${v+1}Ready = 1;
                 }

                 xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
               `,v+1<h&&(f+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                 `)):(f+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                   xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v+1}.zw = vec2(0.);
                   }
                   xTexelC${v+1}Ready = 1;
                 }

                 xC${v} = vec4(
                   xTexelC${v}.xy, xTexelC${v+1}.xy);
               `,v+1<h&&(f+=`
                   xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                 `)));v<h&&(f+=`
             wTexel = getW(r, ${v}, d1, d2);
             dotProd += xC${v}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${v}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,v+1<h&&(f+=`
               wTexel = getW(r, ${v+1}, d1, d2);
               dotProd += xC${v+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${v+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}f+=`
     }
   `,f+=`
     }
   `,f+=`
     }
   `;let g="",y="";s&&(r?g=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?g=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:g=`vec4 activation(vec4 x) {
           ${s}
         }`,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${g}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${f}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${b}
         ${y}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PZ{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Dn(this.outputShape.length);const{dataFormat:s}=t,r=Gn(),o=s==="channelsLast",i=o?1:2,a=o?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let h=0;h<=1;h++)for(let p=0;p<=1;p++)c+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${h};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${h*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${h*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function IA({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const l=n.shape,c=s.texData.get(n.dataId),h=t.inChannels,p=l[0]*l[1]*l[2],f=t.outChannels,g=t.dataFormat==="channelsLast",y=!1,b=!1;let w;const v=[];if(o!=null){const N=Uf(o.shape,g);N!=null&&(o=ke({inputs:{x:o},backend:s,attrs:{shape:N}}),v.push(o))}if(r!=null){const N=Uf(r.shape,g);N!=null&&(r=ke({inputs:{x:r},backend:s,attrs:{shape:N}}),v.push(r))}if(!((p===1||f===1)&&h>wA)&&c.isPacked&&g&&c.texture!=null&&l[2]%2!==0&&Qe(c.shape.slice(-3),l.slice(-3))){const N=l[0]*l[1]*(l[2]+1),T={dataId:n.dataId,shape:[1,N,t.inChannels],dtype:n.dtype},R=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,D(Vf(c.shape,T.shape),()=>`packed reshape ${c.shape} to ${T.shape} isn't free`);const L=ke({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});v.push(L);const P=Wf({a:T,b:L,backend:s,transposeA:y,transposeB:b,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),O=s.texData.get(P.dataId);D(O.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=R,O.shape=t.outShape,w=xs({inputs:{x:P},backend:s}),w.shape=t.outShape,v.push(P)}else{const N=t.outHeight*t.outWidth,T=ke({inputs:{x:n},backend:s,attrs:{shape:g?[t.batchSize,N,t.inChannels]:[t.batchSize,t.inChannels,N]}}),R=ke({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),L=Wf({a:g?T:R,b:g?R:T,transposeA:!g,transposeB:b,backend:s,bias:r,activation:a,preluActivationWeights:o,leakyreluAlpha:i});w=ke({inputs:{x:L},backend:s,attrs:{shape:t.outShape}}),v.push(T),v.push(R),v.push(L)}for(const N of v)s.disposeIntermediateTensorInfo(N);return w}function TA({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:h,outWidth:p,outHeight:f,dataFormat:g}=t,y=g==="channelsLast",b=l*c*h,w=f*p,v=[t.batchSize,b,w],S=!0,$=!1,N=[];if(o!=null){const U=Uf(o.shape,y);U!=null&&(o=ke({inputs:{x:o},backend:s,attrs:{shape:U}}),N.push(o))}if(r!=null){const U=Uf(r.shape,y);U!=null&&(r=ke({inputs:{x:r},backend:s,attrs:{shape:U}}),N.push(r))}const T=ke({inputs:{x:e},backend:s,attrs:{shape:[1,b,le(e.shape)/b]}});N.push(T);const R=new PZ(v,t),L=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],P=s.runWebGLProgram(R,[n],"float32",L),O=ke({inputs:{x:P},backend:s,attrs:{shape:v}});N.push(P),N.push(O);const F=r!=null,E=o!=null,W=a==="leakyrelu",X=a?Gc(a,!0):null,ee=new xA(y?O.shape:T.shape,y?T.shape:O.shape,y?[t.batchSize,w,t.outChannels]:[t.batchSize,t.outChannels,w],S,$,F,X,E,W),Q=y?[O,T]:[T,O];if(r&&Q.push(r),E&&Q.push(o),W){const U=s.makeTensorInfo([],"float32",xo(i,"float32"));Q.push(U),N.push(U)}const te=s.runWebGLProgram(ee,Q,"float32"),oe=ke({inputs:{x:te},backend:s,attrs:{shape:t.outShape}});N.push(te);for(const U of N)s.disposeIntermediateTensorInfo(U);return oe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dataFormat:l,dilations:c,dimRoundingMode:h}=s,p=bo(l),f=dn(r.shape,o.shape,i,c,a,h,!1,p);let g;if(f.filterHeight===1&&f.filterWidth===1&&f.dilationHeight===1&&f.dilationWidth===1&&f.strideHeight===1&&f.strideWidth===1&&(f.padInfo.type==="SAME"||f.padInfo.type==="VALID"))g=IA({x:r,filter:o,convInfo:f,backend:t});else if(f.strideWidth<=2&&p==="channelsLast"&&se().getBool("WEBGL_EXP_CONV")){const b=new $A(f),w=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]];g=t.runWebGLProgram(b,[r,o],"float32",w)}else if(se().getBool("WEBGL_CONV_IM2COL"))g=TA({x:r,filter:o,convInfo:f,backend:t});else{const b=new CA(f);g=t.runWebGLProgram(b,[r,o],"float32")}const y=ke({inputs:{x:g},backend:t,attrs:{shape:f.outShape}});return t.disposeIntermediateTensorInfo(g),y}const MZ={kernelName:rd,backendName:"webgl",kernelFunc:zZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BZ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class VZ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,c=i?1:2,h=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${h}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class WZ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class UZ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,c=s-1-e.padInfo.top,h=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:h}=s,p=bo(l),f=dn(r.shape,h,i,1,a,c,!1,p),g=new BZ(f);return t.runWebGLProgram(g,[r,o],"float32")}const HZ={kernelName:tm,backendName:"webgl",kernelFunc:GZ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jZ{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Dn(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:a,pad:l,dataFormat:c,dimRoundingMode:h}=s,p=bo(c),f=dn(i,o.shape,a,1,l,h,!1,p);if(se().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){const g=[[f.strideHeight,f.strideWidth]],y=new jZ(f);return t.runWebGLProgram(y,[r,o],"float32",g)}else{const g=new VZ(f);return t.runWebGLProgram(g,[r,o],"float32")}}const KZ={kernelName:od,backendName:"webgl",kernelFunc:qZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,c=pi(r.shape,o.shape,i,l,a),h=new LZ(c);return t.runWebGLProgram(h,[r,o],"float32")}const YZ={kernelName:id,backendName:"webgl",kernelFunc:XZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:a,filterShape:l}=s,c=pi(r.shape,l,i,1,a),h=new WZ(c);return t.runWebGLProgram(h,[r,o],"float32")}const ZZ={kernelName:nm,backendName:"webgl",kernelFunc:QZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JZ(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:a,inputShape:l}=s,c=pi(l,o.shape,a,1,i),h=new UZ(c);return t.runWebGLProgram(h,[r,o],"float32")}const eJ={kernelName:sm,backendName:"webgl",kernelFunc:JZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ=Ru+`
  return cos(x);
`,nJ=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${$a}
  return result;
`,sJ=nt({opSnippet:tJ,packedOpSnippet:nJ}),rJ={kernelName:Al,backendName:"webgl",kernelFunc:sJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,iJ=nt({opSnippet:oJ}),aJ={kernelName:Dl,backendName:"webgl",kernelFunc:iJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lJ{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,l,c]=e,[h]=t,[p,f]=s;this.outputShape=[h,p,f,c];const g=r==="bilinear"?1:0,[y,b]=[`${a-1}.0`,`${l-1}.0`],[w,v,S]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${y} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${y}`],[$,N,T]=f>1?[`${(l-1)/(f-1)}`,"(x2-x1) * width_ratio",`x1*${b} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${b}`];this.userCode=`
      const float height_ratio = float(${w});
      const float width_ratio = float(${$});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${v};
        float width_scale = ${N};

        float in_y = ${S};
        if( in_y < 0.0 || in_y > ${y} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${T};
        if( in_x < 0.0 || in_x > ${b} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${g} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uJ=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:a,method:l,extrapolationValue:c}=s,h=new lJ(r.shape,o.shape,a,l,c);return t.runWebGLProgram(h,[r,o,i],"float32")},cJ={kernelName:om,backendName:"webgl",kernelFunc:uJ};var jc;(function(n){n.Prod="*",n.Sum="+"})(jc||(jc={}));class _C{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===jc.Prod?"1.0":"0.0",a=s?i:`getX(${OC(o,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",h="";s?(c=r?`end != ${l-1}`:"end != 0",h=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${l}`:"end >= pow2",h=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${mt(o)} coords = getOutputCoords();
        int end = ${FC(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${h};
          ${FC(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${OC(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function OC(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function FC(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(n,e,t,s,r,o){const i=e.shape.length,a=Ot([s],i);let l=e;a!=null&&(l=Wn({inputs:{x:e},backend:t,attrs:{perm:a}}));const c=Vt(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const h=l.shape[c];let p=xs({inputs:{x:l},backend:t});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){const g=new _C(n,l.shape,!1,o),y=[[f]],b=p;p=t.runWebGLProgram(g,[p],p.dtype,y),t.disposeIntermediateTensorInfo(b)}if(r){const f=new _C(n,l.shape,r,o),g=p;p=t.runWebGLProgram(f,[p],p.dtype),t.disposeIntermediateTensorInfo(g)}if(a!=null){const f=fi(a),g=Wn({inputs:{x:p},backend:t,attrs:{perm:f}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(l),g}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return EA(jc.Prod,r,t,o,i,a)}const hJ={kernelName:rm,backendName:"webgl",kernelFunc:dJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:a}=s;return EA(jc.Sum,r,t,o,i,a)}const fJ={kernelName:ad,backendName:"webgl",kernelFunc:pJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:a}=s;if(r.shape.length===1){const l=t.readSync(r.dataId),c=t.readSync(o.dataId),h=uA(l,c,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,h)}else if(r.shape.length===2){const l=t.bufferSync(r),c=t.bufferSync(o),h=w9(l,c,i,a);return t.makeTensorInfo(h.shape,o.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const gJ={kernelName:im,backendName:"webgl",kernelFunc:mJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yJ{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s,a=r.shape[0],l=i==="NHWC"?r.shape[1]:r.shape[2],c=i==="NHWC"?r.shape[2]:r.shape[3],h=i==="NHWC"?r.shape[3]:r.shape[1],p=l*o,f=c*o,g=h/(o*o),y=i==="NHWC"?[a,p,f,g]:[a,g,p,f],b=new yJ(y,o,i);return t.runWebGLProgram(b,[r],r.dtype)}const wJ={kernelName:am,backendName:"webgl",kernelFunc:xJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RA{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Dn(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let c="",h="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,h="result = activation(result);");const p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AA{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Dn(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=p;let g=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let v=0;v<p;v++)g+=`
          vec4 xTexelC${v*2};
          int xTexelC${v*2}Ready;
          vec4 xTexelC${v*2+1};
          int xTexelC${v*2+1}Ready;
          vec4 xC${v};`;g+=`
    for (int r = 0; r < ${h}; r++) {
      `;for(let v=0;v<p;v++)g+=`
          xTexelC${v*2} = vec4(0.0);
          xTexelC${v*2}Ready = 0;
          xTexelC${v*2+1} = vec4(0.0);
          xTexelC${v*2+1}Ready = 0;
          xC${v} = vec4(0.0);`;g+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let v=0;v<(f+1)/2;v++){const S=v*2;if(g+=`
          xC = xCCorner + ${S*c};
          `,l===1){if(S<p&&(a%2===1?(g+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                  xTexelC${S} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${S}.zw = vec2(0.0);
                  }
                  xTexelC${S}Ready = 1;
                }
              `,c===1&&S>0?g+=`
                xC${S} = vec4(xTexelC${S-2}.zw, xTexelC${S}.xy);
                `:g+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${S} = vec4(previous.zw, xTexelC${S}.xy);
                  } else {
                    xC${S} = vec4(0.0, 0.0, xTexelC${S}.xy);
                  }
                  `):g+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                  xTexelC${S} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${S}.zw = vec2(0.0);
                  }
                  xTexelC${S}Ready = 1;
                }

                xC${S} = xTexelC${S};
                `,S+1<p)){const $=a%2===0?jf(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(g+=`
                  xCOffset = xC + imod(pads[1], 2) + ${$};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                    xTexelC${S+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${S+1}.zw = vec2(0.0);
                    }
                    xTexelC${S+1}Ready = 1;
                  }
                  `,c>1?g+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${S+1} = vec4(previous.zw, xTexelC${S+1}.xy);
                    } else {
                     xC${S+1} = vec4(0.0, 0.0, xTexelC${S+1}.xy);
                    }
                    `:g+=`
                    xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.xy);
                    `):$===1?g+=`
                    xC${S+1} = xTexelC${S};
                    `:g+=`
                    xCOffset = xC + ${$};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                      xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${S+1}.zw = vec2(0.0);
                      }
                      xTexelC${S+1}Ready = 1;
                    }

                    xC${S+1} = xTexelC${S+1};
                    `}}else S<p&&(a%2===1?(g+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                  xTexelC${S} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${S}.zw = vec2(0.0);
                  }
                  xTexelC${S}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${S+1}Ready == 0) {
                  xTexelC${S+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${S+1}.zw = vec2(0.0);
                  }
                  xTexelC${S+1}Ready = 1;
                }

                xC${S} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
              `,S+1<p&&(g+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${S+1} = vec4(xTexelC${S+1}.xy, final.xy);
                `)):(g+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                  xTexelC${S} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${S}.zw = vec2(0.0);
                  }
                  xTexelC${S}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                  xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${S+1}.zw = vec2(0.);
                  }
                  xTexelC${S+1}Ready = 1;
                }

                xC${S} = vec4(
                  xTexelC${S}.xy, xTexelC${S+1}.xy);
              `,S+1<p&&(g+=`
                  xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
                `)));S<p&&(g+=`
            wTexel = getW(r, ${S}, d1, q);
            dotProd += xC${S} * vec4(wTexel.xz, wTexel.xz);
          `,S+1<p&&(g+=`
              wTexel = getW(r, ${S+1}, d1, q);
              dotProd += xC${S+1} * vec4(wTexel.xz, wTexel.xz);
            `))}g+=`
    }
  `,g+=`
      }
    `;let y="",b="";s&&(r?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:y=`vec4 activation(vec4 x) {
          ${s}
        }`,b="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${g}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${w}
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l,dimRoundingMode:c}=s;let h=l;h==null&&(h=[1,1]),D(vn(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const p=dn(r.shape,o.shape,i,h,a,c,!0);let f;se().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?f=new AA(p):f=new RA(p);const g=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return t.runWebGLProgram(f,[r,o],"float32",g)}const vJ={kernelName:ld,backendName:"webgl",kernelFunc:bJ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SJ{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class kJ{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,filterShape:h}=s,p=dn(r.shape,h,i,a,l,c,!0),f=new SJ(p);return t.runWebGLProgram(f,[r,o],"float32")}const CJ={kernelName:lm,backendName:"webgl",kernelFunc:NJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $J(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:a,pad:l,dimRoundingMode:c,inputShape:h}=s,p=dn(h,o.shape,i,a,l,c,!0),f=new kJ(p);return t.runWebGLProgram(f,[r,o],"float32")}const IJ={kernelName:um,backendName:"webgl",kernelFunc:$J};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TJ{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EJ(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=le(s.shape),i=ke({inputs:{x:s},backend:t,attrs:{shape:[o]}}),a=new TJ(o),l=t.runWebGLProgram(a,[i],i.dtype),c=ke({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),c}const RJ={kernelName:cm,backendName:"webgl",kernelFunc:EJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AJ{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:h}=e,{top:p,left:f}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${p}, ${f});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${h};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DJ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:a,dilations:l}=s,c=Zd(r.shape,o.shape,i,a,"NHWC",l);let h;const p=new AJ(c);h=t.runWebGLProgram(p,[r,o],"float32");const f=ke({inputs:{x:h},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(h),f}const _J={kernelName:ud,backendName:"webgl",kernelFunc:DJ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OJ(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:i,summedDims:a,idDims:l}=pb(r,o.length);mb(i.length,l,o);const{path:c,steps:h}=gb(a,l),p=h.length;let f=null,g=i.length;const y=[];for(let b=0;b<p;++b){for(const w of h[b]){const{permutationIndices:v,expandDims:S}=fb(g,l[w]);let $;yb(v)?$=o[w]:($=Wn({inputs:{x:o[w]},backend:t,attrs:{perm:v}}),y.push($));const N=$.shape.slice();for(let T=0;T<S.length;++T)N.splice(S[T],0,1);Qe($.shape,N)||($=ke({inputs:{x:$},backend:t,attrs:{shape:N}}),y.push($)),f===null?f=$:(f=iv({inputs:{a:$,b:f},backend:t}),y.push(f))}b<p-1&&(c[b]>=0&&(f=ry({inputs:{x:f},backend:t,attrs:{axis:c[b]-(i.length-g),keepDims:!1}}),y.push(f)),g--)}for(const b of y)b!==f&&t.disposeIntermediateTensorInfo(b);return f}const FJ={kernelName:hm,backendName:"webgl",kernelFunc:OJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",PJ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,zJ=nt({opSnippet:LJ,packedOpSnippet:PJ}),MJ={kernelName:Ol,backendName:"webgl",kernelFunc:zJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ="return (b >= 0.0) ? a : a * (b + 1.0);",VJ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,WJ=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Eu(VJ,s.shape,r.shape):new pa(BJ,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},UJ={kernelName:pm,backendName:"webgl",kernelFunc:WJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GJ=`
  return vec4(equal(a, b));
`,HJ="return float(a == b);",jJ=Nn({opSnippet:HJ,packedOpSnippet:GJ,dtype:"bool",cpuKernelImpl:N9}),qJ={kernelName:cd,backendName:"webgl",kernelFunc:jJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KJ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ib};
  float a1 = ${ab};
  float a2 = ${lb};
  float a3 = ${ub};
  float a4 = ${cb};
  float a5 = ${db};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,XJ=nt({opSnippet:KJ}),YJ={kernelName:Fl,backendName:"webgl",kernelFunc:XJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QJ=Ru+`
  return exp(x);
`,ZJ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,DA=nt({opSnippet:QJ,packedOpSnippet:ZJ,cpuKernelImpl:C9,dtype:"float32"}),JJ={kernelName:Ll,backendName:"webgl",kernelFunc:DA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let l=r;return r<0&&(D(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+r+1),a.splice(l,0,1),ke({inputs:{x:o},backend:s,attrs:{shape:a}})}const eee={kernelName:dd,backendName:"webgl",kernelFunc:m1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC="return exp(x) - 1.0;",tee=nt({opSnippet:LC,packedOpSnippet:LC,cpuKernelImpl:$9}),nee={kernelName:Pl,backendName:"webgl",kernelFunc:tee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PC{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e,t){const s=t.texData.get(n.dataId),r=le(n.shape),o=n.shape[n.shape.length-1],i=r/o,a=ke({inputs:{x:n},backend:t,attrs:{shape:[i,o]}}),l=a.shape,c=new PC("real",l,e),h=new PC("imag",l,e),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],f=t.runWebGLProgram(c,p,"float32"),g=t.runWebGLProgram(h,p,"float32"),y=vi({inputs:{real:f,imag:g},backend:t});t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g);const b=ke({inputs:{x:y},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(y),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function see(n){const{inputs:e,backend:t}=n,{input:s}=e;return _A(s,!1,t)}const ree={kernelName:fm,backendName:"webgl",kernelFunc:see};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oee{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dh(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||ma(r),o==="string"){const i=Pt(o,le(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new oee(s,r),a=[[r]];return e.runWebGLProgram(i,[],o,a)}}const iee={kernelName:mm,backendName:"webgl",kernelFunc:Dh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aee{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lee={kernelName:gm,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new aee(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zC="return floor(x);",uee=nt({opSnippet:zC,packedOpSnippet:zC,cpuKernelImpl:I9}),cee={kernelName:zl,backendName:"webgl",kernelFunc:uee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dee=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,hee=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,pee=Nn({opSnippet:dee,packedOpSnippet:hee,dtype:"int32"}),fee={kernelName:Ml,backendName:"webgl",kernelFunc:pee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mee{constructor(e){this.variableNames=["A"];const t=Gn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gee{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Gn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yee={kernelName:bf,backendName:"webgl",kernelFunc:xee};let Ja,v0=se().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function xee(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,c]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[c,l],p=[c,l,o];if(a||i){const b=se().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ja==null||b!==v0)&&(v0=b,Ja=document.createElement("canvas").getContext("2d",{willReadFrequently:v0})),Ja.canvas.width=l,Ja.canvas.height=c,Ja.drawImage(r,0,0,l,c),r=Ja.canvas}const f=t.makeTensorInfo(h,"int32");t.texData.get(f.dataId).usage=Es.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(f.dataId),r);const g=se().getBool("WEBGL_PACK")?new gee(p):new mee(p),y=t.runWebGLProgram(g,[f],"int32");return t.disposeData(f.dataId),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:f,activation:g,leakyreluAlpha:y}=s,b=bo(h),w=dn(r.shape,o.shape,l,p,c,f,!1,b);let v;const S=[],$=i!=null,N=a!=null,T=g==="leakyrelu",R=()=>{const P=[r,o],O=(F,E)=>{if(E==="NCHW"&&F.shape.length===1&&F.shape[0]!==1){const W=ke({inputs:{x:F},backend:t,attrs:{shape:[F.shape[0],1,1]}});return S.push(W),W}return F};if($&&P.push(O(i,h)),N&&P.push(O(a,h)),T){const F=t.makeTensorInfo([],"float32",xo(y,"float32"));P.push(F),S.push(F)}return P};if(w.filterHeight===1&&w.filterWidth===1&&w.dilationHeight===1&&w.dilationWidth===1&&w.strideHeight===1&&w.strideWidth===1&&(w.padInfo.type==="SAME"||w.padInfo.type==="VALID"))v=IA({x:r,filter:o,convInfo:w,backend:t,bias:i,activation:g,preluActivationWeights:a,leakyreluAlpha:y});else if(w.strideWidth<=2&&b==="channelsLast"&&se().getBool("WEBGL_EXP_CONV")){const P=g?Gc(g,!0):null,O=new $A(w,$,P,N,T),F=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],E=R();v=t.runWebGLProgram(O,E,"float32",F)}else if(se().getBool("WEBGL_CONV_IM2COL"))v=TA({x:r,filter:o,convInfo:w,backend:t,bias:i,activation:g,preluActivationWeights:a,leakyreluAlpha:y});else{const P=g?Gc(g,!1):null,O=new CA(w,$,P,N,T),F=R();v=t.runWebGLProgram(O,F,"float32")}const L=ke({inputs:{x:v},backend:t,attrs:{shape:w.outShape}});return S.push(v),S.forEach(P=>t.disposeIntermediateTensorInfo(P)),L}const bee={kernelName:Ec,backendName:"webgl",kernelFunc:wee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vee(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:a}=e,{strides:l,pad:c,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:g}=s,y=[];let b=h;b==null&&(b=[1,1]),D(vn(l,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${b}'`);const w=dn(r.shape,o.shape,l,b,c,p,!0),v=se().getBool("WEBGL_PACK_DEPTHWISECONV")&&w.strideWidth<=2&&w.outChannels/w.inChannels===1,S=f?Gc(f,v):null,$=[r,o],N=i!=null,T=a!=null,R=f==="leakyrelu";if(N&&$.push(i),T&&$.push(a),R){const F=t.makeTensorInfo([],"float32",xo(g,"float32"));$.push(F),y.push(F)}let L;v?L=new AA(w,N,S,T,R):L=new RA(w,N,S,T,R);const P=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],O=t.runWebGLProgram(L,$,"float32",P);return y.forEach(F=>t.disposeIntermediateTensorInfo(F)),O}const See={kernelName:Rc,backendName:"webgl",kernelFunc:vee};class kee{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=mt(s.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nee(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],a=le(s.shape),[l,c,h,p]=zg(s,r),f=ke({inputs:{x:r},backend:t,attrs:{shape:[c,i]}}),g=ke({inputs:{x:s},backend:t,attrs:{shape:[le(s.shape)/h,h]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const v=t.readSync(r.dataId),S=t.bufferSync(s),$=T9(v,S,s.dtype,c,i,h,p,s.shape,a);return t.makeTensorInfo(l,s.dtype,$.values)}const y=new kee(i,p,[c,h],s.shape),b=t.runWebGLProgram(y,[g,f],g.dtype),w=ke({inputs:{x:b},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(b),w}const Cee={kernelName:ym,backendName:"webgl",kernelFunc:Nee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ee{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=mt(this.rank),r=Iee(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function Iee(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:a}=s,l=Xe(i,r.shape)[0];if(se().get("DEBUG")){const S=t.readSync(o.dataId),$=r.shape[l];for(let N=0;N<S.length;++N){const T=S[N];D(T<=$-1&&T>=0,()=>`GatherV2: the index value ${T} is not in [0, ${$-1}]`)}}const c=wb(r,o,l,a),h=le(o.shape),p=[],f=ke({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),g=ke({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,h/c.batchSize]}});p.push(f),p.push(g);const y=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const S=t.bufferSync(g),$=t.bufferSync(f),N=E9($,S,y);return p.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.makeTensorInfo(c.outputShape,N.dtype,N.values)}const b=new $ee(f.shape,y),w=t.runWebGLProgram(b,[f,g],f.dtype);p.push(w);const v=ke({inputs:{x:w},backend:t,attrs:{shape:c.outputShape}});return p.forEach(S=>t.disposeIntermediateTensorInfo(S)),v}const Tee={kernelName:pd,backendName:"webgl",kernelFunc:OA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eee="return float(a > b);",Ree=`
  return vec4(greaterThan(a, b));
`,Aee=Nn({opSnippet:Eee,packedOpSnippet:Ree,cpuKernelImpl:R9,dtype:"bool"}),Dee={kernelName:fd,backendName:"webgl",kernelFunc:Aee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ee="return float(a >= b);",Oee=`
  return vec4(greaterThanEqual(a, b));
`,Fee=Nn({opSnippet:_ee,packedOpSnippet:Oee,dtype:"bool",cpuKernelImpl:A9}),Lee={kernelName:Bl,backendName:"webgl",kernelFunc:Fee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pee(n){const{inputs:e,backend:t}=n,{input:s}=e;return _A(s,!0,t)}const zee={kernelName:xm,backendName:"webgl",kernelFunc:Pee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mee="return float(!isnan(x) && !isinf(x));",Bee=nt({opSnippet:Mee,dtype:"bool"}),Vee={kernelName:Wl,backendName:"webgl",kernelFunc:Bee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wee="return float(isinf(x));",Uee=nt({opSnippet:Wee,dtype:"bool"}),Gee={kernelName:Ul,backendName:"webgl",kernelFunc:Uee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hee="return float(isnan(x));",jee=nt({opSnippet:Hee,dtype:"bool"}),qee={kernelName:Gl,backendName:"webgl",kernelFunc:jee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kee="return float(a < b);",Xee=`
  return vec4(lessThan(a, b));
`,Yee=Nn({opSnippet:Kee,packedOpSnippet:Xee,cpuKernelImpl:D9,dtype:"bool"}),Qee={kernelName:gd,backendName:"webgl",kernelFunc:Yee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zee="return float(a <= b);",Jee=`
  return vec4(lessThanEqual(a, b));
`,ete=Nn({opSnippet:Zee,packedOpSnippet:Jee,cpuKernelImpl:_9,dtype:"bool"}),tte={kernelName:yd,backendName:"webgl",kernelFunc:ete};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nte(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=O9(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const ste={kernelName:bm,backendName:"webgl",kernelFunc:nte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rte=Ru+`
  return x < 0.0 ? 0./0. : log(x);
`,ote=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,ite=nt({opSnippet:rte,packedOpSnippet:ote,cpuKernelImpl:F9}),ate={kernelName:Hl,backendName:"webgl",kernelFunc:ite};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lte=Ru+`
  return log(1.0 + x);
`,ute=nt({opSnippet:lte}),cte={kernelName:jl,backendName:"webgl",kernelFunc:ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dte="return float(a >= 1.0 && b >= 1.0);",hte=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,pte=Nn({opSnippet:dte,packedOpSnippet:hte,dtype:"bool"}),fte={kernelName:xd,backendName:"webgl",kernelFunc:pte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mte="return float(!(x >= 1.0));",gte=nt({opSnippet:mte}),yte={kernelName:wd,backendName:"webgl",kernelFunc:gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xte="return float(a >= 1.0 || b >= 1.0);",wte=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,bte=Nn({opSnippet:xte,packedOpSnippet:wte,dtype:"bool"}),vte={kernelName:bd,backendName:"webgl",kernelFunc:bte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ste{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${c})`:o===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kte{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${r}) * sum`;o===.5?l=`inversesqrt(${c})`:o===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nte=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:a,beta:l}=s,c=se().getBool("WEBGL_PACK_NORMALIZATION")?new kte(r.shape,o,i,a,l):new Ste(r.shape,o,i,a,l);return t.runWebGLProgram(c,[r],r.dtype)},Cte={kernelName:vd,backendName:"webgl",kernelFunc:Nte};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $te{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ite=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:a,bias:l,alpha:c,beta:h}=s,p=new $te(r.shape,a,l,c,h);return t.runWebGLProgram(p,[r,o,i],r.dtype)},Tte={kernelName:vm,backendName:"webgl",kernelFunc:Ite};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ete(n,e,t,s){const r=le(e),i=le(n.shape)/r,a=ke({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=Ia(a,n.dtype,"max",s),c=ke({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,a=r.shape.length,l=Xe(o,r.shape);let c=l;const h=Ot(c,a),p=h!=null,f=t.shouldExecuteOnCPU([r]);let g=r;if(p){if(f){const $=t.texData.get(g.dataId).values,N=new Array(a);for(let L=0;L<N.length;L++)N[L]=r.shape[h[L]];const T=rv($,r.shape,r.dtype,h,N);g=t.makeTensorInfo(N,r.dtype);const R=t.texData.get(g.dataId);R.values=T}else g=sy(r,h,t);c=Vt(c.length,a)}Sn("max",c,a);const[y,b]=hn(g.shape,c);let w=y;i&&(w=Bt(y,l));let v;if(f){const $=t.texData.get(g.dataId).values,N=L9($,le(b),w,r.dtype);v=t.makeTensorInfo(w,r.dtype);const T=t.texData.get(v.dataId);T.values=N}else v=Ete(g,b,w,t);return p&&t.disposeIntermediateTensorInfo(g),v}const Rte={kernelName:Sd,backendName:"webgl",kernelFunc:FA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ate=ov+`
  return max(a, b);
`,Dte=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+$a+`
  return result;
`,_te=Nn({opSnippet:Ate,packedOpSnippet:Dte,cpuKernelImpl:P9}),Ote={kernelName:ql,backendName:"webgl",kernelFunc:_te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Eh(r,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:l}=s,c=1;D(vn(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=Qs(r.shape,o,i,c,a,l);if(h.filterWidth===1&&h.filterHeight===1&&Qe(h.inShape,h.outShape))return xs({inputs:{x:r},backend:t});const p=new Hc(h,"max",!1);return t.runWebGLProgram(p,[r],r.dtype)}const Lte={kernelName:kd,backendName:"webgl",kernelFunc:Fte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:a,dataFormat:l,dimRoundingMode:c}=s,h=[1,1,1],p=wo(r.shape,o,i,h,a,c,l),f=new av(p,"max",!1);return t.runWebGLProgram(f,[r],r.dtype)}const zte={kernelName:Nd,backendName:"webgl",kernelFunc:Pte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mte{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,l=i-1-e.padInfo.left,c=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Bte{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=c-1-e.padInfo.top,g=h-1-e.padInfo.left,y=l*c*h-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${f}, ${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${y} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${h} +
                  wR * ${h} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vte(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:a,strides:l,pad:c,dimRoundingMode:h}=s,p=[1,1,1],f=wo(i.shape,a,l,p,c,h),g=new av(f,"max",!0),y=t.runWebGLProgram(g,[i],i.dtype),b=new Bte(f),w=t.runWebGLProgram(b,[r,y],i.dtype);return t.disposeIntermediateTensorInfo(y),w}const Wte={kernelName:km,backendName:"webgl",kernelFunc:Vte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ute(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,a=o;Eh([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:p}=s,f=Qs(a.shape,l,c,1,h,p),g=!0,y=new Hc(f,"max",g),b=t.runWebGLProgram(y,[a],a.dtype),w=new Mte(f),v=t.runWebGLProgram(w,[r,b],a.dtype);return t.disposeIntermediateTensorInfo(b),v}const Gte={kernelName:Sm,backendName:"webgl",kernelFunc:Ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hte(n,e,t,s){let r=new Hc(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Hc(t,"max",!0,!0,e);const i=s.runWebGLProgram(r,[n],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jte={kernelName:Nm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:a}=e,l=t;D(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];D(vn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=Qs(s.shape,r,o,c,i),[p,f]=Hte(s,a,h,l);return[p,f]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qte(n,e,t,s){const r=le(e),i=le(n.shape)/r,a=ke({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),l=Ia(a,"float32","mean",s),c=ke({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kte={kernelName:Cd,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,i=t,a=s.shape.length,l=Xe(o,s.shape);let c=l;const h=Ot(c,a),p=h!=null,f=i.shouldExecuteOnCPU([s]),g=[];let y=s;if(p){if(f){const N=i.texData.get(y.dataId).values,T=new Array(a);for(let P=0;P<T.length;P++)T[P]=s.shape[h[P]];const R=rv(N,s.shape,s.dtype,h,T);y=i.makeTensorInfo(T,s.dtype);const L=i.texData.get(y.dataId);L.values=R}else y=sy(s,h,i);g.push(y),c=Vt(c.length,a)}Sn("sum",c,a);const[b,w]=hn(y.shape,c);let v=b;r&&(v=Bt(b,l));const S=qte(y,w,v,i);for(const $ of g)i.disposeIntermediateTensorInfo($);return S}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xte(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=Xe(o,r.shape);let c=l;const h=Ot(c,a);let p=r;h!=null&&(p=Wn({inputs:{x:r},backend:t,attrs:{perm:h}}),c=Vt(c.length,r.shape.length)),Sn("min",c,a);const[f,g]=hn(p.shape,c),y=le(g),b=ke({inputs:{x:p},backend:t,attrs:{shape:[-1,y]}}),w=Ia(b,b.dtype,"min",t);let v;if(i){const S=Bt(f,l);v=ke({inputs:{x:w},backend:t,attrs:{shape:S}})}else v=ke({inputs:{x:w},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(w),h!=null&&t.disposeIntermediateTensorInfo(p),v}const Yte={kernelName:$d,backendName:"webgl",kernelFunc:Xte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qte=ov+`
  return min(a, b);
`,Zte=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+$a+`
  return result;
`,Jte=Nn({opSnippet:Qte,packedOpSnippet:Zte,cpuKernelImpl:z9}),ene={kernelName:Kl,backendName:"webgl",kernelFunc:Jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tne{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((h,p)=>h[0]+e[p]+h[1]);const r=e.length,o=mt(r),i=t.map(h=>h[0]).join(","),a=t.map((h,p)=>h[0]+e[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nne{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((y,b)=>y[0]+e[b]+y[1]);const r=e.length,o=mt(r),i=t.map(y=>y[0]).join(","),a=t.map((y,b)=>y[0]+e[b]).join(","),l=Vn("rc",r),c=Vn("source",r),h=`${l[r-1]} < ${this.outputShape[r-1]}`,p=r===1?"source":`vec2(${c.slice(-2).join()})`,f=s==="reflect"?0:1;let g="";if(r===1){const y=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${f};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${f};
        }
        source -= start;
      `;g=`
        ${o} rc = outputLoc;
        ${y}
        result[0] = getChannel(getX(${c.join()}), ${p});
        ${l[r-1]} += 1;
        if(${h}) {
          ${y}
          result[1] = getChannel(getX(${c.join()}), ${p});
        }
      `}else{const y=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${f}) +
                gte * ((end - 1) * 2 - source + ${f});
        source -= start;
      `;g=`
        ${o} rc = outputLoc;
        ${y}
        result[0] = getChannel(getX(${c.join()}), ${p});
        ${l[r-1]} += 1;
        if(${h}) {
          ${y}
          result[1] = getChannel(getX(${c.join()}), ${p});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${y}
          result[2] = getChannel(getX(${c.join()}), ${p});
          ${l[r-1]} += 1;
          if(${h}) {
            ${y}
            result[3] = getChannel(getX(${c.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sne=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,i=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nne(s.shape,r,o):new tne(s.shape,r,o);return e.runWebGLProgram(i,[s],s.dtype)},rne={kernelName:Id,backendName:"webgl",kernelFunc:sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const one=`if (b == 0.0) return NAN;
  return mod(a, b);`,ine=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+$a+`
  return result;
`,ane=Nn({opSnippet:one,packedOpSnippet:ine}),lne={kernelName:Xl,backendName:"webgl",kernelFunc:ane};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class une{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cne=`
if (a == b) {
  return 1.0;
};
return a / b;`,dne=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,LA=Nn({opSnippet:cne,packedOpSnippet:dne,checkOutOfBounds:!0}),hne={kernelName:_l,backendName:"webgl",kernelFunc:LA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MC="return a - b;",PA=Nn({opSnippet:MC,packedOpSnippet:MC,supportsComplex:!0,cpuKernelImpl:oY}),pne={kernelName:du,backendName:"webgl",kernelFunc:PA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=Xe([o],r.shape),a=FA({inputs:{x:r},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),l=Bt(a.shape,i),c=ke({inputs:{x:a},backend:t,attrs:{shape:l}}),h=PA({inputs:{a:r,b:c},backend:t}),p=DA({inputs:{x:h},backend:t}),f=ry({inputs:{x:p},backend:t,attrs:{axis:i,keepDims:!1}}),g=ke({inputs:{x:f},backend:t,attrs:{shape:l}}),y=LA({inputs:{a:p,b:g},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),y}const fne={kernelName:Hd,backendName:"webgl",kernelFunc:zA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mne(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:a}=s,l=a?r:zA({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),c=l.shape[0],h=l.shape[1],p=new une(c,h,o),f=[[i]],g=t.runWebGLProgram(p,[l],"int32",f);return a||t.disposeIntermediateTensorInfo(l),g}const gne={kernelName:Cm,backendName:"webgl",kernelFunc:mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yne=Js+`
  return -x;
`,xne=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function wne(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[i,a]=B9(o.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,i)}let r;return se().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Xo(s.shape,xne):r=new Or(s.shape,yne),t.runWebGLProgram(r,[s],s.dtype)}const bne={kernelName:Td,backendName:"webgl",kernelFunc:wne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vne=Og;function Sne(n){$s("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),{selectedIndices:p}=vne(c,h,i,a,l);return t.makeTensorInfo([p.length],"int32",new Int32Array(p))}const kne={kernelName:$m,backendName:"webgl",kernelFunc:Sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nne=Fg;function Cne(n){$s("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,h=t.readSync(r.dataId),p=t.readSync(o.dataId),{selectedIndices:f,validOutputs:g}=Nne(h,p,i,a,l,c);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([],"int32",new Int32Array([g]))]}const $ne={kernelName:Im,backendName:"webgl",kernelFunc:Cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ine=Lg;function Tne(n){$s("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,h=t.readSync(r.dataId),p=t.readSync(o.dataId),f=i,g=a,y=l,b=c,{selectedIndices:w,selectedScores:v}=Ine(h,p,f,g,y,b);return[t.makeTensorInfo([w.length],"int32",new Int32Array(w)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const Ene={kernelName:Tm,backendName:"webgl",kernelFunc:Tne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rne{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ane=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:i,onValue:a,offValue:l}=s,c=le(r.shape),h=new Rne(c,i,a,l),p=ke({inputs:{x:r},backend:t,attrs:{shape:[c]}}),f=t.runWebGLProgram(h,[p],o);t.disposeIntermediateTensorInfo(p);const g=[...r.shape,i],y=ke({inputs:{x:f},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(f),y},Dne={kernelName:Ad,backendName:"webgl",kernelFunc:Ane};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gf(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=Ah({inputs:{input:s},backend:t}),o=Gf({inputs:{x:r},backend:t}),i=oy({inputs:{input:s},backend:t}),a=Gf({inputs:{x:i},backend:t}),l=vi({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Dh({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const _ne={kernelName:Xd,backendName:"webgl",kernelFunc:Gf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=Ah({inputs:{input:s},backend:t}),o=MA({inputs:{x:r},backend:t}),i=oy({inputs:{input:s},backend:t}),a=Gf({inputs:{x:i},backend:t}),l=vi({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}else return Dh({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const One={kernelName:Rd,backendName:"webgl",kernelFunc:MA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fne(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return m1({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(h=>{bn(o,h.shape,"All tensors passed to stack must have matching shapes"),D(i===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(h=>{const p=m1({inputs:{input:h},backend:t,attrs:{dim:r}});return a.push(p),p}),c=NA({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const Lne={kernelName:Dd,backendName:"webgl",kernelFunc:Fne};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pne{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const r=e.length,o=mt(r),i=t.map(c=>c[0]).join(","),a=t.map((c,h)=>c[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zne{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((b,w)=>b[0]+e[w]+b[1]);const r=e.length,o=mt(r),i=t.map(b=>b[0]).join(","),a=t.map((b,w)=>b[0]+e[w]).join(","),l=Vn("rc",r),c=Vn("source",r),h=`${l[r-1]} < ${this.outputShape[r-1]}`,p=r===1?"source":`vec2(${c.slice(-2).join()})`,f=[`${o} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${h}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${h}) {`],g=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let y="";for(let b=0,w=r===1?2:4;b<w;b++)y+=`
        ${f[b]}
        if (${g}) {
          result[${b}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${b}] = getChannel(getX(${c.join()}), ${p});
        }
      `;y+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BA=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;if(le(r.shape)===0){const c=o.map((h,p)=>h[0]+r.shape[p]+h[1]);return Dh({backend:t,attrs:{shape:c,value:i,dtype:r.dtype}})}const a=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zne(r.shape,o,i):new Pne(r.shape,o,i),l=[[i]];return t.runWebGLProgram(a,[r],r.dtype,l)},Mne={kernelName:_d,backendName:"webgl",kernelFunc:BA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bne=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Vne=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+$a+`
  return result;
`,Wne=Nn({opSnippet:Bne,packedOpSnippet:Vne}),Une={kernelName:Ql,backendName:"webgl",kernelFunc:Wne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,a=r.shape.length,l=[],c=Xe(o,r.shape);let h=c;const p=Ot(h,a);let f=r;p!=null&&(f=Wn({inputs:{x:r},backend:t,attrs:{perm:p}}),h=Vt(h.length,a),l.push(f)),Sn("prod",h,a);let g;if(t.shouldExecuteOnCPU([f])){const y=t.texData.get(f.dataId).values,{outVals:b,outShape:w,outDtype:v}=W9(f.shape,f.dtype,y,h);g=t.makeTensorInfo(w,v,b)}else{const[y,b]=hn(f.shape,h),w=le(b),v=ke({inputs:{x:f},backend:t,attrs:{shape:[-1,w]}}),S=eg(r.dtype),$=Ia(v,S,"prod",t);g=ke({inputs:{x:$},backend:t,attrs:{shape:y}}),l.push(v),l.push($)}if(i){l.push(g);const y=Bt(g.shape,c);g=ke({inputs:{x:g},backend:t,attrs:{shape:y}})}return l.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}const Hne={kernelName:Fd,backendName:"webgl",kernelFunc:Gne};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jne(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=s,l=r.map(v=>t.readSync(v.dataId)),c=r.map(v=>v.shape),h=t.readSync(o.dataId),p=t.readSync(i.dataId),[f,g,y]=U9(l,c,h,o.shape,o.dtype,p,i.shape,a),b=f.map(v=>t.makeTensorInfo([v.length],"int32",v)),w=t.makeTensorInfo(y,o.dtype,g);return b.concat([w])}const qne={kernelName:Em,backendName:"webgl",kernelFunc:jne};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kne(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[c,h]=G9(i,s.shape,s.dtype,a,r.shape,l,o.shape),p=t.makeTensorInfo([c.length],"int32",c),f=t.makeTensorInfo([h.length],s.dtype,h);return[p,f]}const Xne={kernelName:Rm,backendName:"webgl",kernelFunc:Kne};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yne(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.readSync(r.dataId),h=t.readSync(o.dataId),p=t.readSync(i.dataId),f=a.map(w=>t.readSync(w.dataId)),g=a.map(w=>w.shape),[y,b]=H9(c,r.shape,h,o.shape,o.dtype,p,i.shape,f,g,l);return t.makeTensorInfo(y,o.dtype,b)}const Qne={kernelName:Am,backendName:"webgl",kernelFunc:Yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,a=j9(s,r,o,i);return e.makeTensorInfo([a.length],i,a)},Zne={kernelName:Dm,backendName:"webgl",kernelFunc:VA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jne="return 1.0 / x;",ese=nt({opSnippet:Jne}),tse={kernelName:Zl,backendName:"webgl",kernelFunc:ese};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nse=Js+`
  return (x < 0.0) ? 0.0 : x;
`,sse=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rse=nt({opSnippet:nse,packedOpSnippet:sse}),ose={kernelName:Jl,backendName:"webgl",kernelFunc:rse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ise=Js+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ase=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,lse=nt({opSnippet:ise,packedOpSnippet:ase}),use={kernelName:eu,backendName:"webgl",kernelFunc:lse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cse{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const h=[r&&t>1?a-1:a,r&&s>1?l-1:l],p=[r&&t>1?t-1:t,r&&s>1?s-1:s];let f;o?f="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/p[0]},
          ${h[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dse{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const h=[r&&t>1?a-1:a,r&&s>1?l-1:l],p=[r&&t>1?t-1:t,r&&s>1?s-1:s];let f;o?f="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/p[0]},
          ${h[1]/p[1]},
          ${h[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hse(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,c]=a,h=se().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new dse(r.shape,l,c,o,i):new cse(r.shape,l,c,o,i);return t.runWebGLProgram(h,[r],"float32")}const pse={kernelName:zd,backendName:"webgl",kernelFunc:hse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fse{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],h=l[0]/c[0],p=l[1]/c[1],f=1/h,g=1/p,y=Math.ceil(f)*2+2,b=Math.ceil(g)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${p});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${g});

        const int winHeight = int(${y});
        const int winWidth = int(${b});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mse(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new fse(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const gse={kernelName:Fm,backendName:"webgl",kernelFunc:mse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yse{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const h=[r&&t>1?a-1:a,r&&s>1?l-1:l],p=[r&&t>1?t-1:t,r&&s>1?s-1:s],f=r?"0.5":"0.0";let g;o?g="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":g="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/p[0]},
          ${h[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${g};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xse{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,l,c]=e;this.outputShape=[i,t,s,c];const h=[r&&t>1?a-1:a,r&&s>1?l-1:l],p=[r&&t>1?t-1:t,r&&s>1?s-1:s],f=r?"0.5":"0.0";let g;o?g="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":g="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/p[0]},
          ${h[1]/p[1]},
          ${h[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${g};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wse(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:a}=s,[l,c]=a,h=se().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xse(r.shape,l,c,o,i):new yse(r.shape,l,c,o,i);return t.runWebGLProgram(h,[r],r.dtype)}const bse={kernelName:Pd,backendName:"webgl",kernelFunc:wse};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vse{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,a]=e,l=[s&&i>1?r-1:r,s&&a>1?o-1:o],c=[s&&i>1?i-1:i,s&&a>1?a-1:a],h=l[0]/c[0],p=l[1]/c[1],f=1/h,g=1/p,y=Math.ceil(f)*2+2,b=Math.ceil(g)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${p});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${g});

        const int winHeight = int(${y});
        const int winWidth = int(${b});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sse(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,a=new vse(o.shape,r.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const kse={kernelName:Om,backendName:"webgl",kernelFunc:Sse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nse{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,o=e.map((a,l)=>r(l)).join(","),i=mt(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cse{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=Vn("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=mt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${o}){
            result.g = ${c(r.slice())};
          }
          if(${i}) {
            result.b = ${h(r.slice())};
            if(${o}) {
              result.a = ${p(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(y){return f(y)}function c(y){return y[s-1]="("+y[s-1]+" + 1)",f(y)}function h(y){return y[s-2]="("+y[s-2]+" + 1)",f(y)}function p(y){return y[s-1]="("+y[s-1]+" + 1)",y[s-2]="("+y[s-2]+" + 1)",f(y)}function f(y){const b=e.map((S,$)=>g($,y)),w=b.join(","),v=b.slice(-2).join(",");return`getChannel(getX(${w}), vec2(${v}))`}function g(y,b){return t.indexOf(y)!==-1&&e[y]!==1?`${e[y]} - ${b[y]} - 1`:`${b[y]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $se(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length,a=Xe(o,r.shape);if(i===0)return xs({inputs:{x:r},backend:t});const l=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cse(r.shape,a):new Nse(r.shape,a);return t.runWebGLProgram(l,[r],r.dtype)}const Ise={kernelName:Md,backendName:"webgl",kernelFunc:$se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tse{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ese={kernelName:Zm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,a=t,l=new Tse(s.shape,o),[c,h]=sb(i,s.shape[1],s.shape[2]),p=[[c,h,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rse=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Ase=nt({opSnippet:Rse}),Dse={kernelName:tu,backendName:"webgl",kernelFunc:Ase};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _se="return inversesqrt(x);",Ose=nt({opSnippet:_se,cpuKernelImpl:q9}),Fse={kernelName:nu,backendName:"webgl",kernelFunc:Ose};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lv{constructor(e,t,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const c=mt(o.length),h=mt(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const f=`getIndices(${p})`;let g="";r===1?g="i":r===2&&(g="i, coords[1]");const y=`getUpdates(${g})`;let b="";l&&(b="coords[0], coords[1]");const w=`getDefaultValue(${b})`,v=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${h} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${f});
              flattenedIndex += index * ${v};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${y};
              found = true;
            }
          }
          setOutput(mix(${w}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lse{constructor(e,t,s,r,o,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const c=mt(o.length),h=mt(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const f=`getIndices(${p})`;let g="";r===1?g="i":r===2&&(g="i, coords[1]");const y=`getUpdates(${g})`;let b="";l&&(b="coords[0], coords[1]");const w=`getDefaultValue(${b})`,v=t>1?"strides[j]":"strides",S=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${h} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${f});
              flattenedIndex += index.xz * ${v};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${S};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${y};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${w}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pse(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=xi(o,r,i),f=[p/c,c];if(p===0)return t.makeTensorInfo(i,r.dtype);const g=ke({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),y=ke({inputs:{x:o},backend:t,attrs:{shape:[l,c]}}),b=t.makeTensorInfo([],"float32",new Float32Array([0]));let w;se().getBool("WEBGL_PACK")?w=new Lse(l,a,g.shape.length,y.shape.length,h,f):w=new lv(l,a,g.shape.length,y.shape.length,h,f);const v=t.runWebGLProgram(w,[y,g,b],y.dtype),S=ke({inputs:{x:v},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(b),S}const zse={kernelName:Lm,backendName:"webgl",kernelFunc:Pse};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mse{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=se().getNumber("WEBGL_VERSION")===2?o:i,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bse(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:i}=s,a=new Mse(r.shape[0],r.shape[1],o.shape[1],i),l=[[r.shape[1]]];return t.runWebGLProgram(a,[r,o],"int32",l)}const Vse={kernelName:zm,backendName:"webgl",kernelFunc:Bse};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wse{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let h=0;h<t.length;h++)c.push(`${a[h]}`),h<e&&l.push(`${a[h]}`);r=l.join(),o=c.join()}const i=mt(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Use(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new Wse(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(i,[s,r,o],Qn(r.dtype,o.dtype))}const Gse={kernelName:Bd,backendName:"webgl",kernelFunc:Use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hse=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Vg};
  float scale = ${Wg};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,jse=nt({opSnippet:Hse}),qse={kernelName:su,backendName:"webgl",kernelFunc:jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kse=Ru+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Xse=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Yse=nt({opSnippet:Kse,packedOpSnippet:Xse,cpuKernelImpl:X9}),Qse={kernelName:au,backendName:"webgl",kernelFunc:Yse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zse=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Jse=nt({opSnippet:Zse}),ere={kernelName:iu,backendName:"webgl",kernelFunc:Jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tre=Ru+`
  return sin(x);
`,nre=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${$a}
  return result;
`,sre=nt({opSnippet:tre,packedOpSnippet:nre}),rre={kernelName:ru,backendName:"webgl",kernelFunc:sre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ore=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,ire=nt({opSnippet:ore}),are={kernelName:ou,backendName:"webgl",kernelFunc:ire};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lre=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ure=nt({opSnippet:lre}),cre={kernelName:lu,backendName:"webgl",kernelFunc:ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dre=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;D(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((v,S)=>v*S),l=[[0,0]];l.push(...i);for(let v=1+o.length;v<r.shape.length;++v)l.push([0,0]);const c=[],h=BA({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),p=gh(h.shape,o,a,!1),f=yh(p.length,o.length,!1),g=xh(h.shape,o,a,!1),y=ke({inputs:{x:h},backend:t,attrs:{shape:p}}),b=Wn({inputs:{x:y},backend:t,attrs:{perm:f}}),w=ke({inputs:{x:b},backend:t,attrs:{shape:g}});return c.push(h),c.push(y),c.push(b),c.forEach(v=>t.disposeIntermediateTensorInfo(v)),w},hre={kernelName:Ud,backendName:"webgl",kernelFunc:dre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pre(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),c=t.readSync(o.dataId),h=t.readSync(i.dataId)[0],[p,f,g,y,b]=Q9(a,s.shape,s.dtype,l,r.dtype,c,h);return[t.makeTensorInfo(f,s.dtype,p),t.makeTensorInfo([f[0]],r.dtype,g),t.makeTensorInfo([y.length],"bool",new Uint8Array(y.map(w=>Number(w)))),t.makeTensorInfo([b.length],s.dtype,new Int32Array(b))]}const fre={kernelName:Mm,backendName:"webgl",kernelFunc:pre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mre(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.readSync(r.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(o.dataId)),[c,h,p]=Z9(a,s.shape,s.dtype,i,l);return[t.makeTensorInfo(h,s.dtype,c),t.makeTensorInfo([p.length],o.dtype,new Int32Array(p))]}const gre={kernelName:Bm,backendName:"webgl",kernelFunc:mre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yre(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[c,h]=dA(i,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(h,s.dtype,c)}const xre={kernelName:Vm,backendName:"webgl",kernelFunc:yre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wre(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(o.dataId),[c,h]=dA(i,s.shape,s.dtype,a,l);return t.makeTensorInfo(h,s.dtype,c)}const bre={kernelName:Wm,backendName:"webgl",kernelFunc:wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vre(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:h,strides:p,outputSize:f}=xi(o,r,a),g=!1;if(o.dtype==="string"){const v=t.bufferSync(r),S=t.bufferSync(o),$=ho(t.readSync(i.dataId)[0]),N=K9(v,S,a,f,h,c,l,p,$,g);return t.makeTensorInfo(a,N.dtype,N.values)}const y=new lv(c,l,r.shape.length,o.shape.length,p,[f,1],g),b=t.runWebGLProgram(y,[o,r,i],o.dtype),w=ke({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(b),w}const Sre={kernelName:Um,backendName:"webgl",kernelFunc:vre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,a=Xe(i,r.shape)[0],l=xb(r,o,a),c=r.shape.length,h=new Array(c).fill(0),p=r.shape.slice();return l.map(f=>{const g=[...p];g[a]=f;const y=Au({inputs:{x:r},backend:t,attrs:{begin:h,size:g}});return h[a]+=f,y})}const Nre={kernelName:Gd,backendName:"webgl",kernelFunc:kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC="return sqrt(x);",Cre=nt({opSnippet:BC,packedOpSnippet:BC,cpuKernelImpl:J9}),$re={kernelName:uu,backendName:"webgl",kernelFunc:Cre};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ire="return x * x;",Tre=nt({opSnippet:Ire}),Ere={kernelName:Gm,backendName:"webgl",kernelFunc:Tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC="return (a - b) * (a - b);",Rre=Nn({opSnippet:VC,packedOpSnippet:VC}),Are={kernelName:cu,backendName:"webgl",kernelFunc:Rre};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(r.dataId),i=go(o),a=eY(i,"string",s);return t.makeTensorInfo(r.shape,"string",a)}const _re={kernelName:jd,backendName:"webgl",kernelFunc:Dre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ore({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=Js+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Or(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const Fre={kernelName:mu,backendName:"webgl",kernelFunc:Ore};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lre{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=mt(s.length),i=mt(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((c,h)=>(l++,s.length===1?`coords * strides[${h}] + begin[${h}]`:`coords[${l-1}] * strides[${h}] + begin[${h}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:a,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:f}=s,{finalShapeSparse:g,finalShape:y,isIdentity:b,sliceDim0:w,isSimpleSlice:v,begin:S,end:$,strides:N}=Jw(r.shape,o,i,a,l,c,h,p,f);let T;if(b)T=ke({inputs:{x:r},backend:t,attrs:{shape:y}});else if(w||v){D(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const L=Yw(S,$,N),P=Au({inputs:{x:r},backend:t,attrs:{begin:S,size:L}});T=ke({inputs:{x:P},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(P)}else if(t.shouldExecuteOnCPU([r])){const P=t.readSync(r.dataId),O=He(r.shape,r.dtype,P),F=tY(g,O,N,S);T=t.makeTensorInfo(y,r.dtype,F.values)}else{const P=new Lre(S,N,g);T=t.runWebGLProgram(P,[r],r.dtype)}const R=ke({inputs:{x:T},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(T),R}const zre={kernelName:Hm,backendName:"webgl",kernelFunc:Pre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mre(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:h,dataSplits:p}=e,f=t.readSync(h.dataId),g=t.readSync(p.dataId),[y,b]=nY(f,g,r,o,i,a,l,c);return[t.makeTensorInfo([y.length],"string",y),t.makeTensorInfo(p.shape,"int32",b)]}const Bre={kernelName:jm,backendName:"webgl",kernelFunc:Mre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vre(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(o.dataId),l=t.readSync(i.dataId)[0],[c,h,p]=sY(a,l,r),f=h.length;return[t.makeTensorInfo([f,2],"int32",c),t.makeTensorInfo([f],"string",h),t.makeTensorInfo([2],"int32",new Int32Array(p))]}const Wre={kernelName:qm,backendName:"webgl",kernelFunc:Vre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ure(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(o.dataId),a=rY(i,r);return t.makeTensorInfo(o.shape,"int32",a)}const Gre={kernelName:Km,backendName:"webgl",kernelFunc:Ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hre="return tan(x);",jre=nt({opSnippet:Hre}),qre={kernelName:hu,backendName:"webgl",kernelFunc:jre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kre=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Xre=nt({opSnippet:Kre}),Yre={kernelName:pu,backendName:"webgl",kernelFunc:Xre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qre(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:o,updates:i}=e,{sliceRank:a,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=xi(i,o,r.shape),f=[p/c,c];if(p===0)return t.makeTensorInfo(r.shape,o.dtype);const g=ke({inputs:{x:o},backend:t,attrs:{shape:[l,a]}}),y=ke({inputs:{x:i},backend:t,attrs:{shape:[l,c]}}),b=ke({inputs:{x:r},backend:t,attrs:{shape:f}}),w=new lv(l,a,g.shape.length,y.shape.length,h,f,!1,!0),v=t.runWebGLProgram(w,[y,g,b],b.dtype),S=ke({inputs:{x:v},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(v),S}const Zre={kernelName:Pm,backendName:"webgl",kernelFunc:Qre};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jre{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const r=mt(this.rank),o=eoe(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function eoe(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const l=t.readSync(r.dataId),c=r.dtype==="string"?l.map(f=>ho(f)):l,h=He(r.shape,r.dtype,c),p=iY(h,o);return t.makeTensorInfo(p.shape,p.dtype,p.values)}const i=new Jre(r.shape,o);return t.runWebGLProgram(i,[r],r.dtype)}const toe={kernelName:fu,backendName:"webgl",kernelFunc:WA};class noe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class soe{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zi(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function WC(n){let e=1;for(;e<n;)e*=2;return e}function roe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,a=se().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=se().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,h=c[c.length-1];if(t.shouldExecuteOnCPU([r])||h<a||o>l){const F=t.readSync(r.dataId),[E,W]=aY(F,c,r.dtype,o,i);return[t.makeTensorInfo(E.shape,E.dtype,E.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(o===0)return c[c.length-1]=0,[t.makeTensorInfo(c,r.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(h===1)return[r,Dh({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const p=t.texData.get(r.dataId),f=p!==null&&p.isPacked,g=f?t.unpackTensor(r):r,b=le(c)/h,w=ke({inputs:{x:g},attrs:{shape:[b,h]},backend:t});f&&zi(t,g);const v=WC(o),S=WC(h);let $=null;const N=()=>$===null?[w,w]:[w,$],T=(F,E,W)=>{const X=N(),ee=new noe(W),te=[[h],[$===null?1:0],[Number.NEGATIVE_INFINITY],[F],[E]],oe=$;$=t.runWebGLProgram(ee,X,"int32",te),zi(t,oe)};for(let F=1;F<v;F*=2){const E=F*2;for(let W=F;W>=1;W/=2)T(E,W,[b,S])}for(let F=S;F>v;F/=2){const E=N(),W=new soe([b,F/2]),ee=[[h],[$===null?1:0],[v]],Q=$;$=t.runWebGLProgram(W,E,"int32",ee),zi(t,Q);const te=v/2,oe=te*2;for(let U=te;U>=1;U/=2)T(oe,U,$.shape)}let R=$;$=Au({inputs:{x:$},backend:t,attrs:{begin:0,size:[b,o]}}),zi(t,R);let L=OA({inputs:{x:w,indices:$},backend:t,attrs:{axis:1,batchDims:1}});zi(t,w);const P=c.slice(0,-1);P.push(o),R=$,$=ke({inputs:{x:$},attrs:{shape:P},backend:t}),zi(t,R);const O=L;return L=ke({inputs:{x:L},attrs:{shape:P},backend:t}),zi(t,O),[L,$]}const ooe={kernelName:Xm,backendName:"webgl",kernelFunc:roe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ioe{constructor(e,t,s,r,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aoe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:l,outputShape:c}=s,[h,p,f,g]=r.shape,[y,b]=c??[p,f],w=[h,y,b,g],v=new ioe(p,f,i,a,l,w);return t.runWebGLProgram(v,[r,o],"float32")}const loe={kernelName:Ym,backendName:"webgl",kernelFunc:aoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uoe(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;Eh(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(o.dataId),{outputValues:a,outputShape:l,indices:c}=lY(i,r,o.shape,o.dtype);return[s.makeTensorInfo(l,o.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const coe={kernelName:Qm,backendName:"webgl",kernelFunc:uoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function doe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,a=i.shape.length,l=r.shape[o],c=new Array(a-1);let h=0;for(let b=0;b<a;b++)b!==o&&(c[h++]=i.shape[b]);const p=[],f=new Array(a).fill(0),g=i.shape.slice();g[o]=1;const y=new Array(l);for(let b=0;b<y.length;b++){f[o]=b;const w=Au({inputs:{x:i},backend:t,attrs:{begin:f,size:g}}),v=ke({inputs:{x:w},backend:t,attrs:{shape:c}});y[b]=v,p.push(w)}return p.forEach(b=>t.disposeIntermediateTensorInfo(b)),y}const hoe={kernelName:qd,backendName:"webgl",kernelFunc:doe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class poe{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/s);this.outputShape=[r,a];const l="0.0",c="sumValue",h=Math.floor(s/4)*4,p=s%4,f=`
        sumValue += dot(values, segFilter);
    `;let g="";o%s>0&&(g=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let y="";o%s>0&&(y=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${g}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${y}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${f}
        }

        int inIdx = inOffset + ${h};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${f}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${f}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${f}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function foe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,a=r.shape.length,l=[];let c=0;const h=Ot([c],a);let p=r;h!=null&&(p=Wn({inputs:{x:r},backend:t,attrs:{perm:h}}),l.push(p),c=Vt(1,a)[0]);const f=wT(p.shape,c,i),g=le([p.shape[c]]),y=ke({inputs:{x:p},backend:t,attrs:{shape:[-1,g]}});l.push(y);const b=eg(r.dtype),w=(N,T,R,L,P)=>{const O=N.shape[0],F=N.shape[1],E=xT(F,P),W={windowSize:E,inSize:F,batchSize:O,numSegments:P},X=new poe(W,T),ee=t.compileAndRun(X,[N,R],L);if(l.push(ee),ee.shape[1]===P)return ee;const Q=VA({backend:t,attrs:{start:0,stop:P,step:1,dtype:"float32"}}),te=WA({inputs:{x:Q},backend:t,attrs:{reps:[F/E]}});return l.push(Q),l.push(te),w(ee,T,te,L,P)},v=w(y,"unsortedSegmentSum",o,b,i),S=ke({inputs:{x:v},backend:t,attrs:{shape:f}});let $=S;if(h!=null){l.push(S);const N=fi(h);$=Wn({inputs:{x:$},backend:t,attrs:{perm:N}})}return l.forEach(N=>t.disposeIntermediateTensorInfo(N)),$}const moe={kernelName:Kd,backendName:"webgl",kernelFunc:foe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const goe=[JY,tQ,rQ,aQ,uQ,hQ,fQ,gQ,bQ,SQ,CQ,TQ,AQ,FQ,zQ,BQ,WQ,jQ,KQ,YQ,eZ,aZ,uZ,pZ,mZ,vZ,kZ,IZ,LY,RZ,FZ,MZ,HZ,KZ,YZ,ZZ,eJ,rJ,aJ,cJ,hJ,fJ,gJ,wJ,vJ,CJ,IJ,RJ,_J,FJ,MJ,UJ,qJ,YJ,JJ,eee,nee,ree,iee,lee,cee,fee,yee,bee,See,Cee,Tee,Dee,Lee,FY,zee,_Z,Vee,Gee,qee,zY,Qee,tte,ste,ate,cte,fte,yte,vte,Cte,Tte,Rte,Ote,Lte,zte,Wte,Gte,jte,Kte,Yte,ene,rne,lne,gne,VY,bne,kne,$ne,Ene,yZ,Dne,One,Lne,Mne,Une,BY,Hne,qne,Xne,Qne,Zne,xZ,hne,tse,ose,use,UY,pse,gse,bse,kse,Ise,Ese,Dse,Fse,zse,Vse,Gse,qse,Qse,ere,rre,are,oZ,fne,cre,hre,fre,gre,xre,bre,Sre,Nre,$re,Ere,Are,_re,Fre,zre,Bre,Wre,Gre,pne,YY,qre,Yre,Zre,toe,ooe,loe,QY,coe,hoe,moe,_ne];for(const n of goe)Jm(n);var Cc={exports:{}};const yoe=g1(ZH),xoe=g1(SV);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var woe=Cc.exports,UC;function boe(){return UC||(UC=1,function(n,e){(function(t,s){s(e,yoe,xoe)})(woe,function(t,s,r){const o={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class i{constructor(l,c){this.modelPath=c||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(l)}/model.json`}getPrefix(l){return l==="lite_mobilenet_v2"?`ssd${l}`:`ssd_${l}`}async load(){this.model=await s.loadGraphModel(this.modelPath);const l=r.zeros([1,300,300,3],"int32"),c=await this.model.executeAsync(l);await Promise.all(c.map(h=>h.data())),c.map(h=>h.dispose()),l.dispose()}async infer(l,c,h){const p=r.tidy(()=>(l instanceof r.Tensor||(l=r.browser.fromPixels(l)),r.expandDims(l))),f=p.shape[1],g=p.shape[2],y=await this.model.executeAsync(p),b=y[0].dataSync(),w=y[1].dataSync();p.dispose(),r.dispose(y);const[v,S]=this.calculateMaxScores(b,y[0].shape[1],y[0].shape[2]),$=r.getBackend();r.getBackend()==="webgl"&&r.setBackend("cpu");const N=r.tidy(()=>{const R=r.tensor2d(w,[y[1].shape[1],y[1].shape[3]]);return r.image.nonMaxSuppression(R,v,c,h,h)}),T=N.dataSync();return N.dispose(),$!==r.getBackend()&&r.setBackend($),this.buildDetectedObjects(g,f,w,v,T,S)}buildDetectedObjects(l,c,h,p,f,g){const y=f.length,b=[];for(let w=0;w<y;w++){const v=[];for(let R=0;R<4;R++)v[R]=h[4*f[w]+R];const S=v[0]*c,$=v[1]*l,N=v[2]*c,T=v[3]*l;v[0]=$,v[1]=S,v[2]=T-$,v[3]=N-S,b.push({bbox:v,class:o[g[f[w]]+1].displayName,score:p[f[w]]})}return b}calculateMaxScores(l,c,h){const p=[],f=[];for(let g=0;g<c;g++){let y=Number.MIN_VALUE,b=-1;for(let w=0;w<h;w++)l[g*h+w]>y&&(y=l[g*h+w],b=w);p[g]=y,f[g]=b}return[p,f]}async detect(l,c=20,h=.5){return this.infer(l,c,h)}dispose(){this.model!=null&&this.model.dispose()}}t.ObjectDetection=i,t.load=async function(a={}){if(r==null)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const l=a.base||"lite_mobilenet_v2",c=a.modelUrl;if(["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(l)===-1)throw new Error(`ObjectDetection constructed with invalid base model ${l}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const h=new i(l,c);return await h.load(),h},t.version="2.2.3",Object.defineProperty(t,"__esModule",{value:!0})})}(Cc,Cc.exports)),Cc.exports}var voe=boe();const Soe=()=>{const[n,e]=ro.useState(!1),[t,s]=ro.useState(!1),[r,o]=ro.useState(!1),[i,a]=ro.useState(null),[l,c]=ro.useState(!0),h=ro.useRef(null),p=ro.useRef(null);ro.useEffect(()=>{(async()=>{try{const S=await voe.load();a(S)}catch(S){console.error("Error loading model:",S)}finally{c(!1)}})()},[]);const f=async v=>{const S=v.target.files[0];if(S&&i){const $=new FileReader;$.onload=()=>{const N=new Image;N.src=$.result,N.onload=()=>{y(N),b()}},$.readAsDataURL(S)}},g=()=>{!l&&p.current&&(p.current.value=null,p.current.click())},y=v=>{const S=h.current,$=S.getContext("2d"),N=S.clientWidth,T=N/v.width,R=v.height*T;S.width=N,S.height=R,$.clearRect(0,0,S.width,S.height),$.drawImage(v,0,0,N,R),o(!0)},b=async v=>{if(!i){console.error("Model not loaded yet");return}const S=h.current,$=await i.detect(S),N=$.some(R=>R.class.toLowerCase()==="sink"&&R.score>.1),T=$.some(R=>R.class.toLowerCase()==="cook-top"&&R.score>.1);e(N),s(T),w($)},w=v=>{const $=h.current.getContext("2d");v.forEach(N=>{const[T,R,L,P]=N.bbox,O=N.class.toLowerCase()==="sink",F=N.class.toLowerCase()==="cook-top";$.strokeStyle=O||F?"green":"red",$.lineWidth=2,$.strokeRect(T,R,L,P),$.fillStyle=O?"green":"red",$.font="16px Arial",$.fillText(`${N.class} (${(N.score*100).toFixed(1)}%)`,T,R>10?R-5:10)})};return Tn.jsxs("div",{style:{width:"100%",margin:"0 auto",textAlign:"center"},children:[Tn.jsx("h1",{children:"Object Detector"}),Tn.jsx("input",{ref:p,type:"file",accept:"image/*",style:{display:"none"},onChange:f,disabled:l}),Tn.jsxs("div",{onClick:g,style:{width:"100%",maxWidth:"80%",aspectRatio:"16 / 9",border:"2px dashed #aaa",margin:"20px auto",cursor:l?"not-allowed":"pointer",position:"relative",display:"flex",alignItems:"center",justifyContent:"center"},children:[Tn.jsx("canvas",{ref:h,style:{display:"block",width:"100%"}}),Tn.jsx("div",{style:{position:"absolute",textAlign:"center",fontSize:"18px",color:"#666",zIndex:10},children:l?"Loading model, please wait...":"Click to Upload Image"}),r&&!l&&Tn.jsxs(Tn.Fragment,{children:[Tn.jsxs("div",{style:{position:"absolute",bottom:"10px",right:"10px",color:"green",fontSize:"16px",backgroundColor:"rgba(255, 255, 255, 0.8)",padding:"5px"},children:["Cooktop Detected:"," ",Tn.jsx("span",{style:{color:"blue"},children:t?"true":"false"})]}),Tn.jsxs("div",{style:{position:"absolute",bottom:"10px",left:"10px",color:"green",fontSize:"16px",backgroundColor:"rgba(255, 255, 255, 0.8)",padding:"5px"},children:["Sink Detected:"," ",Tn.jsx("span",{style:{color:"blue"},children:n?"true":"false"})]})]})]})]})};function koe(){return Tn.jsx(Tn.Fragment,{children:Tn.jsx(Soe,{})})}j_.createRoot(document.getElementById("root")).render(Tn.jsx(ro.StrictMode,{children:Tn.jsx(koe,{})}));
